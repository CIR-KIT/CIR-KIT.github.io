<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[九州工業大学 CIR-KIT Blog]]></title>
  <link href="http://cir-kit.github.io/atom.xml" rel="self"/>
  <link href="http://cir-kit.github.io/"/>
  <updated>2015-02-26T17:20:23+09:00</updated>
  <id>http://cir-kit.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Greeting Arc]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/26/greeting-arc/"/>
    <updated>2015-02-26T00:00:00+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/26/greeting-arc</id>
    <content type="html"><![CDATA[<h4>概要</h4>

<p>トマトロボット競技会に参加するにあたって、新団体を設立しました。<!--more-->&ldquo;ARC&#8221;は&#8221;A(gricaltural)R(obot)C(lub)&#8221;の略です。
アークとでも呼んでください。</p>

<h4>代表挨拶</h4>

<p>機械知能工学科1年の下松八重です。</p>

<p>この度、ARCの代表を務めさせていただくことになりました。冬の大会本番に向けて努力していきます。まだまだ実力不足な為、学ぶことや助けられることばかりですがよろしくおねがいします。</p>

<h4>今後について</h4>

<p>今後はロボットアームの設計など課題山積です。一つずつクリアしていきます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CIR-KITメンバーがUbuntuをインストールしてまずすべきこと]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/25/we-have-get-to-work-when-install-ubuntu/"/>
    <updated>2015-02-25T20:31:54+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/25/we-have-get-to-work-when-install-ubuntu</id>
    <content type="html"><![CDATA[<h1>CIR-KIT開発環境への道</h1>

<h2>概要</h2>

<p>この記事はOSインストールからのCIR-KITでの環境を整えるまでの手順を残すためのものです。
なお、各手順の目的を達成できれば別の手段を使用しても構いません。</p>

<h2>重要度</h2>

<p>LOW</p>

<!--more-->


<h2>目的と手段の一覧</h2>

<p>推奨時系列順にすべきことをリストアップしました。強調部分は手段が確定しています。</p>

<table>
<thead>
<tr>
<th style="text-align:left;">目的</th>
<th style="text-align:left;">手段</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">日本語入力の獲得   </td>
<td style="text-align:left;">mozcを導入</td>
</tr>
<tr>
<td style="text-align:left;">gitの獲得</td>
<td style="text-align:left;"><strong>gitの導入</strong></td>
</tr>
<tr>
<td style="text-align:left;">githubへの参加</td>
<td style="text-align:left;"><strong>グループ(CIR-KIT)に招待を貰う</strong></td>
</tr>
<tr>
<td style="text-align:left;">blog更新手段の獲得</td>
<td style="text-align:left;"><strong>CIR-KIT.OctopressのWiki参照</strong></td>
</tr>
<tr>
<td style="text-align:left;">ROSの獲得</td>
<td style="text-align:left;"><strong>ROSの導入</strong></td>
</tr>
<tr>
<td style="text-align:left;">Gazeboの獲得</td>
<td style="text-align:left;"><strong>Gazeboの導入</strong></td>
</tr>
</tbody>
</table>


<h2>手段達成方法</h2>

<p>各手段の達成方法を記す。</p>

<hr />

<h3>日本語入力の獲得(Mozcの導入)</h3>

<p>デフォルトの設定では日本語入力ができなかったり、押したキーと別の文字が出たり(キー配列が英仕様として認識される)します。
ここでは、Mozc(もずく)によって日本語入力できるようにし、設定をしてキー配列を日仕様にします。</p>

<h4>この処置の結果</h4>

<p>日仕様のキー配列に対応し、半角全角キーで日本語と半角英数字の切り替えを行える。</p>

<h4>手順</h4>

<ol>
<li>Mozcをインストールする

<ul>
<li>コンソールで<strong>sudo apt-get install mozc</strong>を実行する</li>
</ul>
</li>
<li>PCを再起動する</li>
<li>テキスト入力設定を変更する

<ul>
<li>右上のWi-Fi設定の右隣にあるアイコンをクリックして、テキスト入力設定を選択</li>
<li>使用する日本語ソースを<strong>日本語</strong>,<strong>日本語(Mozc)</strong>の2つにする</li>
<li>次のソースへ切り替えのキーを半角全角キーにする</li>
</ul>
</li>
</ol>


<h4>確認方法</h4>

<p>どこでもいいのでテキストを入力する。半角全角キーで日本語入力と半角英数が切り替わるか確認する。</p>

<hr />

<h3>gitの獲得</h3>

<p>CIR-KITでの開発はgitによって管理される。gitはバージョン管理システムであり、CIR-KITメンバーはこれをインストールしなければならない。</p>

<h4>この処置の結果</h4>

<p>gitの使用が可能になる。</p>

<h4>手順</h4>

<ol>
<li>gitをインストールする

<ul>
<li>コンソールで<strong>sudo apt-get install git</strong>を実行する</li>
</ul>
</li>
</ol>


<h4>確認方法</h4>

<p>コンソールで<strong>git &ndash;version</strong>
を実行しversionを表す数字などが表示されればよい。</p>

<hr />

<h3>blog更新手段の獲得</h3>

<p>CIR-KITでは発見、紹介、残しておきたいことをブログにしている。これにより、自らの学んだ技術が残せるだけでなく、後世の者まで知識を利用できる。CIR-KITメンバーはこれを有効に利用するべし。</p>

<h4>この処置の結果</h4>

<p>CIR-KITのブログが更新できるようになる。</p>

<h4>手順</h4>

<p><a href="https://github.com/CIR-KIT/CIR-KIT.Octopress/wiki/Home">専用のwiki</a>を読むこと</p>

<h4>確認方法</h4>

<p>上記のWikiを参考にしてください。</p>

<hr />

<h3>ROSの獲得</h3>

<p>ROSはCIR-KITのロボット開発に使用されているものである。2015年現在これがないとCIE-KITのロボット開発ができない。</p>

<h4>この処置の結果</h4>

<p>ROSの環境が整い、ROSによるロボット開発が可能になる。</p>

<h4>手順</h4>

<p><a href="http://wiki.ros.org/ja">公式Wiki</a>を読んでください。</p>

<h4>確認方法</h4>

<p><a href="http://wiki.ros.org/ja">公式Wiki</a>を読んでください。</p>

<hr />

<h3>Gazeboの獲得</h3>

<p>Gazeboは3Dロボットシュミレータである。ROSとの連携が豊富という特徴を持つ。これによりロボットが完成する前からソフトの開発が可能になる。また、ハードとソフトの問題の切り分けも容易になる。</p>

<h4>この処置の結果</h4>

<p>Gazeboの環境が整う。</p>

<h4>手順</h4>

<ol>
<li>Gazeboをインストールする

<ul>
<li>コンソールで<strong>wget -O /tmp/gazebo4_install.sh <a href="http://osrf-distributions.s3.amazonaws.com/gazebo/gazebo4_install.sh;">http://osrf-distributions.s3.amazonaws.com/gazebo/gazebo4_install.sh;</a> sudo sh /tmp/gazebo4_install.sh</strong>を実行する</li>
</ul>
</li>
</ol>


<h4>確認方法</h4>

<p>コンソールでgazeboを実行して、Gazeboが立ち上がればよい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Education_plan]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/23/education-plan/"/>
    <updated>2015-02-23T14:24:10+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/23/education-plan</id>
    <content type="html"><![CDATA[<h1>新一年生勧誘＆教育計画（夏休みまで）</h1>

<h3>勧誘</h3>

<h4>学科別オリエンテーション</h4>

<ul>
<li>他団体をまとめる
　どの団体がプレゼンに参加するかを他団体に連絡を取る。しっかりと九工大にどんなものつくり系サークルがあるかを調べて、学科別オリエンテーションへの参加、不参加を質問してもらう。</li>
<li>各学科長（新年度）の許可
　学科別オリエンテーションをどの団体が行うかをまとめたものを書く学科長に申請する。
-プレゼン
C言語講習会、教育プログラム、活動内容
-ビラ</li>
</ul>


<p>-テーピング勧誘</p>

<h4>新入生オリエンテーション</h4>

<ul>
<li><p>ビラ作成
→ロボットを動かしながら勧誘作業を行う。実際に、ロボットの動いてるところを見せることで、簡単にどのようなロボットを作っているのかを説明ができる。また、オリエンテーションとは違い強い印象を与えることが期待できる。</p></li>
<li><p>新入生オリエンテーション
→ビュートローバーを軽く動かさせてみる。これにより、自分が書いたプログラムでロボットが動くことの面白さを体験してもらう。</p></li>
</ul>


<h3>教育</h3>

<ul>
<li><p>４月：ビュートローバーを用いてプログラムに慣れさせる  C言語講習会</p></li>
<li><p>５月：ビュートローバー大会開催  C言語の入門編まで理解する</p></li>
<li><p>以降：git,ROS,Gazeboをかじらせる。
　　　</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.6-6:GazeboをROSに繋ぐ (ROSにおけるGazeboのプラグイン 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/19/gazebo-gazebo-plugins-in-ros/"/>
    <updated>2015-02-19T03:23:21+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/19/gazebo-gazebo-plugins-in-ros</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/19/2015 (Thu)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第六弾「Connect to ROS」。
ROSはロボットの制御フレームワークです。このチュートリアルでは、GazeboとROSのインターフェースについて説明します。
今回はその「Gazebo Plugins in ROS」編です。
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>INTERMEDIATE</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=connect_ros">GAZEBO Tutorial-Connect to ROS</a></p>

<h2>チュートリアル : ROSとともにGazeboのプラグインを使う</h2>

<p>Gazeboのプラグインはあなたのrおボットモデルにより良い機能性を提供し、ROSのセンサ出力やモータ入力のためのメッセージやサービスコールと繋ぐことができる。このチュートリアルでは、すでに存在するプラグインをセットアップするやり方と、ROSとともに動作する独自のプラグインを作る方法を説明します。</p>

<h2>前提条件</h2>

<p><a href="https://cir-kit.github.io/blog/2015/02/17/gazebo-urdf-in-gazebo/">前回のURDFに関するチュートリアル</a>で述べた時のRRBotのセットアップを行っていることを確認してください。</p>

<h2>プラグインを追加する</h2>

<p>プラグインをURDFのメイン要素の多くに追加することができます。 - プラグインが注目し、目的としているものに依存している<code>&lt;robot&gt;</code>、<code>&lt;link&gt;</code>、<code>&lt;joint&gt;</code>などのことです。プラグインをあなたのURDFの主な要素に追加するには、<code>&lt;gazebo&gt;</code>要素にある<code>&lt;plugin&gt;</code>タグをラップする必要があります。</p>

<h3><code>&lt;robot&gt;</code>要素にプラグインを追加する</h3>

<p>以下に示すのは、URDFにある<code>&lt;robot&gt;</code>要素へのプラグインの例である。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;gazebo&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;differential_drive_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libdiffdrive_plugin.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    ... plugin parameters ...
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'><span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記の例のプラグインは<code>&lt;robot&gt;</code>要素に追加されている。なぜなら他の<code>&lt;gazebo&gt;</code>要素やプロパティをと同じように、もし<code>reference="x"</code>がないということは、<code>&lt;robot&gt;</code>全体を参照していると定義しているのである。<a href="http://gazebosim.org/sdf/">SDF</a>フォーマットでは、<code>&lt;model&gt;</code>を参照すると考えられる。</p>

<h3><code>&lt;link&gt;</code>要素にプラグインを追加する</h3>

<p><code>&lt;robot&gt;</code>要素での<code>&lt;plugin&gt;</code>と同じように、<code>reference"your_link_name"</code>とすることで、<code>&lt;link&gt;</code>に<code>&lt;plugin&gt;</code>要素を追加することが可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;gazebo</span> <span class="na">reference=</span><span class="s">&quot;your_link_name&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;your_link_laser_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_laser.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    ... plugin parameters ...
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'><span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>&lt;joint&gt;</code>要素にプラグインを追加する</h3>

<p>これはレファレンスの名前を除く、<code>&lt;link&gt;</code>の項で説明したものと同じで、<code>link</code>の部分を<code>joint</code>とします。</p>

<h2><code>gazebo_plugins</code>で利用可能なプラグイン</h2>

<p>以下のセクションでは、<code>gazebo_plugins</code>で利用可能なすべてのプラグインについて説明します。私達はこれらを閲覧することをおすすめします。というのも、さらなる詳細については最初のプラグインの組み合わせによってわかりづらくなっており、様々なプラグインのドキュメントからいくつかのコンセプトを学ぶことができるからです。<br/>
それぞれのセクションの名前はプラグインのクラスの名前によって決定されています。例えば、<strong>Block Laser</strong>は<code>GazeboRosBlockLaser</code>クラスから来ており、それは<code>gazebo_plugins/src/gazebo_ros_block_laser.cpp</code>の中にあります。<br/>
もしいくつかのセクションの空白があるなら、その筆者がすべてのプラグインを説明するのがめんどくさくなったということであり、そういったプラグインの使い方に関する知識と経験を積むことでそれを埋め合わさなければなりません。</p>

<h3>カメラ</h3>

<p><strong>注意 : </strong><code>CamderaInfo</code>や<code>Image ROS messages</code>を<code>sensormsgs</code>として記述し、publishすることにより、<code>wge100camera</code>のようなカメラをシミュレーションする際には、ROSインターフェースを用意してください。</p>

<h2>RRBotの例</h2>

<p>このセクションでは、RRBotの振り子型の腕の先に付けられた単純なRGBカメラについて検証してゆきます。以下の説明で、<code>rrbot.xacro</code>を見てゆくことができます。このブロックの最初の要素は、特別なリンクと、カメラを表すURDFファイルに追加されているジョイントについてです。カメラを表現するために、ここでは単純な赤い箱を使います。しかし、通常はより良い表現のために、メッシュファイルを使うことができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;camera_joint&quot;</span> <span class="na">type=</span><span class="s">&quot;fixed&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;axis</span> <span class="na">xyz=</span><span class="s">&quot;0 1 0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;${camera_link} 0 ${height3 - axel_offset*2}&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;parent</span> <span class="na">link=</span><span class="s">&quot;link3&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;child</span> <span class="na">link=</span><span class="s">&quot;camera_link&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- Camera --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;camera_link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 0&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;box</span> <span class="na">size=</span><span class="s">&quot;${camera_link} ${camera_link} ${camera_link}&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 0&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;box</span> <span class="na">size=</span><span class="s">&quot;${camera_link} ${camera_link} ${camera_link}&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;material</span> <span class="na">name=</span><span class="s">&quot;red&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mass</span> <span class="na">value=</span><span class="s">&quot;1e-5&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 0&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertia</span> <span class="na">ixx=</span><span class="s">&quot;1e-6&quot;</span> <span class="na">ixy=</span><span class="s">&quot;0&quot;</span> <span class="na">ixz=</span><span class="s">&quot;0&quot;</span> <span class="na">iyy=</span><span class="s">&quot;1e-6&quot;</span> <span class="na">iyz=</span><span class="s">&quot;0&quot;</span> <span class="na">izz=</span><span class="s">&quot;1e-6&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/link&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Xacroのプロパティもまた以下のように定義されています。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;xacro:property</span> <span class="na">name=</span><span class="s">&quot;camera_link&quot;</span> <span class="na">value=</span><span class="s">&quot;0.05&quot;</span> <span class="nt">/&gt;</span> <span class="c">&lt;!-- Size of square &#39;camera&#39; box --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>RRBotをlaunchし、アームの先に取り付けられたカメラを確認することができるはずです。</p>

<p>続いて、カメラの機能性を与え、ROSメッセージにイメージをpublishするGazeboのプラグインについて検証して行きます。RRBotでは、<code>rrbot.gazebo</code>ファイルにGazeboの要素を記述するという決まりに従ってきました。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;gazebo</span> <span class="na">reference=</span><span class="s">&quot;camera_link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sensor</span> <span class="na">type=</span><span class="s">&quot;camera&quot;</span> <span class="na">name=</span><span class="s">&quot;camera1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;update_rate&gt;</span>30.0<span class="nt">&lt;/update_rate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;camera</span> <span class="na">name=</span><span class="s">&quot;head&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;horizontal_fov&gt;</span>1.3962634<span class="nt">&lt;/horizontal_fov&gt;</span>
</span><span class='line'>        <span class="nt">&lt;image&gt;</span>
</span><span class='line'>          <span class="nt">&lt;width&gt;</span>800<span class="nt">&lt;/width&gt;</span>
</span><span class='line'>          <span class="nt">&lt;height&gt;</span>800<span class="nt">&lt;/height&gt;</span>
</span><span class='line'>          <span class="nt">&lt;format&gt;</span>R8G8B8<span class="nt">&lt;/format&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/image&gt;</span>
</span><span class='line'>        <span class="nt">&lt;clip&gt;</span>
</span><span class='line'>          <span class="nt">&lt;near&gt;</span>0.02<span class="nt">&lt;/near&gt;</span>
</span><span class='line'>          <span class="nt">&lt;far&gt;</span>300<span class="nt">&lt;/far&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/clip&gt;</span>
</span><span class='line'>        <span class="nt">&lt;noise&gt;</span>
</span><span class='line'>          <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>          <span class="c">&lt;!-- Noise is sampled independently per pixel on each frame.</span>
</span><span class='line'><span class="c">               That pixel&#39;s noise value is added to each of its color</span>
</span><span class='line'><span class="c">               channels, which at that point lie in the range [0,1]. --&gt;</span>
</span><span class='line'>          <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>          <span class="nt">&lt;stddev&gt;</span>0.007<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/noise&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/camera&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;camera_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_camera.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;alwaysOn&gt;</span>true<span class="nt">&lt;/alwaysOn&gt;</span>
</span><span class='line'>        <span class="nt">&lt;updateRate&gt;</span>0.0<span class="nt">&lt;/updateRate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;cameraName&gt;</span>rrbot/camera1<span class="nt">&lt;/cameraName&gt;</span>
</span><span class='line'>        <span class="nt">&lt;imageTopicName&gt;</span>image_raw<span class="nt">&lt;/imageTopicName&gt;</span>
</span><span class='line'>        <span class="nt">&lt;cameraInfoTopicName&gt;</span>camera_info<span class="nt">&lt;/cameraInfoTopicName&gt;</span>
</span><span class='line'>        <span class="nt">&lt;frameName&gt;</span>camera_link<span class="nt">&lt;/frameName&gt;</span>
</span><span class='line'>        <span class="nt">&lt;hackBaseline&gt;</span>0.07<span class="nt">&lt;/hackBaseline&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionK1&gt;</span>0.0<span class="nt">&lt;/distortionK1&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionK2&gt;</span>0.0<span class="nt">&lt;/distortionK2&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionK3&gt;</span>0.0<span class="nt">&lt;/distortionK3&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionT1&gt;</span>0.0<span class="nt">&lt;/distortionT1&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionT2&gt;</span>0.0<span class="nt">&lt;/distortionT2&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/sensor&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>このプラグインのいくつかのプラグインについて考えてみましょう&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;gazebo</span> <span class="na">reference=</span><span class="s">&quot;camera_link&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>&ldquo;camera_link&rdquo;</strong>というリンクの名前はXacroのURDFに追加した名前と一致しなければなりません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;sensor</span> <span class="na">type=</span><span class="s">&quot;camera&quot;</span> <span class="na">name=</span><span class="s">&quot;camera1&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>&ldquo;camera1&rdquo;</strong>というセンサの名前は他のセンサの名前と一致してはいけません。この名前は、アクセス可能なGazeboプラグインの中にあるものを除き、他のところで使用してはいけません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;update_rate&gt;</span>30.0<span class="nt">&lt;/update_rate&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Gazeboで何秒ごとに新しいカメライメージを取得するのかという値です。これはセンサがシミュレーションの間に行う最大のアップデートレートです。しかし、もし物理シミュレータがセンサジェネレーションの苦心より早ければ、この目標レートには到達しないこともあります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;horizontal_fov&gt;</span>1.3962634<span class="nt">&lt;/horizontal_fov&gt;</span>
</span><span class='line'>    <span class="nt">&lt;image&gt;</span>
</span><span class='line'>      <span class="nt">&lt;width&gt;</span>800<span class="nt">&lt;/width&gt;</span>
</span><span class='line'>      <span class="nt">&lt;height&gt;</span>800<span class="nt">&lt;/height&gt;</span>
</span><span class='line'>      <span class="nt">&lt;format&gt;</span>R8G8B8<span class="nt">&lt;/format&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/image&gt;</span>
</span><span class='line'>    <span class="nt">&lt;clip&gt;</span>
</span><span class='line'>      <span class="nt">&lt;near&gt;</span>0.02<span class="nt">&lt;/near&gt;</span>
</span><span class='line'>      <span class="nt">&lt;far&gt;</span>300<span class="nt">&lt;/far&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/clip&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>あなたの物理的なカメラハードウェアについての製造仕様と一致するように値を代入してください。ただし、ピクセルは正方形と仮定されているということを覚えてください。
加えて、ニアクリップとファークリップは、シミュレーション中でカメラが見ることのできる範囲内の距離のための、物体を上下を定義する<code>simulation-specific</code>パラメータです。これは、カメラのオプトメトリフレームの中で定義されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;camera_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_camera.so&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは、現在の<code>gazeboros/gazeboros_camera.cpp</code>ファイルにあり、共有物体としてリンク付けされています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;cameraName&gt;</span>rrbot/camera1<span class="nt">&lt;/cameraName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;imageTopicName&gt;</span>image_raw<span class="nt">&lt;/imageTopicName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;cameraInfoTopicName&gt;</span>camera_info<span class="nt">&lt;/cameraInfoTopicName&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここに、カメラが<code>image</code>、<code>topic</code>、<code>camera info topic</code>としてpublishしているrostopicを定義します。とぴくもRRBotでは、以下のようなものをsubscribeできるはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>/rrbot/camera1/image_raw
</span><span class='line'>/rrbot/camera1/camera_info
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;frameName&gt;</span>camera_link<span class="nt">&lt;/frameName&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>imageの座標系は、<code>tf</code>ツリーの下でpublishされています。</p>

<h2>RRBotの例を実行する</h2>

<p><code>rrbot.xacro</code>と<code>rrbot.gazebo</code>を保存したあと、RvizとGazeboをそれぞれ異なるターミナルでlaunchできるはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch rrbot_gazebo rrbot_world.launch
</span><span class='line'>roslaunch rrbot_description rrbot_rviz.launch
</span></code></pre></td></tr></table></div></figure>


<p>Rvizでは、<strong>Camera</strong>ディスプレイを追加し、<strong>image Topic</strong>を<code>/rrbot/camera1/</code>と設定してください。<br/>
前回のチュートリアルからは特に変更せず、上記のコマンドを実行すると、Rvizは以下の動画のようになるはずです。<br/>
尚、コーラのカンはわかりやすさのために設置しました。また、Gazeboでは、前回のチュートリアルと同様の動作が起きています。</p>

<div class="youtube-container">
<iframe width="420" height="315" src="https://www.youtube.com/embed/JlAculkV5Ug" frameborder="0" allowfullscreen></iframe>
</div>


<h3>マルチカメラ</h3>

<p><strong>説明 : </strong> マルチカメラは、イメージを当時にpublishするように、同時にシャッターを切ります。典型的には、ステレオカメラで使われており、普通の<code>Camera</code>プラグインのインターフェースと同じように使用されています。<br/>
<strong>注意 : </strong>現在は、ステレオカメラのみをサポートしています。<a href="https://github.com/osrf/gazebo_ros_pkgs/issues/13">Github issue</a>をご覧ください。</p>

<h4>Atlasのコードの例</h4>

<p>このコードの例では、左右のカメラがあります。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>In this code example there is both a left and right camera:
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;gazebo</span> <span class="na">reference=</span><span class="s">&quot;left_camera_frame&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sensor</span> <span class="na">type=</span><span class="s">&quot;multicamera&quot;</span> <span class="na">name=</span><span class="s">&quot;stereo_camera&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;update_rate&gt;</span>30.0<span class="nt">&lt;/update_rate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;camera</span> <span class="na">name=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;horizontal_fov&gt;</span>1.3962634<span class="nt">&lt;/horizontal_fov&gt;</span>
</span><span class='line'>        <span class="nt">&lt;image&gt;</span>
</span><span class='line'>          <span class="nt">&lt;width&gt;</span>800<span class="nt">&lt;/width&gt;</span>
</span><span class='line'>          <span class="nt">&lt;height&gt;</span>800<span class="nt">&lt;/height&gt;</span>
</span><span class='line'>          <span class="nt">&lt;format&gt;</span>R8G8B8<span class="nt">&lt;/format&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/image&gt;</span>
</span><span class='line'>        <span class="nt">&lt;clip&gt;</span>
</span><span class='line'>          <span class="nt">&lt;near&gt;</span>0.02<span class="nt">&lt;/near&gt;</span>
</span><span class='line'>          <span class="nt">&lt;far&gt;</span>300<span class="nt">&lt;/far&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/clip&gt;</span>
</span><span class='line'>        <span class="nt">&lt;noise&gt;</span>
</span><span class='line'>          <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>          <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>          <span class="nt">&lt;stddev&gt;</span>0.007<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/noise&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/camera&gt;</span>
</span><span class='line'>      <span class="nt">&lt;camera</span> <span class="na">name=</span><span class="s">&quot;right&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pose&gt;</span>0 -0.07 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>        <span class="nt">&lt;horizontal_fov&gt;</span>1.3962634<span class="nt">&lt;/horizontal_fov&gt;</span>
</span><span class='line'>        <span class="nt">&lt;image&gt;</span>
</span><span class='line'>          <span class="nt">&lt;width&gt;</span>800<span class="nt">&lt;/width&gt;</span>
</span><span class='line'>          <span class="nt">&lt;height&gt;</span>800<span class="nt">&lt;/height&gt;</span>
</span><span class='line'>          <span class="nt">&lt;format&gt;</span>R8G8B8<span class="nt">&lt;/format&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/image&gt;</span>
</span><span class='line'>        <span class="nt">&lt;clip&gt;</span>
</span><span class='line'>          <span class="nt">&lt;near&gt;</span>0.02<span class="nt">&lt;/near&gt;</span>
</span><span class='line'>          <span class="nt">&lt;far&gt;</span>300<span class="nt">&lt;/far&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/clip&gt;</span>
</span><span class='line'>        <span class="nt">&lt;noise&gt;</span>
</span><span class='line'>          <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>          <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>          <span class="nt">&lt;stddev&gt;</span>0.007<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/noise&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/camera&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;stereo_camera_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_multicamera.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;alwaysOn&gt;</span>true<span class="nt">&lt;/alwaysOn&gt;</span>
</span><span class='line'>        <span class="nt">&lt;updateRate&gt;</span>0.0<span class="nt">&lt;/updateRate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;cameraName&gt;</span>multisense_sl/camera<span class="nt">&lt;/cameraName&gt;</span>
</span><span class='line'>        <span class="nt">&lt;imageTopicName&gt;</span>image_raw<span class="nt">&lt;/imageTopicName&gt;</span>
</span><span class='line'>        <span class="nt">&lt;cameraInfoTopicName&gt;</span>camera_info<span class="nt">&lt;/cameraInfoTopicName&gt;</span>
</span><span class='line'>        <span class="nt">&lt;frameName&gt;</span>left_camera_optical_frame<span class="nt">&lt;/frameName&gt;</span>
</span><span class='line'>        <span class="c">&lt;!--&lt;rightFrameName&gt;right_camera_optical_frame&lt;/rightFrameName&gt;--&gt;</span>
</span><span class='line'>        <span class="nt">&lt;hackBaseline&gt;</span>0.07<span class="nt">&lt;/hackBaseline&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionK1&gt;</span>0.0<span class="nt">&lt;/distortionK1&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionK2&gt;</span>0.0<span class="nt">&lt;/distortionK2&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionK3&gt;</span>0.0<span class="nt">&lt;/distortionK3&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionT1&gt;</span>0.0<span class="nt">&lt;/distortionT1&gt;</span>
</span><span class='line'>        <span class="nt">&lt;distortionT2&gt;</span>0.0<span class="nt">&lt;/distortionT2&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/sensor&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>深度カメラ</h3>

<p><strong>説明 : </strong><code>Kinect</code>のようにセンサをシミュレートします。また、これは<code>Kinect</code>プラグインにもあります。将来的には、統合します。</p>

<h3>Openni Kinect</h3>

<p><strong>説明 : </strong><code>Xbox-Kinect</code>をシミュレートし、<a href="http://www.ros.org/wiki/openni_camera">Fuerteドキュメント</a>で説明されている、<code>Xbox kinect</code>用のROSドライバと一致するようなトピックをpublishします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;gazebo&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;${link_name}_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_openni_kinect.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;baseline&gt;</span>0.2<span class="nt">&lt;/baseline&gt;</span>
</span><span class='line'>    <span class="nt">&lt;alwaysOn&gt;</span>true<span class="nt">&lt;/alwaysOn&gt;</span>
</span><span class='line'>    <span class="nt">&lt;updateRate&gt;</span>1.0<span class="nt">&lt;/updateRate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;cameraName&gt;</span>${camera_name}_ir<span class="nt">&lt;/cameraName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;imageTopicName&gt;</span>/${camera_name}/depth/image_raw<span class="nt">&lt;/imageTopicName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;cameraInfoTopicName&gt;</span>/${camera_name}/depth/camera_info<span class="nt">&lt;/cameraInfoTopicName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;depthImageTopicName&gt;</span>/${camera_name}/depth/image_raw<span class="nt">&lt;/depthImageTopicName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;depthImageInfoTopicName&gt;</span>/${camera_name}/depth/camera_info<span class="nt">&lt;/depthImageInfoTopicName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;pointCloudTopicName&gt;</span>/${camera_name}/depth/points<span class="nt">&lt;/pointCloudTopicName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;frameName&gt;</span>${frame_name}<span class="nt">&lt;/frameName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;pointCloudCutoff&gt;</span>0.5<span class="nt">&lt;/pointCloudCutoff&gt;</span>
</span><span class='line'>    <span class="nt">&lt;distortionK1&gt;</span>0.00000001<span class="nt">&lt;/distortionK1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;distortionK2&gt;</span>0.00000001<span class="nt">&lt;/distortionK2&gt;</span>
</span><span class='line'>    <span class="nt">&lt;distortionK3&gt;</span>0.00000001<span class="nt">&lt;/distortionK3&gt;</span>
</span><span class='line'>    <span class="nt">&lt;distortionT1&gt;</span>0.00000001<span class="nt">&lt;/distortionT1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;distortionT2&gt;</span>0.00000001<span class="nt">&lt;/distortionT2&gt;</span>
</span><span class='line'>    <span class="nt">&lt;CxPrime&gt;</span>0<span class="nt">&lt;/CxPrime&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Cx&gt;</span>0<span class="nt">&lt;/Cx&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Cy&gt;</span>0<span class="nt">&lt;/Cy&gt;</span>
</span><span class='line'>    <span class="nt">&lt;focalLength&gt;</span>0<span class="nt">&lt;/focalLength&gt;</span>
</span><span class='line'>    <span class="nt">&lt;hackBaseline&gt;</span>0<span class="nt">&lt;/hackBaseline&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'><span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>GPUレーザー</h3>

<p><strong>説明 : </strong><code>sensor_msgs</code>で記述されている<code>LaserScan</code>メッセージを配信し、レーザーレンジセンサをシミュレートします。<a href="http://ros.org/wiki/hokuyo_node">Hokuyo Laser Scannersレファレンス</a>をご覧ください。<br/>
この例を試す前に、カメラをRRBotに追加した例をご覧ください。カメラを追加するのと同じように、新しいリンクとジョイントをRRBotのXacro URDFに追加することができます。今回は、外観モデルをカメラの時のように直方体だけで表現せず、メッシュを使います。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;hokuyo_joint&quot;</span> <span class="na">type=</span><span class="s">&quot;fixed&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;axis</span> <span class="na">xyz=</span><span class="s">&quot;0 1 0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 ${height3 - axel_offset/2}&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;parent</span> <span class="na">link=</span><span class="s">&quot;link3&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;child</span> <span class="na">link=</span><span class="s">&quot;hokuyo_link&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- Hokuyo Laser --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;hokuyo_link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 0&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;box</span> <span class="na">size=</span><span class="s">&quot;0.1 0.1 0.1&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 0&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;mesh</span> <span class="na">filename=</span><span class="s">&quot;package://rrbot_description/meshes/hokuyo.dae&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mass</span> <span class="na">value=</span><span class="s">&quot;1e-5&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 0&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertia</span> <span class="na">ixx=</span><span class="s">&quot;1e-6&quot;</span> <span class="na">ixy=</span><span class="s">&quot;0&quot;</span> <span class="na">ixz=</span><span class="s">&quot;0&quot;</span> <span class="na">iyy=</span><span class="s">&quot;1e-6&quot;</span> <span class="na">iyz=</span><span class="s">&quot;0&quot;</span> <span class="na">izz=</span><span class="s">&quot;1e-6&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/link&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、カメラの例の時と同様に、<code>rrbot.gazebo</code>にプラグインの情報を追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="c">&lt;!-- hokuyo --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;gazebo</span> <span class="na">reference=</span><span class="s">&quot;hokuyo_link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sensor</span> <span class="na">type=</span><span class="s">&quot;gpu_ray&quot;</span> <span class="na">name=</span><span class="s">&quot;head_hokuyo_sensor&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0 0 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visualize&gt;</span>false<span class="nt">&lt;/visualize&gt;</span>
</span><span class='line'>      <span class="nt">&lt;update_rate&gt;</span>40<span class="nt">&lt;/update_rate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ray&gt;</span>
</span><span class='line'>        <span class="nt">&lt;scan&gt;</span>
</span><span class='line'>          <span class="nt">&lt;horizontal&gt;</span>
</span><span class='line'>            <span class="nt">&lt;samples&gt;</span>720<span class="nt">&lt;/samples&gt;</span>
</span><span class='line'>            <span class="nt">&lt;resolution&gt;</span>1<span class="nt">&lt;/resolution&gt;</span>
</span><span class='line'>            <span class="nt">&lt;min_angle&gt;</span>-1.570796<span class="nt">&lt;/min_angle&gt;</span>
</span><span class='line'>            <span class="nt">&lt;max_angle&gt;</span>1.570796<span class="nt">&lt;/max_angle&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/horizontal&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/scan&gt;</span>
</span><span class='line'>        <span class="nt">&lt;range&gt;</span>
</span><span class='line'>          <span class="nt">&lt;min&gt;</span>0.10<span class="nt">&lt;/min&gt;</span>
</span><span class='line'>          <span class="nt">&lt;max&gt;</span>30.0<span class="nt">&lt;/max&gt;</span>
</span><span class='line'>          <span class="nt">&lt;resolution&gt;</span>0.01<span class="nt">&lt;/resolution&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/range&gt;</span>
</span><span class='line'>        <span class="nt">&lt;noise&gt;</span>
</span><span class='line'>          <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>          <span class="c">&lt;!-- Noise parameters based on published spec for Hokuyo laser</span>
</span><span class='line'><span class="c">               achieving &quot;+-30mm&quot; accuracy at range &lt; 10m.  A mean of 0.0m and</span>
</span><span class='line'><span class="c">               stddev of 0.01m will put 99.7% of samples within 0.03m of the true</span>
</span><span class='line'><span class="c">               reading. --&gt;</span>
</span><span class='line'>          <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>          <span class="nt">&lt;stddev&gt;</span>0.01<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/noise&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/ray&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;gazebo_ros_head_hokuyo_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_gpu_laser.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;topicName&gt;</span>/rrbot/laser/scan<span class="nt">&lt;/topicName&gt;</span>
</span><span class='line'>        <span class="nt">&lt;frameName&gt;</span>hokuyo_link<span class="nt">&lt;/frameName&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/sensor&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ほとんどのプロパティは自明ですが、以下のものを検証したいと思います。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;visualize&gt;</span>false<span class="nt">&lt;/visualize&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これが<code>true</code>の時は、GPUレーザのスキャンしている範囲内で半透明のレーザーレイが表示されます。これは視覚的に有効かもしれませんし、邪魔になるかもしれません。<br/>
この要素についてのより詳しい説明は、<a href="http://gazebosim.org/sdf/dev.html#sensor225">SDFドキュメント</a>に載っています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;topicName&gt;</span>/rrbot/laser/scan<span class="nt">&lt;/topicName&gt;</span>
</span><span class='line'><span class="nt">&lt;frameName&gt;</span>hokuyo_link<span class="nt">&lt;/frameName&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>publishしたいレーザースキャンのROSのトピック名を設定し、TFで使用した座標系の名前も設定します。</p>

<h2>RRBotの例を実行する</h2>

<p><code>rrbot.xacro</code>と<code>rrbot.gazebo</code>を保存した後、RvizとGazeboをそれぞれ異なるターミナルでlaunchできるはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>roslaunch rrbot_gazebo rrbot.launch
</span><span class='line'>roslaunch rrbot_description rrbot_rviz.launch
</span></code></pre></td></tr></table></div></figure>


<p>Rvizでは、<strong>LaserScan</strong>ディスプレイを追加し、<strong>Topic</strong>を<code>/rrbot/camera1/image_raw</code>としてください。<br/>
レーザースキャンラインがGazeboの環境下で確認できるはずです。振り子が揺れている間、レーザースキャンも揺れているのを確認することができます。もし、スキャンが薄すぎるなら、レーザースキャンの大きさをRvizにある<strong>LaserScan</strong>ディスプレイのプロパティから変更できます。大きさは、1[m]とするのが見やすいです。<br/>
この動作は、基本的に先ほど、カメラを追加した例と同じなので、動作の様子は省略します。<br/>
因みに、公式チュートリアルでは、家のモデルなど、大きめのモデルを設置し、動作確認をしています。いろいろ置いてみて、確かめてみましょう。</p>

<h3>レーザー</h3>

<p><strong>説明 : </strong>GPUレーザーの非GPU型のレーザーですが、基本的には同じコードを使用しています。GPUレーザーの説明をご覧ください。<br/>
RRBotで動かすためには、<code>rrbot.gazebo</code>を開き、以下の二行を変更してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> <span class="nt">&lt;sensor</span> <span class="na">type=</span><span class="s">&quot;gpu_ray&quot;</span> <span class="na">name=</span><span class="s">&quot;head_hokuyo_sensor&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> <span class="nt">&lt;/sensor&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>を</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;sensor</span> <span class="na">type=</span><span class="s">&quot;ray&quot;</span> <span class="na">name=</span><span class="s">&quot;head_hokuyo_sensor&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/sensor&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>に変更するのと、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;gazebo_ros_head_hokuyo_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_gpu_laser.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>を</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;gazebo_ros_head_hokuyo_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_laser.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>に変更してください。
できたら保存し、GPUレーザーの時と同じlaunchファイルでlaunchしてください。</p>

<h3>ブロックレーザー</h3>

<p><strong>説明 : </strong>グリッドスタイルのレーザレンジスキャナのシミュレーションを提供します。(例 : ヴェロダインセンサ)</p>

<h3>F3D (Force Feedback Ground Truth)</h3>

<p><strong>説明 : </strong>シミュレーションの中で<code>geometry_msgs</code>で記述されている<code>WrenchStampd</code>メッセージ上書きして、ボディへの外力を配信します。<a href="http://www.science.aster.ersdac.jspacesystems.or.jp/jp/glossary/jp/ku/ground_truth.html">Ground Truthとは&hellip;</a>
Description: broadcasts external forces on a body in simulation over WrenchStamped message as described in geometry_msgs.</p>

<h3>Force</h3>

<p><strong>説明 : </strong>シミュレーション中のボディに<code>Wrench</code>(<code>geometry_msgs</code>)を適用するためのROSのインターフェースです。</p>

<h3>IMU</h3>

<p><strong>説明 : </strong><a href="http://ros.org/wiki/microstrain_3dmgx2_imu">imu_node</a>をシミュレートします。</p>

<h3>Joint Pose Trajectory</h3>

<p><strong>説明 : </strong><code>jointtrajectoryaction</code>をlistenし、ジョイントの姿勢の設定をプレイバックします。シミュレートされている物理量や力を考慮することなく、ジョイントの設定を正しい位置に設定します。</p>

<h3>P3D (3D Position Interface for Ground Truth)</h3>

<p><strong>説明 : </strong>シミュレーション中のすべてのボディの慣性データを<code>nav_msg</code>に記述されているオドメトリメッセージのROSトピックへ配信します。</p>

<h3>プロジェクタ</h3>

<p><strong>説明 : </strong>ソースから静的テクスチャを表示します。これは、RP2のオリジナルヘッドカメラセンサなどで使用されています。詳しくは、<a href="http://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1rendering_1_1Projector.html">APIドキュメント</a>をご覧ください。</p>

<h3>Prosilicaカメラ</h3>

<p><strong>説明 : </strong><a href="http://www.ros.org/wiki/prosilica_camera">ROSのProsilicaカメラ</a>によって配信されるインターフェースをシミュレートします。<a href="https://bitbucket.org/hsu/nasa_r2_simulator/src/5ee1de067038749dcc133ed7cf87b45715cc4457/r2_gazebo/urdf/sensors/grasshopper2.gazebo.xacro?at=hsu">URDF Xacroマクロの例</a>はここです。</p>

<h3>バンパー</h3>

<p><strong>説明 : </strong><a href="http://ros.org/doc/api/gazebo_plugins/html/msg/ContactsState.html"><code>ContactsState</code>メッセージ</a>へコンタクトフィードバックを提供します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;gazebo&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;${name}_gazebo_ros_bumper_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_bumper.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;alwaysOn&gt;</span>true<span class="nt">&lt;/alwaysOn&gt;</span>
</span><span class='line'>    <span class="nt">&lt;updateRate&gt;</span>${update_rate}<span class="nt">&lt;/updateRate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bumperTopicName&gt;</span>${name}_bumper<span class="nt">&lt;/bumperTopicName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;frameName&gt;</span>world<span class="nt">&lt;/frameName&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'><span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Differential Drive</h3>

<p><strong>説明 : </strong>Gazeboでのデファレンシャルドライブロボットの基本的なコントローラを提供するモデルプラグインです。このプラグインを使用するには、ディファレンシャルドライブのロボットが必要です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;gazebo&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;differential_drive_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_diff_drive.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;alwaysOn&gt;</span>true<span class="nt">&lt;/alwaysOn&gt;</span>
</span><span class='line'>    <span class="nt">&lt;updateRate&gt;</span>${update_rate}<span class="nt">&lt;/updateRate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;leftJoint&gt;</span>base_link_right_wheel_joint<span class="nt">&lt;/leftJoint&gt;</span>
</span><span class='line'>    <span class="nt">&lt;rightJoint&gt;</span>base_link_left_wheel_joint<span class="nt">&lt;/rightJoint&gt;</span>
</span><span class='line'>    <span class="nt">&lt;wheelSeparation&gt;</span>0.5380<span class="nt">&lt;/wheelSeparation&gt;</span>
</span><span class='line'>    <span class="nt">&lt;wheelDiameter&gt;</span>0.2410<span class="nt">&lt;/wheelDiameter&gt;</span>
</span><span class='line'>    <span class="nt">&lt;torque&gt;</span>20<span class="nt">&lt;/torque&gt;</span>
</span><span class='line'>    <span class="nt">&lt;commandTopic&gt;</span>cmd_vel<span class="nt">&lt;/commandTopic&gt;</span>
</span><span class='line'>    <span class="nt">&lt;odometryTopic&gt;</span>odom<span class="nt">&lt;/odometryTopic&gt;</span>
</span><span class='line'>    <span class="nt">&lt;odometryFrame&gt;</span>odom<span class="nt">&lt;/odometryFrame&gt;</span>
</span><span class='line'>    <span class="nt">&lt;robotBaseFrame&gt;</span>base_footprint<span class="nt">&lt;/robotBaseFrame&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'><span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Skid Steering Drive</h3>

<p><strong>説明 : </strong>Gazeboでのスキッドステアリングドライブロボットの基本的なコントローラを提供するモデルプラグインです。(例 : Pioneer 3AT)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;gazebo&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;skid_steer_drive_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_skid_steer_drive.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;updateRate&gt;</span>100.0<span class="nt">&lt;/updateRate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;robotNamespace&gt;</span>/<span class="nt">&lt;/robotNamespace&gt;</span>
</span><span class='line'>    <span class="nt">&lt;leftFrontJoint&gt;</span>front_left_wheel_joint<span class="nt">&lt;/leftFrontJoint&gt;</span>
</span><span class='line'>    <span class="nt">&lt;rightFrontJoint&gt;</span>front_right_wheel_joint<span class="nt">&lt;/rightFrontJoint&gt;</span>
</span><span class='line'>    <span class="nt">&lt;leftRearJoint&gt;</span>back_left_wheel_joint<span class="nt">&lt;/leftRearJoint&gt;</span>
</span><span class='line'>    <span class="nt">&lt;rightRearJoint&gt;</span>back_right_wheel_joint<span class="nt">&lt;/rightRearJoint&gt;</span>
</span><span class='line'>    <span class="nt">&lt;wheelSeparation&gt;</span>0.4<span class="nt">&lt;/wheelSeparation&gt;</span>
</span><span class='line'>    <span class="nt">&lt;wheelDiameter&gt;</span>0.215<span class="nt">&lt;/wheelDiameter&gt;</span>
</span><span class='line'>    <span class="nt">&lt;robotBaseFrame&gt;</span>base_link<span class="nt">&lt;/robotBaseFrame&gt;</span>
</span><span class='line'>    <span class="nt">&lt;torque&gt;</span>20<span class="nt">&lt;/torque&gt;</span>
</span><span class='line'>    <span class="nt">&lt;topicName&gt;</span>cmd_vel<span class="nt">&lt;/topicName&gt;</span>
</span><span class='line'>    <span class="nt">&lt;broadcastTF&gt;</span>false<span class="nt">&lt;/broadcastTF&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'><span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ビデオプラグイン</h3>

<p><strong>説明 : </strong>Gazeboの中のOGREテクスチャ上のROSのイメージストリームを表示するビジュアルプラグインです。このプラグインは存在するリンク表面の一つのテクスチャを修正するだけでなく、新しいテクスチャを作ります。このテクスチャはXY平面に作られ、+Zの方向からなら見ることができます。このプラグインはテクスチャを変換するピクセルサイズが必要です。また、サイズが異なれば、ROSイメージメッセージに一致するようリサイズします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;gazebo</span> <span class="na">reference=</span><span class="s">&quot;display_screen_link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;visual&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;display_video_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_video.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;topicName&gt;</span>image<span class="nt">&lt;/topicName&gt;</span>
</span><span class='line'>      <span class="nt">&lt;height&gt;</span>120<span class="nt">&lt;/height&gt;</span>
</span><span class='line'>      <span class="nt">&lt;width&gt;</span>160<span class="nt">&lt;/width&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'><span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Planar Move Plugin</h3>

<p><strong>説明 : </strong><code>geometry_msgs/Twist</code>を使って水平面上を動かすために、任意の物体(簡単な例 : 箱、球、円柱)に適用可能なモデルプラグインです。このプラグインは、並進速度(XY)と角速度(Z)をすべてのサイクルで物体に入力することで動きます。<br/>
ここに完全なURDFの例を示します。このURDFではこのプラグインを使ったGazebo中の浮いている箱のコントロール方法を、異なる外観、衝突要素を使って示しています。<br/>
<strong>注意 : </strong>この物体にはありえない動きを避けるため、十分な慣性が必要です。この、ありえない動きとは与えられた速度と反転するなどの形で発生し得ます。慣性の値を大きくしてゆくことにより、望み通りに物体を動かすことができるようになります。また、重心を地面に近づけるというのも良い方法です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;robot</span> <span class="na">name=</span><span class="s">&quot;test_model&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- root link, on the ground just below the model origin --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;base_footprint&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>   <span class="nt">&lt;visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 0&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;box</span> <span class="na">size=</span><span class="s">&quot;0.001 0.001 0.001&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;base_link_joint&quot;</span> <span class="na">type=</span><span class="s">&quot;fixed&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0.0 0 1.25&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;parent</span> <span class="na">link=</span><span class="s">&quot;base_footprint&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;child</span> <span class="na">link=</span><span class="s">&quot;base_link&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- the model --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;base_link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mass</span> <span class="na">value=</span><span class="s">&quot;50&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 -1.25&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertia</span> <span class="na">ixx=</span><span class="s">&quot;50.0&quot;</span> <span class="na">ixy=</span><span class="s">&quot;0.0&quot;</span> <span class="na">ixz=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>        <span class="na">iyy=</span><span class="s">&quot;50.0&quot;</span> <span class="na">iyz=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>        <span class="na">izz=</span><span class="s">&quot;50.0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>    <span class="nt">&lt;visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;box</span> <span class="na">size=</span><span class="s">&quot;0.5 0.5 1.0&quot;</span> <span class="nt">/&gt;</span> <span class="c">&lt;!-- does not need to match collision --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>    <span class="nt">&lt;collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 -1.0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;cylinder</span> <span class="na">length=</span><span class="s">&quot;0.5&quot;</span> <span class="na">radius=</span><span class="s">&quot;0.25&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;gazebo&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;object_controller&quot;</span> <span class="na">filename=</span><span class="s">&quot;libgazebo_ros_planar_move.so&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;commandTopic&gt;</span>cmd_vel<span class="nt">&lt;/commandTopic&gt;</span>
</span><span class='line'>      <span class="nt">&lt;odometryTopic&gt;</span>odom<span class="nt">&lt;/odometryTopic&gt;</span>
</span><span class='line'>      <span class="nt">&lt;odometryFrame&gt;</span>odom<span class="nt">&lt;/odometryFrame&gt;</span>
</span><span class='line'>      <span class="nt">&lt;odometryRate&gt;</span>20.0<span class="nt">&lt;/odometryRate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;robotBaseFrame&gt;</span>base_footprint<span class="nt">&lt;/robotBaseFrame&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/gazebo&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/robot&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>テンプレート</h3>

<p><strong>説明 : </strong>自身のプラグインを書きたいと思っている方用のC++のプラグインテンプレートの例です。</p>

<h2>次のステップ</h2>

<p>次は、<code>controller/actuator/simulator</code>と<a href="http://gazebosim.org/tutorials/?tut=ros_control">Actuators, controllers, <code>ros_control</code></a>のタイトな統合のためにGazeboと統合された<code>ros_control</code>パッケージについて検証します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.6-5:GazeboをROSに繋ぐ (GazeboにおけるURDF 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/17/gazebo-urdf-in-gazebo/"/>
    <updated>2015-02-17T17:03:28+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/17/gazebo-urdf-in-gazebo</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/17/2015 (Tue)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第六弾「Connect to ROS」。
ROSはロボットの制御フレームワークです。このチュートリアルでは、GazeboとROSのインターフェースについて説明します。
今回はその「URDF in Gazebo」編です。
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>INTERMEDIATE</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=connect_ros">GAZEBO Tutorial-Connect to ROS</a></p>

<h2>チュートリアル : GazeboでURDFを使う</h2>

<p><a href="http://www.ros.org/wiki/urdf">Universal Robotic Description Format (URDF)</a>は、ロボットのすべての要素を記述するために、Gazeboでも使われている、XMLフォーマットを使用しています。URDFファイルをGazeboで使用し、Gazeboで適切に動作させるには、いくつかの追加シミュレーション定義のタグがにつようです。このチュートリアルでは、GazeboであなたのURDFベースのロボットを確実に動作させ、<code>sctatch</code>や二重定義フォーマットによる、分割SDFファイルを作るのを避けるために、必要な過程を説明します。プログラム内部では、Gazeboは自動で、URDFをSDFファイルに変換しています。</p>

<h2>背景</h2>

<p>URDFは使いやすく、ROSでも一般化されているフォーマットですが、多くの定義について欠陥があり、ロボティクスの発展的な内容を記述するには至っていません。URDFは、独立した、ひとつのロボットの、幾何学的要素と運動要素しか定義できません。また、URDFはロボットのいるシミュレータ上のロボットの姿勢を定義できません。さらに、ジョイントループ(平行なリンク機構)を定義できないだけでなく、摩擦などの要素を記述できないので、標準的なフォーマットではないのです。さらに加えて述べると、ロボットでない、証明や標高地図などを定義することはできません。<br/>
実際に使うという面では、URDFの文法は処理するのに重く、完全なフォーマットを行わず、XMLフォーマットを使用しています。これにより、URDFはより柔軟になっています。また、後方互換性ももちません。<br/>
こういった問題に対処し、URDFの欠陥を解決するために、Gazeboでは、<a href="http://gazebosim.org/sdf.html">Simulator Description Format (SDF</a>と呼ばれる新しいフォーマットが作られました。SDFは、worldレベル(シミュレーション環境を記述するレベル)からロボットレベル（ロボットを記述するレベル）に至るまで、全てにおいて、完全な記述です。
SDFは規模を自由に決定でき、修正要素を追加するのも簡単です。SDFフォーマット自体は、古いバージョンから新しいバージョンへ変換するために、シンプルなアップグレードツールを簡単に使用できるような、XMLを使って記述しています。<br/>
URDFをできるだけ完全なドキュメントとし、Gazeboでサポートしようとすることは、筆者の意図するところですが、読者にとっては、なぜ２つのフォーマットが存在し、それぞれに欠陥があるのか疑問に思うのは至極当然なことです。URDFをロボティクスにおkるニーズに完全に対応させることができれば、それは素晴らしいことです。</p>

<h2>Gazeboへの実装の概要</h2>

<p>URDFのロボットをGazeboで完全に動作させるにはたくさんのステップがあります。以下に示すのは、このチュートリアルの残りで述べる、詳細なステップの概要です。:</p>

<h3>必須条件</h3>

<ul>
<li><code>&lt;link&gt;</code>要素にある、<code>&lt;internal&gt;</code>要素は完全にかつ詳細に定義され、構成されている必要があります。</li>
</ul>


<h3>任意条件</h3>

<ul>
<li><code>&lt;gazebo&gt;</code>要素をすべての<code>&lt;link&gt;</code>に追加する

<ul>
<li>Gazeboのフォーマットに外観色を変換する</li>
<li>stlファイルをより良いテクスチャによってdaeファイルに変換する</li>
<li>センサプラグインを追加する</li>
</ul>
</li>
<li><code>&lt;gazebo&gt;</code>要素をすべての<code>&lt;link&gt;</code>に追加する

<ul>
<li>適切な同ダンパを定義する</li>
<li>アクチュエータの制御プラグインを追加する</li>
</ul>
</li>
<li><code>&lt;gazebo&gt;</code>要素をすべての<code>&lt;robot&gt;</code>要素に追加する</li>
<li>もし、ロボットが正確に<code>world/base_link</code>へ接続されるべきなら、<code>&lt;link name="world"/&gt;</code>を追加する</li>
</ul>


<h2>前提条件</h2>

<p>あなたのロボットをGazeboで起動させるために必要な最初のステップは、<a href="http://www.ros.org/wiki/urdf/Tutorials">ROS URDFチュートリアル</a>から、動作するURDFファイルを用意ことです。Gazeboであなたのロボットを動作させる前に、<a href="http://www.ros.org/wiki/rviz">Rviz</a>で表示して検証してください。このチュートリアルでは、<code>RRBot</code>というシンプルなデモ用ロボットを使います。このロボットを使っても自身のものを使ってもどちらでも構いません。</p>

<h3>RRBotを手に入れる</h3>

<p><code>RRBot</code>(Revolute-Revolute Manipulator Robot)は簡単な3つのリンク機構、2つのジョイントアームを持つロボットで、GazeboとURDFの様々な特徴を検証するのに使います。これは、基本的に<a href="http://en.wikipedia.org/wiki/Double_inverted_pendulum">２つの倒立振り子</a>であり、シミュレータでは、いくつかの面白い制御構想を検証します。<br/>
<code>RRBot</code>を手に入れるには、もし、<code>catkin</code>ワークスペースがあるなら、その<code>src</code>フォルダに、GitHubのレポジトリより<code>clone</code>し、ワークスペースをリビルドしてください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/catkin_ws/src/
</span><span class='line'>git clone https://github.com/ros-simulation/gazebo_ros_demos.git
</span><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>catkin_make
</span></code></pre></td></tr></table></div></figure>


<p>もし、何を言っているのかよくわからなけれが、先に、<a href="http://gazebosim.org/tutorials?tut=ros_overview">ROS Overview Tutorials</a>を読んでください。</p>

<h3>Rvizで見てみる</h3>

<p>すべてうまく行っているか確かめるために、<code>RRBot</code>をRvizでlaunchしてください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch rrbot_description rrbot_rviz.launch
</span></code></pre></td></tr></table></div></figure>


<p>すると、以下のようになるはずです。
<img src="http://cir-kit.github.io/images/2015-02-17-gazebo-urdf-in-gazebo/rrbot-rviz-1.png" alt="rrbot-rviz-1" />
もし、こうならなければ、<code>killall roscore</code>コマンドで起動中のすべての<code>roscore</code>プロセスを終了し、再びRVizをlaunchしてください。<br/>
また、２つのジョイントを動かすために、<code>Joint State Publisher</code>ウィンドウで<code>slider bars</code>を実行することもできるはずです。<br/>
Gazeboであなたのロボットが動くように変換するあいだ、Rvizや他のROSアプリケーションを終了させないということが重要です。なので、たまにRVizのロボットがすべてきちんと動いているか確かめるのは良いことです。</p>

<p><a href="http://cir-kit.github.io/blog/2015/02/14/gazebo-ros-overview/">ROSの概要</a>チュートリアルでは、Gazeboから直接<code>/jointstates</code>をpublishして、あなたのロボットの状態を表示するための、Rvizの使い方は飛ばしました。この例では、RVizのRRBotは、ダミーの<code>jointstate</code>パブリッシャーノード（スライドバー月のウィンドウ）からの<code>/jointstates</code>を取得(subscribe)しています。</p>

<h3>urdfのRRBotを試してみる</h3>

<p>このチュートリアルの残りでは、RRBotのURDFのいろいろな面を見てゆきます。早速ファイルを見てみましょう。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosed rrbot_description rrbot.xacro
</span></code></pre></td></tr></table></div></figure>


<p>いくつかのリンクやジョイントの計算を簡単にするために、<a href="http://ros.org/wiki/xacro">Xacro</a>を使用していることに注意してください。また、２つの追加ファイルもインクルードしています。
- rrbot.gazebo : ほとんどすべてのGazebo定義XML要素をタグに含むGazeboの定義ファイルです。
- materials.xacro : 文字列のRGBA値のための簡単なRVizのカラーファイルであり、必須のものではありませんが、あったほうが良い定義です。</p>

<h3>Gazeboで見てみる</h3>

<p>GazeboでもRRBotをlaunchできるはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch rrbot_gazebo rrbot_world.launch
</span></code></pre></td></tr></table></div></figure>


<p>launchされたGazeboのウィンドウで、直立した状態のロボットを確認できるはずです。デフォルトには物理シミュレータに恣意的な障害物が無いにも関わらず、数値エラーが始まりと当時に起こり、２つの倒立振子が数秒後に落ちます。以下に示すのは、RRBotが動いている（倒立振子が落ちている）途中の様子です。:
<img src="http://cir-kit.github.io/images/2015-02-17-gazebo-urdf-in-gazebo/rrbot-gazebo-1.png" alt="rrbot-gazebo-1" />
最終的には、アームは完全に停止します。以下のチュートリアル間、URDFのロボットのシミュレーションについて学ぶのを手助けするために、URDFのいろんな面を引っ張ってテストしてみることをおすすめします。</p>

<h2>URDFファイルのヘッダ</h2>

<p>GazeboにはAPIの変更がたくさんあり、URDFフォーマットが必要とされてきており、その中でも、Gazeboの<code>xml-schema</code>という名前空間はすでに必要とされなくなりました。もし、あなたのURDFが以下のようであるなら、:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;robot</span> <span class="na">xmlns:sensor=</span><span class="s">&quot;http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor&quot;</span>
</span><span class='line'>       <span class="na">xmlns:controller=</span><span class="s">&quot;http://playerstage.sourceforge.net/gazebo/xmlschema/#controller&quot;</span>
</span><span class='line'>       <span class="na">xmlns:interface=</span><span class="s">&quot;http://playerstage.sourceforge.net/gazebo/xmlschema/#interface&quot;</span>
</span><span class='line'>       <span class="na">xmlns:xacro=</span><span class="s">&quot;http://playerstage.sourceforge.net/gazebo/xmlschema/#interface&quot;</span>
</span><span class='line'>       <span class="na">name=</span><span class="s">&quot;pr2&quot;</span> <span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これらは削除して構いません。もし以下のものを使っているなら、ロボットのエレメントタグに必要なものはロボットの名前とxacroの任意のxmlの名前空間です。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;robot</span> <span class="na">name=</span><span class="s">&quot;rrbot&quot;</span> <span class="na">xmlns:xacro=</span><span class="s">&quot;http://www.ros.org/wiki/xacro&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>タグの<code>&lt;gazebo&gt;</code>要素</h3>

<p>もし、<code>&lt;gazebo&gt;</code>要素が<code>reference==""</code>という記述無しで使用してあるなら、<code>&lt;gazebo&gt;</code>要素はすべてのロボットモデルのものと仮定されます。<code>&lt;gazebo&gt;</code>タグにある<code>&lt;robot&gt;</code>要素は以下の表のようになっています。</p>

<table>
<thead>
<tr>
<th style="text-align:center;"> 名前 </th>
<th style="text-align:center;"> タイプ </th>
<th style="text-align:center;"> 説明 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">static </td>
<td style="text-align:center;">   bool   </td>
<td style="text-align:center;">    もし<code>true</code>にすると、モデルは動かなくなります。しかしながら、モデルは物理エンジンの中でシミュレーションされます。 </td>
</tr>
</tbody>
</table>


<p>先ほどの表には無くて、<code>&lt;gazebo&gt;</code>タグにある要素は、生成されるSDFファイルの<code>&lt;model&gt;</code>タグに直接挿入されます。<br/>
これは、<a href="http://gazebosim.org/tutorials?tut=ros_gzplugins">ROS Motor and Sensor Plugins</a>チュートリアルについて議論するときに、特にプラグインにおいて有用です。</p>

<h2>モデルをworldに正しく変換する</h2>

<p>もしあなたのURDFモデルをworldフレーム(<code>the ground plane</code>)に永久に設置された状態にしたいのなら、モデルのベースとなるように変換された、<code>world</code>リンクとジョイントを作らなければなりません。RRBotでは以下のようにすれば、それが可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="c">&lt;!-- Used for fixing robot to Gazebo &#39;base_link&#39; --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;world&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;fixed&quot;</span> <span class="na">type=</span><span class="s">&quot;fixed&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;parent</span> <span class="na">link=</span><span class="s">&quot;world&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;child</span> <span class="na">link=</span><span class="s">&quot;link1&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/joint&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかし、もしあなたがモバイルベースなどの動くロボットを持っているなら、このリンクやジョイントは必要ありません。</p>

<h2>Links</h2>

<p>URDFの<code>link</code>要素に詳しくなりましょう。<br/>
以下の例はRRBotの<code>link</code>です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="c">&lt;!-- Base Link --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;link1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 ${height1/2}&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;box</span> <span class="na">size=</span><span class="s">&quot;${width} ${width} ${height1}&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 ${height1/2}&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;box</span> <span class="na">size=</span><span class="s">&quot;${width} ${width} ${height1}&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;material</span> <span class="na">name=</span><span class="s">&quot;orange&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 1&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mass</span> <span class="na">value=</span><span class="s">&quot;1&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertia</span>
</span><span class='line'>        <span class="na">ixx=</span><span class="s">&quot;1.0&quot;</span> <span class="na">ixy=</span><span class="s">&quot;0.0&quot;</span> <span class="na">ixz=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>        <span class="na">iyy=</span><span class="s">&quot;1.0&quot;</span> <span class="na">iyz=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>        <span class="na">izz=</span><span class="s">&quot;1.0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/link&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>単位における注意</h3>

<p><a href="http://www.ros.org/reps/rep-0103.html">ROS REP 103: Standard Units of measure and Coordinate Conventions</a>にあるように、Gazeboの単位はメートルとキログラムで定義されねばなりません。もし、重力のような定数を主導で変更するときには、Gazeboではできるだけヤード・ポンド法を使えるようにしています。しかし、デフォルトの重力は9.8[m/s<sup>2</sup>]です。質量を定義する際にはキログラム単位を使ってください。</p>

<h3><code>&lt;collision&gt;</code>と<code>&lt;visual&gt;</code>要素</h3>

<p>これらのタグの働きはGazeboでもRVizでも基本的に同じです。両方を定義することは重要ですが、いくつかのROSアプリケーションでは異なるので、Gazeboでは、もし定義されていなければ、あなたの<code>&lt;cisual&gt;</code>要素を<code>&lt;collision&gt;</code>要素と同じようには使いません。その代わり、Gazeboではあなたの<code>link</code>をレーザスキャナからも衝突要素としても&#8221;見えない&#8221;ものとして扱います。</p>

<h4>collisionモデルの簡単化</h4>

<p><code>collision</code>と<code>visual</code>要素のどちらにも同じように幾何要素やメッシュを使うことができます。しかし、PCの性能工場のために、衝突幾何要素の<code>model/meshes</code>は簡略化することを強くおすすめします。メッシュを簡単化するおすすめのツールは<a href="http://blender.jp/">Blender</a>です。BlenderにはMayaや3DX Maxなど、たくさんの<code>closed-source</code>があり、メッシュを簡単化することもできます。</p>

<h4>物質 : 適切な色とテクスチャを使う</h4>

<p>通常のURDFでは、以下のようなRRBotにもあるタグを使って色を定義することができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;material</span> <span class="na">name=</span><span class="s">&quot;orange&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは、<code>materials.xacro</code>などのファイルの中に、分割して<code>orange</code>という色と一緒に以下のように定義してあります。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;material</span> <span class="na">name=</span><span class="s">&quot;orange&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;color</span> <span class="na">rgba=</span><span class="s">&quot;${255/255} ${108/255} ${10/255} 1.0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/material&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかし残念なことに、この定義方法では、<code>link</code>の色はGazeboでは反映されません。というのも、<code>link</code>に色をつけたり、テクスチャを貼ったりするのにOこの物質スクリプトが採用されているのです。その代わり、Gazeboの物質タグは、以下のように、それぞれのリンクに定義してやる必要があります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;gazebo</span> <span class="na">reference=</span><span class="s">&quot;link1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;material&gt;</span>Gazebo/Orange<span class="nt">&lt;/material&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>簡単に言うと、選択したRRBotの例では、すべてのGazeboの定義タグを<code>`rrbot.gazebo</code>と呼ばれるセカンドファイルからインクルードしていました。<br/>
なので、要素を探すことができたのです。<br/>
Gazeboでデフォルトで使用可能な物質は<code>gazebo/media/materials/scripts/gazebo/scripts/gazebo.material</code>にあるGazeboのソースコードより見つけることができます。<br/>
より進んだもしくは独自の物質のために、オリジナルのオレンジ色もしくはテクスチャを作ることができます。それについては、以下をご覧ください。
- <a href="http://gazebosim.org/sdf/dev.html#material179">The SDF documentation</a>
- <a href="http://www.ogre3d.org/tikiwiki/Materials">OGRE materials documentation</a></p>

<h4>STLやColladaファイル</h4>

<p>Rvizのように、Gazeboでも<a href="http://en.wikipedia.org/wiki/STL_(file_format">STL</a>)や<a href="http://en.wikipedia.org/wiki/Collada">Collada</a>ファイルを使用することができます。通常は、Collada(<code>.dae</code>)ファイルを使うことをおすすめします。なぜなら、このフォーマット形式は、色とテクスチャをサポートしているからです。STLファイルだと、個体の色の<code>link</code>しか作ることができません。</p>

<h3><code>&lt;inertial&gt;</code>要素</h3>

<p>Gazeboで物理エンジンを適切にうごかすためには、<a href="http://www.ros.org/wiki/urdf/XML/link">URDF element page</a>にある、<code>&lt;inertial&gt;</code>要素が必ず必要です。Gazeboで<code>link</code>が無視されないために、それらの質量は0より大きくなければなりません。更に、0の慣性モーメント(ixx, iyy, izz)は、どんな有限なトルクに対しても、無限大の加速度を出力することになります。<br/>
それぞれの<code>link</code>に正しい値を決定するには、Gazeboで物理近似を行わなければなりません。これは、たくさんのロボットパーツの計測もしくは、そういった近似のための機能付きの<a href="http://www.solidworks.co.jp/">Solidworks</a>のようなCADソフトを使うことにより決定されます。初心者は、値を少しずつ変えることでも決定できます。<br/>
以下は、RRBotの一つ目の<code>link</code>の慣性要素の例です。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>  <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 0 ${height1/2}&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;mass</span> <span class="na">value=</span><span class="s">&quot;1&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;inertia</span>
</span><span class='line'>    <span class="na">ixx=</span><span class="s">&quot;1.0&quot;</span> <span class="na">ixy=</span><span class="s">&quot;0.0&quot;</span> <span class="na">ixz=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>    <span class="na">iyy=</span><span class="s">&quot;1.0&quot;</span> <span class="na">iyz=</span><span class="s">&quot;0.0&quot;</span>
</span><span class='line'>    <span class="na">izz=</span><span class="s">&quot;1.0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/inertial&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>origin</code>タグはこの<code>link</code>の重心を表しています。RRBotの長方形のリンクの半分の長さのところを重心と決定することにより、質量を中心に持ってきます。Gazeboの<strong>View</strong>メニューをクリックし<strong>Wireframe</strong>と<strong>Center of Mass</strong>を選択すれば、GazeboであなたのURDFの重心を目視で確認することができます。<br/>
このロボットの例では、ロボットは現実世界の写しではないので、質量も慣性行列も作り上げられた（実際は存在しない）ものになっています。</p>

<h3>リンクにおける<code>&lt;gazebo&gt;</code>要素</h3>

<p>それぞれの要素は以下のようになっています。:</p>

<table>
<thead>
<tr>
<th style="text-align:center;">名前     </th>
<th style="text-align:center;">タイプ    </th>
<th style="text-align:center;">説明 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">material   </td>
<td style="text-align:center;">value  </td>
<td style="text-align:center;">外観要素の物質</td>
</tr>
<tr>
<td style="text-align:center;">gravity    </td>
<td style="text-align:center;">bool   </td>
<td style="text-align:center;">重力を使う</td>
</tr>
<tr>
<td style="text-align:center;">dampingFactor  </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;">リンク速度の指数関数的減衰。- (一つの減衰係数)により決定される一つ前のリンク速度と現在の速度を掛けあわせます。</td>
</tr>
<tr>
<td style="text-align:center;">maxVel     </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;">最大値コンタクト補正速度の最大値トラクション</td>
</tr>
<tr>
<td style="text-align:center;">minDepth   </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;">コンタクト補正インパルスが発生する前の深さの最小値</td>
</tr>
<tr>
<td style="text-align:center;">mu1&amp;mu2    </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;"><a href="http://www.ros.org/wiki/opende">ODE</a>で定義される接地面に沿った接地摩擦係数 μ</td>
</tr>
<tr>
<td style="text-align:center;">fdir1  </td>
<td style="text-align:center;">string     </td>
<td style="text-align:center;">3組のローカルの衝突検証座標mu1の定義される方向</td>
</tr>
<tr>
<td style="text-align:center;">kp     </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;"><a href="http://opende.sourceforge.net/">ODE</a>で定義される、剛体面の接触剛性 k_p (ODEではcfmを使用)</td>
</tr>
<tr>
<td style="text-align:center;">kd     </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;"><a href="http://opende.sourceforge.net/">ODE</a>で定義される、剛体面の摩擦減衰 k_d (ODEではerpを使用)</td>
</tr>
<tr>
<td style="text-align:center;">selfCollide    </td>
<td style="text-align:center;">bool   </td>
<td style="text-align:center;">もし、<code>true</code>なら、リンクは他のリンクやモデルと衝突します</td>
</tr>
<tr>
<td style="text-align:center;">maxContacts    </td>
<td style="text-align:center;">int    </td>
<td style="text-align:center;">２つの物体間での面の最大値。この値は、物理シミュレートで定義される<code>max_contacts</code>要素をオーバーライドします</td>
</tr>
<tr>
<td style="text-align:center;">laserRetro     </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;">レーザーセンサのレーザー強度</td>
</tr>
</tbody>
</table>


<p><code>&lt;gazebo&gt;</code>要素は<code>&lt;robot&gt;</code>と似ており、上の表によって定義されていない任意の物体は、SDFファイルの<code>&lt;link&gt;</code>要素と一致するところに挿入されます。これは、<a href="http://gazebosim.org/tutorials?tut=ros_gzplugins">ROS Motor and Sensor Plugins</a>チュートリアルについて議論するときに、特にプラグインにおいて有用です。</p>

<h3>RRBotの要素の例</h3>

<p>RRBotでは、非固定で連結した2つの摩擦係数が定義されています。なのでもし、衝突が起こってもより正確な接触作用がシミュレートされます。以下はリンクの<code>&lt;gazebo&gt;</code>タグの一例です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;gazebo</span> <span class="na">reference=</span><span class="s">&quot;link2&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;mu1&gt;</span>0.2<span class="nt">&lt;/mu1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;mu2&gt;</span>0.2<span class="nt">&lt;/mu2&gt;</span>
</span><span class='line'>  <span class="nt">&lt;material&gt;</span>Gazebo/Black<span class="nt">&lt;/material&gt;</span>
</span><span class='line'><span class="nt">&lt;/gazebo&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Joints</h2>

<p><a href="http://www.ros.org/wiki/urdf/XML/joint">URDFジョイントドキュメント</a>を熟読しておいてください。しかし、URDFのジョイントのために記述される要素のうべ手がGazeboで利用可能なわけではありません。</p>

<ul>
<li><code>&lt;origin&gt;</code>、<code>&lt;parent&gt;</code>そして<code>&lt;child&gt;</code>が必要です。</li>
<li><code>&lt;calibration&gt;</code>と<code>&lt;safety_controller&gt;</code>は無視されます。</li>
<li><code>&lt;dynamics&gt;</code>タグでは、ダンパ(減衰)プロパティのみが使用されます。</li>
<li><code>&lt;limit&gt;</code>タグ内のすべてのプロパティは任意です。</li>
</ul>


<h3>RRBotの例</h3>

<p>以下は、RRBotで使用されているジョイントです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;joint2&quot;</span> <span class="na">type=</span><span class="s">&quot;continuous&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;parent</span> <span class="na">link=</span><span class="s">&quot;link2&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;child</span> <span class="na">link=</span><span class="s">&quot;link3&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;origin</span> <span class="na">xyz=</span><span class="s">&quot;0 ${width} ${height2 - axel_offset*2}&quot;</span> <span class="na">rpy=</span><span class="s">&quot;0 0 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;axis</span> <span class="na">xyz=</span><span class="s">&quot;0 1 0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dynamics</span> <span class="na">damping=</span><span class="s">&quot;0.7&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/joint&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>0.7 [Nms/rad]の線形粘性係数についての運動要素に注目してください。減衰はただ単に，ジョイントを止めるような<strong>ゆっくりとした</strong>ジョイント速度に力を発生させるものの合計です（この場合は [トルク/角速度] です）。</p>

<p>0.7 [Nms/rad]という値はいろいろないかに<strong>自然に</strong>振り子が触れるかを観察し、減衰させることによって決定されます。この値を増やしたり減らしたりしてこの要素がいかに物理エンジンに影響を当たるか検証することをおすすめします。</p>

<h3>Jointにおける<code>&lt;gazebo&gt;</code>要素</h3>

<table>
<thead>
<tr>
<th style="text-align:center;">名前</th>
<th style="text-align:center;">タイプ   </th>
<th style="text-align:center;">説明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">kp     </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;"><a href="http://opende.sourceforge.net/">ODE</a>で定義される、剛体面の接触剛性 k_p (ODEではcfmを使用)</td>
</tr>
<tr>
<td style="text-align:center;">kd     </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;"><a href="http://opende.sourceforge.net/">ODE</a>で定義される、剛体面の摩擦減衰 k_d (ODEではerpを使用)</td>
</tr>
<tr>
<td style="text-align:center;">stopCfm    </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;">停止していない時に混合で使用される一定の力</td>
</tr>
<tr>
<td style="text-align:center;">stopErp    </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;">ジョイントの停止に使用されるエラーパラメータ</td>
</tr>
<tr>
<td style="text-align:center;">provideFeedback    </td>
<td style="text-align:center;">bool   </td>
<td style="text-align:center;">Gazeboのプラグインへ常にねじりデータ(トルク)をpublishしている</td>
</tr>
<tr>
<td style="text-align:center;">cfmDamping     </td>
<td style="text-align:center;">bool   </td>
<td style="text-align:center;">もし、<code>cgm dumping</code>が<code>true</code>なら、減衰のシミュレートにODEはCFMを使用し、無限の減衰を容認する。また、追加の強制要素(前もってジョイントの制限に使用されている) が常に有効になります。デフォルトの<code>damping</code>タグよりもたくさんのスッキリとした数字で表された減衰の方法です。</td>
</tr>
<tr>
<td style="text-align:center;">fudgeFactor    </td>
<td style="text-align:center;">double     </td>
<td style="text-align:center;">ジョイントの制限にあるジョイントモータの行き過ぎ量を計測します。また、0から1の値を取るはずです</td>
</tr>
</tbody>
</table>


<p>これもまた<code>&lt;robot&gt;</code>や<code>&lt;link&gt;</code>における<code>&lt;gazebo&gt;</code>要素と似ており、上の表によって定義されていない任意の物体は、SDFファイルの<code>&lt;joint&gt;</code>要素と一致するところに挿入されます。これは、<a href="http://gazebosim.org/tutorials?tut=ros_gzplugins">ROS Motor and Sensor Plugins</a>チュートリアルについて議論するときに、特にプラグインにおいて有用です。</p>

<h2>Gazeboモデルの機能を修正する</h2>

<p>Gazeboをインストールすると、あなたのURDFが正しくSDFに変換できるか確かめる簡単なツールも一緒にインストールされています。以下のコマンドを実行してください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  <span class="c"># gazebo2 and below</span>
</span><span class='line'>  gzsdf print MODEL.urdf
</span><span class='line'>  <span class="c"># gazebo3 and above</span>
</span><span class='line'>  gz sdf -p MODEL.urdf
</span></code></pre></td></tr></table></div></figure>


<p>これにより、入力されたURDFから、SDFに変換するために必要な情報の欠陥に関する警告と共に、生成されたSDFを確認できます。
<strong>Note : </strong>バージョン1.9のGazeboとそれ以上のバージョンではデバッグ情報の一部がログファイルに記録され、以下のようにして、それを確認することができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  cat ~/.gazebo/gzsdf.log
</span></code></pre></td></tr></table></div></figure>


<h2>URDFをGazeboで見る</h2>

<p>GazeboでRRBotを見ること、このチュートリアルの最初の方ですでに完了しています。あなた独自のロボットでは、そのURDFが<code>/urdf</code>というサブフォルダにある、<code>MYROBOT_description</code>という名前のROSパッケージの中で有効であるとします。ROSを使ってGazeboの中にこのロケーションからURDFを開く方法は前のチュートリアル(<a href="https://cir-kit.github.io/blog/2015/02/15/gazebo-using-roslaunch/">モデルをスポーンさせるのにroslaunchファイルを使う</a>)で述べています。もしまだそのチュートリアルをやっていないなら、すぐにやってみてください。
そのチュートリアルでは、あなたのオリジナルロボットのための、２つのROSパッケージ(<code>MYROBOTdescription</code>と<code>MYROBOTgazebo</code>)を制作するはずです。ロボットを確認し、Gazeboで試すには、以下のコマンドが実行できるはずです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch MYROBOT_gazebo MYROBOT.launch
</span></code></pre></td></tr></table></div></figure>


<p>これにより、GazeboサーバーとGUIクライアントの両方を、あなたのロボットを自動でスポーンさせるようlaunchしているはずです。</p>

<h2>あなたのモデルを引っ張る</h2>

<p>もしあなたのロボットモデルがGazeboで思い通りに動かなければ、あなたのURDFの調整が必要なので、Gazeboで正確にその物理特性を表現するべきだと言えます。Gazeboで利用可能であり、URDFにある<code>&lt;gazebo&gt;</code>タグでも利用可能な様々なプロパティについての情報は<a href="http://gazebosim.org/sdf.html">SDFのユーザーガイド</a>をご覧ください。</p>

<h2>あなたのロボットを世界と共有する</h2>

<p>もしあなたが他の人がGazeboで使いたいと思っているであろう独自のロボットを持っているなら、<a href="http://gazebosim.org/user_guide/started__models__database.html">Gazeboのモデルデータベース</a>にあなたのURDFを追加することをおすすめします。これは、インターネットからモデルをダウンロードする際にGazeboが接続するオンラインサーバーです。このよく変更のあるレポジトリは<a href="https://bitbucket.org/osrf/gazebo_models">Bitbucket</a>に設置されてます。あなたのロボットをデータベースに追加するには、どうやってpullリクエストを投稿すればよいかなど、<a href="http://gazebosim.org/user_guide/started__models__database.html">Gazeboのモデルデータベース</a>ドキュメントをご覧ください。</p>

<h2>次のステップ</h2>

<p>これでURDFを含むROSパッケージをGazeboと一緒に使用する方法を学びました。また、あなた独自のURDFをGazeboで動作するように変換する方法も学びました。あなたのURDFのロボットにぷrグインを追加する方法を学ぶ準備が出来ました。なので、あなたのロボットやシミュレートされる環境の他の面をコントロールできます。<a href="http://gazebosim.org/tutorials?tut=ros_gzplugins">ROS Motor and Sensor Plugins</a>をご覧ください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.6-4:GazeboをROSに繋ぐ (Roslaunchを使う 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/15/gazebo-using-roslaunch/"/>
    <updated>2015-02-15T17:03:28+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/15/gazebo-using-roslaunch</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/15/2015 (Sun)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第六弾「Connect to ROS」。
ROSはロボットの制御フレームワークです。このチュートリアルでは、GazeboとROSのインターフェースについて説明します。
今回はその「Using roslaunch」編です。
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>INTERMEDIATE</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=connect_ros">GAZEBO Tutorial-Connect to ROS</a></p>

<h2>チュートリアル : Gazebbo、worldファイル、URDFモデルを起動するためのroslaunchを使う</h2>

<p>Gazeboを起動したり、worldモデルを開いたり、シミュレーション環境にロボットモデルをスポーンさせる方法はたくさんあります。このチュートリアルでは、<code>rosrun</code>と<code>roslaunch</code>を使ったROSを用いてのそれらの方法を説明します。ROSパッケージの中のURDFを保存し、様々なROSワークスペースのリソースパスを保存する方法を含みます。</p>

<h3>worldモデルを開くためにroslaunchを使う</h3>

<p><a href="http://www.ros.org/wiki/roslaunch">roslaunch</a>ツールはROSのノードを起動し、ROSの中でロボットを起動する基本的な方法です。Gazeboの空のworlを起動することは、これまでのチュートリアルで行ってきた<code>rosrun</code>コマンドを使うのと同じです。以下のように、単純に実行してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch gazebo_ros empty_world.launch
</span></code></pre></td></tr></table></div></figure>


<h4>roslaunch引数</h4>

<p>Gazeboの挙動を変更するためのlaunchファイルには、以下の引数を追加することができます。:</p>

<h5>pused</h5>

<blockquote><p>Gazeboを一時停止した状態で起動する(default false)</p></blockquote>

<h5>usesimtime</h5>

<blockquote><p>ROSの<code>/clock</code>トピックを通じて配信される、Gazebo-publishedのシミュレーションタイムを取得するために、ROSノードに時間を問い合わせます。(default true)</p></blockquote>

<h5>gio</h5>

<blockquote><p>Gazeboのユーザーインターフェースウィンドウをlaunchします。(default true)</p></blockquote>

<h5>headless</h5>

<blockquote><p>(Ogre)コンポーネントを記録することで、シミュレータが呼び出しているすべての関数を表示します。<code>gui:=true</code>と一緒では起動しません。(default false)</p></blockquote>

<h5>debug</h5>

<blockquote><p>gdbを使用したデバッグモードで<code>gzserver</code>(Gazeboのサーバー)を起動します。(default false)</p></blockquote>

<h3>roslaunchコマンドの例</h3>

<p>通常、引数のデフォルト値はすべて必要であり、以下のように記述します。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch gazebo_ros empty_world.launch paused:<span class="o">=</span><span class="nb">true </span>use_sim_time:<span class="o">=</span><span class="nb">false </span>gui:<span class="o">=</span><span class="nb">true </span>throttled:<span class="o">=</span><span class="nb">false </span>headless:<span class="o">=</span><span class="nb">false </span>debug:<span class="o">=</span><span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<h3>他のデモworldをlaunchする</h3>

<p><code>gazebo_ros</code>パッケージには、他のデモworldがすでに含まれています。以下がその内容です。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch gazebo_ros willowgarage_world.launch
</span><span class='line'>roslaunch gazebo_ros mud_world.launch
</span><span class='line'>roslaunch gazebo_ros shapes_world.launch
</span><span class='line'>roslaunch gazebo_ros rubble_world.launch
</span></code></pre></td></tr></table></div></figure>


<p><code>mudworld.launch</code>は、シンプルなジョイントメカニズムをlaunchするものであることを知っておいていください。<code>mudworld.launch</code>は以下の内容のlaunchファイルです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;launch&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;include</span> <span class="na">file=</span><span class="s">&quot;$(find gazebo_ros)/launch/empty_world.launch&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;arg</span> <span class="na">name=</span><span class="s">&quot;world_name&quot;</span> <span class="na">value=</span><span class="s">&quot;worlds/mud.world&quot;</span><span class="nt">/&gt;</span> <span class="c">&lt;!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;arg</span> <span class="na">name=</span><span class="s">&quot;paused&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;arg</span> <span class="na">name=</span><span class="s">&quot;use_sim_time&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;arg</span> <span class="na">name=</span><span class="s">&quot;gui&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;arg</span> <span class="na">name=</span><span class="s">&quot;headless&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;arg</span> <span class="na">name=</span><span class="s">&quot;debug&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/include&gt;</span>
</span><span class='line'><span class="nt">&lt;/launch&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>このlaunchファイルでは、<code>emptyworld.launch</code>から機能するのに必要不可欠なほとんどすべてを継承しています。<code>mud.World</code>ファイルとともに<code>emptyworld.launch</code>ファイルを用いる代わりに、私達が変更しなければならないパラメータは<code>worldname</code>パラメータだけです。他の引数はデフォルト値を設定しているだけです。</p>

<h3>Worldファイル</h3>

<p><code>mud_world.launch</code>ファイルをよく調べると、<code>mud.world</code>ファイルの構成に注目するでしょう。<code>mud.world</code>の最初のいくつかの構成要素は以下のようになっています。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;world</span> <span class="na">name=</span><span class="s">&quot;default&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;include&gt;</span>
</span><span class='line'>        <span class="nt">&lt;uri&gt;</span>model://sun<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;include&gt;</span>
</span><span class='line'>        <span class="nt">&lt;uri&gt;</span>model://ground_plane<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;include&gt;</span>
</span><span class='line'>        <span class="nt">&lt;uri&gt;</span>model://double_pendulum_with_base<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>pendulum_thick_mud<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pose&gt;</span>-2.0 0 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>      ...
</span><span class='line'>    <span class="nt">&lt;/world&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>あなたのコンピュータ上で、フルバージョンのworldファイルを以下のセクションで確認してください。</h4>

<p>このworldファイルでは、３つのモデルが参照されていることをわずかに確認できます。３つのモデルはローカルのGazeboモデルデータベースの中にあります。もし見つからなければ、Gazeboのオンラインデータベースより自動的にダウンロードしてきます。
worldファイルについて詳しく知りたければ、<a href="http://cir-kit.github.io/blog/categories/build-a-world/">環境をつくろう !</a>のチュートリアルをご覧ください。</p>

<h4>worldファイルをコンピュータ上で検索する</h4>

<p>worldファイルは、Gazeboのリソースパス上にある、<code>/worlds</code>ディレクトリの中にあります。このパスはGazeboをどのようにインストールし、どのタイプのシステムを使っているかということに依存します。Gazeboリソースの位置を探すには、以下のコマンドを使用してください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>env <span class="p">|</span> grep GAZEBO_RESOURCE_PATH
</span></code></pre></td></tr></table></div></figure>


<p>典型的なパスだと、<code>/usr/local/share/gazebo-1.9</code>となるでしょう。<code>/worlds</code>に検索したパスを追加すると、<code>mud.world</code>ファイルを含む、Gazeboが使うディレクトリに直接接続できます。</p>

<h2>独自のGazebo ROSパッケージを作る</h2>

<p>Gazeboにロボットをスポーンさせる方法について続ける前に、最新版を使うために、ROSをGazeboと使う際の基本的なファイル構造（ヒエラルキー）についてまずは学びましょう。
ここまでの段階で、あなたの<code>catkin</code>ワークスペースは<code>catkin_ws</code>という名前であると仮定します。もちろん、ワークスペースの名前は好きなものをつけてもらって構いません。例えば、あなたの<code>catkin</code>ワークスペースが以下のような位置にあるとします。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/home/user/catkin_ws/src
</span></code></pre></td></tr></table></div></figure>


<p><code>/MYROBOT_description</code>という名前のパッケージの中に、あなたのロボットモデルにつながるすべてのものと、その記述についてがROSの基本的なパラメータとして存在し、Gazeoboとともに使用されるworldファイルとlaunchファイルは<code>/MyROBOT_gazebo</code>という名前のROSパッケージの中に存在します。ただし、<code>MYROBOT</code>の部分はあなたのロボット名です。これらの２つのパッケージにより、ファイル構造は以下のようになります。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>../catkin_ws/src
</span><span class='line'>    /MYROBOT_description
</span><span class='line'>        package.xml
</span><span class='line'>        CMakeLists.txt
</span><span class='line'>        /urdf
</span><span class='line'>            MYROBOT.urdf
</span><span class='line'>        /meshes
</span><span class='line'>            mesh1.dae
</span><span class='line'>            mesh2.dae
</span><span class='line'>            ...
</span><span class='line'>        /materials
</span><span class='line'>        /cad
</span><span class='line'>    /MYROBOT_gazebo
</span><span class='line'>        /launch
</span><span class='line'>            MYROBOT.launch
</span><span class='line'>        /worlds
</span><span class='line'>            MYROBOT.world
</span><span class='line'>        /models
</span><span class='line'>            world_object1.dae
</span><span class='line'>            world_object2.stl
</span><span class='line'>            world_object3.urdf
</span><span class='line'>        /materials
</span><span class='line'>        /plugins
</span></code></pre></td></tr></table></div></figure>


<p><code>catkin_create_pkg</code>コマンドは、新しいパッケージを作成する際に使用します。しかし、もし必要なら、<code>rosbuilt</code>を使っても簡単にそれを行うことができます。ほとんどすべてのフォルダとファイルは自明でなければなりません。
次のセクションでは、カスタムのworldファイルを使うためのセッティングについて説明してゆきます。</p>

<h3>カスタムのworldファイルを作る</h3>

<p>あなたのパッケージやロボットに特化したあなた独自のROSパッケージの中にカスタムの<code>.world</code>を作成することができます。この短いチュートリアルでは、ground、sun、gas stationのある空のシミュレーション環境を作成します。以下は推奨規約です。<code>MYROBOT</code>の部分はあなたのロボットの名前にするか、ロボットがなければ、<code>test</code>の様な名前に置き換えるということを忘れないでください。尚、以下のチュートリアルでは、<code>catkin</code>ワークスペースが<code>~/catkin_ws/</code>(ホームディレクトリ直下に<code>catkin_ws</code>という名前である)となっていると仮定します。</p>

<ul>
<li><code>MYROBOT_gazebo</code>という名前のROSパッケージを作る</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/catkin_ws/src
</span><span class='line'><span class="nb">cd</span> ~/catkin_ws/src
</span><span class='line'>catkin_create_pkg MYROBOT_gazebo
</span><span class='line'><span class="nb">cd</span> ~/catkin_ws
</span><span class='line'>catkin_make
</span><span class='line'><span class="nb">source </span>devel/setup.sh
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>そのパッケージの中で、launchフォルダを作る</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roscd MYROBOT_gazebo
</span><span class='line'>mkdir launch
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>そのlaunchフォルダの中に、<code>MYROBOT.launch</code>ファイルを作る。(デフォルトの引数はありません)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit MYROBOT.launch
</span></code></pre></td></tr></table></div></figure>


<p>尚、<code>MYROBOT.launch</code>は以下の内容のにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;launch&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;include</span> <span class="na">file=</span><span class="s">&quot;$(find gazebo_ros)/launch/empty_world.launch&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;arg</span> <span class="na">name=</span><span class="s">&quot;world_name&quot;</span> <span class="na">value=</span><span class="s">&quot;$(find MYROBOT_gazebo)/worlds/MYROBOT.world&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- more default parameters can be changed here --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/include&gt;</span>
</span><span class='line'><span class="nt">&lt;/launch&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>同じパッケージの中に、<code>worlds</code>フォルダを作り、その中に、<code>MYROBOT.world</code>ファイルを作る。:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roscd MYROBOT_gazebo
</span><span class='line'>mkdir worlds
</span><span class='line'>gedit MYROBOT.world
</span></code></pre></td></tr></table></div></figure>


<p>尚、<code>MYROBOT.world</code>は以下の内容にする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;world</span> <span class="na">name=</span><span class="s">&quot;default&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://ground_plane<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://sun<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://gas_station<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;</span>gas_station<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>-2.0 7.0 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/world&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ここまで完了した後、以下のコマンドを使えば、Gazeboの中にカスタムのworld(ガソリンスタンド付き)をlaunchすることができるはずです。:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/catkin_ws/devel/setup.bash
</span><span class='line'>roslaunch MYROBOT_gazebo MYROBOT.launch
</span></code></pre></td></tr></table></div></figure>


<p>うまく行けば、以下のようになります。(マウスを使ってズームアウトしてください)
<img src="http://cir-kit.github.io/images/2015-02-15-gazebo-using-roslaunch/gasstation.png" alt="gasstation" /></p>

<h6>うまく行かない場合</h6>

<ul>
<li><p>launchファイルまたは、worldファイルに間違いが無いか確認してください。
よくある間違いは、<code>MYROBOT</code>の部分の間違いです。</p></li>
<li><p>ディレクトリ名が正しいか確認してください
私は、<code>worlds</code>としなければならないところを<code>world</code>にしてしまい、つまづいてましたorz</p></li>
<li><p>gzserverがきちんと終了していることを確認してください
これが最も厄介なものですが、前回のチュートリアルで<code>roslaunch gazebo_ros gazebo</code>や<code>rosrun gazebo_ros gazebo</code>により、Gazeboの起動確認をしていた場合、
<code>Cntrl-C</code>で終了しても、<code>gzserver</code>のプロセスが終了していないことがあります。
この場合は、<code>システムモニタ</code>を開き、起動中のプロセス一覧から<code>gzserver</code>を探し、終了させてください。
ちなみに、<code>gzserver</code>ってなんぞ？という方は、<a href="http://cir-kit.github.io/blog/2015/01/31/gazebo-components/">Gazeboのコンポーネント</a>でその概要を簡単に説明しているので、そちらをご覧ください。</p></li>
<li><p>gzclientは立ち上がるが、真っ暗なままですorz
今回のチュートリアルでは、Gazeboのオンラインデータベースにある<code>gass station</code>モデルを使用しますが、これを一度もgzclientで表示したことがない場合、自動でダウンロードを行うことになります。
ただ、このダウンロードは結構な時間がかかります。結構な時間とは、1分〜3分です。なので、気長に待ってみましょう。
そんなの待ってらんないぜ!という方は、gazeboを普通に立ち上げ、<strong>Insert</strong>タブの一番下にある、オンラインのモデル一覧から<code>gass station</code>を選択して、一度良いので使ってみるか、
<a href="https://bitbucket.org/osrf/gazebo_models/src">ここ</a>から直接<code>gass station</code>を探し、<code>~/.gazebo/model/</code>にダウンロードすると良いです。</p></li>
</ul>


<h2>Gazeboの中でworldファイルを編集する</h2>

<p>あなたのロボットのworldファイルに、モデルを追加することができますし、ウィンドウの左上にある<strong>File</strong>-><strong>Save As</strong>をクリックすることで、編集したworldファイルをROSパッケージに出力することができます。</p>

<h3>URDFのロボットをスポーンさせるのにroslaunchを使う</h3>

<p>roslaunchを使って、URDFベースのロボットをGazeboにスポーンさせる方法は２つあります。</p>

<h4>ROS Servise Call Spawn Method</h4>

<blockquote><p>１つ目の方法では、あなたのロボットのROSパッケージをレポジトリのチェックアウトとコンピュータの間でより運用しやすくするようにします。ROSパッケージパスに関連するあなたのロボットの位置を維持することが許されているだけでなく、小規模の(python)スクリプトを使ってROSサービスコールを作ることが必要です。</p></blockquote>

<h4>Model Database Method</h4>

<blockquote><p>２つ目の方法では、あなたのロボットを<code>.world</code>ファイルの中にインクルードすることが許されています。これは、単純で便利に見えるかもしれませんが、あなたのロボットを環境変数を設定し、Gazeboのモデルデータベースに追加する必要があります。</p></blockquote>

<p>これら２つの方法をやってみます。私達が推奨する方法は、<strong>ROS Service Call Spawn Method</strong>です。</p>

<h4>&ldquo;ROS Service Call&rdquo; Robot Spawn Method</h4>

<p>この方法では、GazeboにカスタムのURDFを追加するために、<code>gazebo_ros</code>のROSノード(rostopicの名前空間では単純に<code>gazebo</code>という名前がついています)にサービスコールリクエストを行うため、<code>spawn_model</code>と呼ばれる小規模のpythonスクリプトを使います。<code>spawn_model</code>スクリプトは<code>gazebo_ros</code>パッケージにあります。以下の方法で、このスクリプトを使用することができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosrun gazebo_ros spawn_model -file <span class="sb">`</span>rospack find MYROBOT_description<span class="sb">`</span>/urdf/MYROBOT.urdf -urdf -x <span class="m">0</span> -y <span class="m">0</span> -z <span class="m">1</span> -model MYROBOT
</span></code></pre></td></tr></table></div></figure>


<p>名前空間、<code>trimesh</code>プロパティ、ジョイントポジション、そしてRPY初期値を含む、<code>spawn_model</code>のすべての発展的な引数を見るためには、以下のコマンドを実行してください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosrun gazebo_ros spawn_model -h
</span></code></pre></td></tr></table></div></figure>


<h5>Baxterを使ったURDFの例</h5>

<p>もし、まだ例などで、URDFモデルをテストしたことがないなら、Rethink Roboticsの<a href="https://github.com/RethinkRobotics/baxter_common">baxter_commonレポジトリ</a>から<code>baxter_description</code>パッケージをダウンロードできます。以下のようにして、このパッケージを<code>catkin</code>ワークスペースに設置してください。尚、これまでと同様、<code>catkin</code>ワークスペースの配置は<code>~/catkin_ws</code>となっているとします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/catkin_ws/src
</span><span class='line'>git clone https://github.com/RethinkRobotics/baxter_common.git
</span></code></pre></td></tr></table></div></figure>


<p>上記コマンドを実行すると、<code>baxter.urdf</code>という名前のURDFファイルが<code>baxter_description/urdf/</code>にできるはずです。できたら以下のコマンドが実行できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosrun gazebo_ros spawn_model -file <span class="sb">`</span>rospack find baxter_description<span class="sb">`</span>/urdf/baxter.urdf -urdf -z <span class="m">1</span> -model baxter
</span></code></pre></td></tr></table></div></figure>


<p>下図のように、ガソリンスタンドにbaxterのURDFモデルを出現させるには、先ほどまでに作成した、<code>MYROBOT.launch</code>をlaunchし、上記のコマンドを実行する必要があります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch MYROBOT_gazebo MYROBOT.launch
</span><span class='line'>rosrun gazebo_ros spawn_model -file <span class="sb">`</span>rospack find baxter_description<span class="sb">`</span>/urdf/baxter.urdf -urdf -z <span class="m">1</span> -model baxter
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://cir-kit.github.io/images/2015-02-15-gazebo-using-roslaunch/baxter_on_the_gass_station.png" alt="baxter on gass station" /></p>

<p>ROSのlaunchファイルに直接これを統合するには、<code>MYROBOT_gazebo/launch/MYROBOT.launch</code>を再び開き、以下のな教を<code>&lt;/launch&gt;</code>タグの前に追加してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;!-- Spawn a robot into Gazebo --&gt;
</span><span class='line'>&lt;node <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;spawn_urdf&quot;</span> <span class="nv">pkg</span><span class="o">=</span><span class="s2">&quot;gazebo_ros&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;spawn_model&quot;</span> <span class="nv">args</span><span class="o">=</span><span class="s2">&quot;-file $(find baxter_description)/urdf/baxter.urdf -urdf -z 1 -model baxter&quot;</span> /&gt;
</span></code></pre></td></tr></table></div></figure>


<p>このファイルをlaunchすると、先ほど<code>rosrun</code>を使って実行したものと同じ結果が得られるはずです。</p>

<h5>PR2を使ったXACROの例</h5>

<p>もし、あなたのURDFがXMLフォーマットではないが、<a href="http://ros.org/wiki/xacro">XACROフォーマット</a>であったとしても、launchファイルを変更することで、同じようなものが作れます。以下のパッケージをインストールすることにより、PR2の例を実行することができます。</p>

<p><strong>ROS Groovy:</strong> - Note : このdebianパッケージとして公開されている<a href="https://github.com/PR2/pr2_common/pull/222">pullリクエスト</a>だけでは、GroovyのPRは壊れています</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install ros-groovy-pr2-common
</span></code></pre></td></tr></table></div></figure>


<p><strong>ROS Hydro:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install ros-hydro-pr2-common
</span></code></pre></td></tr></table></div></figure>


<p><strong>ROS Indigo:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install ros-indigo-pr2-common
</span></code></pre></td></tr></table></div></figure>


<p>インストールが終わったら、以下の内容を<code>MYROBOT.launch</code>に追加しましょう。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="c">&lt;!-- Convert an xacro and put on parameter server --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;robot_description&quot;</span> <span class="na">command=</span><span class="s">&quot;$(find xacro)/xacro.py $(find pr2_description)/robots/pr2.urdf.xacro&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- Spawn a robot into Gazebo --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;node</span> <span class="na">name=</span><span class="s">&quot;spawn_urdf&quot;</span> <span class="na">pkg=</span><span class="s">&quot;gazebo_ros&quot;</span> <span class="na">type=</span><span class="s">&quot;spawn_model&quot;</span> <span class="na">args=</span><span class="s">&quot;-param robot_description -urdf -model pr2&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>このlaunchファイルをlaunchすると、以下のように、PR2がガソリンスタンドにいるのが確認できると思います。
<strong>Note : この記事を書いている時点では、PR2のURDFの挙動をGazeboのAPIに変更する必要があると言ったようなエラーや渓谷がコンソールの出力に大量に出力されます。(公式サイトより)</strong>
<img src="http://cir-kit.github.io/images/2015-02-15-gazebo-using-roslaunch/pr2_on_the_gass_station.png" alt="pr2 on the gass station" /></p>

<h4>&ldquo;Model Database&#8221;Robot Spawn Method</h4>

<p>Gazeboにロボットをスポーンさせる２つ目の方法は、あなたのロボットを<code>.world</code>ファイルの中にインクルードすることが許されています。これは、単純で便利に見えるかもしれませんが、あなたのロボットを環境変数を設定し、Gazeboのモデルデータベースに追加する必要があります。この環境変数が必要となるのは、GazeboのROS依存関係による分割が原因です。URDFパッケージパスは直接<code>.world</code>ファイルの中に記述することはできません。というのもGazeboはROSパッケージの構造理念とは異なるからです。
この方法を実行するには、一つのロボットだけで構成される新しいモデルデータベースを作らなければなりません。これはGazeboにあなたのURDFを読み込ませるためには単純な方法であるとは言えません。しかしこれは、あなたのコンピュータにあなたのURDFロボットのコピーを２つ作り、維持する必要が内容にするための方法なのです。もし、以下の説明が難しく、混乱してしまうようなら、<a href="http://cir-kit.github.io/blog/2015/01/31/gazebo-model-structure-and-requirements/">モデルの構成と必要条件</a>のチュートリアルへ戻り、なぜそのようなステップが必要なのかをしっかりと学んでください。
あなたのROSワークスペースのファイル小僧は以下ようになっていると仮定します。唯一違う点は、<code>model.config</code>ファイルが<code>MYROBOT_description</code>パッケージに追加されている点です。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>../catkin_ws/src
</span><span class='line'>    /MYROBOT_description
</span><span class='line'>        package.xml
</span><span class='line'>        CMakeLists.txt
</span><span class='line'>        model.config
</span><span class='line'>        /urdf
</span><span class='line'>            MYROBOT.urdf
</span><span class='line'>        /meshes
</span><span class='line'>            mesh1.dae
</span><span class='line'>            mesh2.dae
</span><span class='line'>            ...
</span><span class='line'>        /materials
</span><span class='line'>        /plugins
</span><span class='line'>        /cad
</span></code></pre></td></tr></table></div></figure>


<p>このファイル構造は、以下のフォルダ/￥とファイルに従った方法で、Gazeboのモデルデータベースを使うために最適化されています。</p>

<ul>
<li>/home/USER/catkin_workspace/src : これはGazeboのモデルデータベースのロケーションとして扱われます</li>
<li>/MYROBOT_description : このディレクトリはGazeboのモデルフォルダと仕手のみ扱われます</li>
<li>model.config : これは、Gazeboがこのモデルをデータベースで探すために必要とするコンフィギュレーションファイルです</li>
<li>MYROBOT.urdf : これはあなたのロボットの構成ファイルです。また<code>Rviz</code>や<code>MOveIt!</code>..etcでも使用されます。</li>
<li>/meshes : worldファイルとともに、レギュラーのURDFとして、<code>.stl</code>や<code>.dae</code>ファイルを個々に置きます。</li>
</ul>


<h5>model.config</h5>

<p>すべてのモデルには、モデルについてのメタデータを含む、モデルのルートディレクトリに<code>model.config</code>ファイルがあります。まずは、この<code>model.config</code>ファイルをコピーし、ファイルネームとともに<code>model.urdf</code>と置き換えてください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'>  <span class="nt">&lt;model&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>MYROBOT<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sdf&gt;</span>urdf/MYROBOT.urdf<span class="nt">&lt;/sdf&gt;</span>
</span><span class='line'>    <span class="nt">&lt;author&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;</span>My name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;email&gt;</span>name@email.address<span class="nt">&lt;/email&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/author&gt;</span>
</span><span class='line'>    <span class="nt">&lt;description&gt;</span>
</span><span class='line'>      A description of the model
</span><span class='line'>    <span class="nt">&lt;/description&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/model&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>SDFファイルとは異なり、URDFでこのファイルを利用する際には、バージョンのタグは必要ありません。より詳しい情報は、Gazeboのモデルデータベースドキュメントをご覧ください。</p>

<h5>環境変数</h5>

<p>最後に、Gazeboにモデルデータベースはどこを探せばよいか知らせる、<code>.bashrc</code>ファイルに環境変数を追加する必要があります。好きなエディタで<code>~/.bashrc</code>を編集してください。<code>GAZEBO_MODEL_PATH</code>が定義されているか確かめてください。もし、すでに定義されていれば、セミコロンを使って新しいexportパスを追加してください。<code>catkin</code>ワークスペースが<code>~/catkin_ws/</code>であるとすると、exportする<code>GAZEBO_MODEL_PATH</code>は以下のようになっているはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  <span class="nb">export </span><span class="nv">GAZEBO_MODEL_PATH</span><span class="o">=</span>/home/user/catkin_ws/src/
</span></code></pre></td></tr></table></div></figure>


<h5>Gazeboで確認する - 手動</h5>

<p>もし、Gazeboのモデルデータベースがlaunchする際にすでに適切に定義されているとして、テストしてみましょう。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  gazebo
</span></code></pre></td></tr></table></div></figure>


<p>起動できたら、画面左にある<strong>Insert</strong>タブをクリックしてください。すると、あなたのシステムで利用可能なオンラインデータベースを含む、異なるモデルのデータベースを代表するドロップダウンリストを確認できるでしょう。あなたのロボットと一致するデータベースを探し、ロボットの名前の上で右クリックし、サブメニューを開いたら、ロボットを設置するためにGazeboの中のロケーションを選んでください。</p>

<h5>Gazeboで確認する - モデルデータベースとroslaunch</h5>

<p>モデルデータベースの発展的なメソッドでは、ROSパッケージパスを使うことなく、ロボットを直接worldファイルに加えることができます。worldファイルをつくるというというセクションで作ったものと同じセットアップを使いまが、以下のようにworldファイルを変更します。</p>

<ul>
<li>以前のように、<code>MYROBOT_description/launch</code>フォルダの時とと同じように、<code>MYROBOT.world</code>ファイルを以下の内容にしてください。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;world</span> <span class="na">name=</span><span class="s">&quot;default&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://ground_plane<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://sun<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://gas_station<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;</span>gas_station<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>-2.0 7.0 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://MYROBOT<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/world&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>以下のコマンドで、カスタムのworldをガソリンスタンドとロボットとともにGazeboでlaunchできるようになっているはずです。:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  roslaunch MYROBOT_gazebo MYROBOT.launch
</span></code></pre></td></tr></table></div></figure>


<p>この方法の欠点は、あなたの<code>MYROBOT_description</code>パッケージと<code>MYROBOT_gazebo</code>パッケージが簡単運用できないということです。</p>

<ul>
<li>これらのROSパッケージを利用する前に、最初に新規のシステムには、<code>GAZEBO_MODEL_PATH</code>を設定しなければならないのです。</li>
</ul>


<h4>次のステップ</h4>

<p>ここまでで、Gazeboやworldファイル、そしてURDFモデルを起動するroslaunchの作り方を学びました。チュートリアルを通して、<a href="">GazeboでURDFを使う</a>ことで、あなた独自のGazebo-ready URDFモデルを作成する準備が出来ました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.6-3:GazeboをROSに繋ぐ (Gazebo_ros_pkgsをインストールする 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/14/gazebo-installing-gazebo-ros-pkgs/"/>
    <updated>2015-02-14T21:33:12+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/14/gazebo-installing-gazebo-ros-pkgs</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/14/2015 (Sat)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第六弾「Connect to ROS」。<br/>
ROSはロボットの制御フレームワークです。このチュートリアルでは、GazeboとROSのインターフェースについて説明します。<br/>
今回はその「Installing gazebo_ros_pkgs」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>INTERMEDIATE</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=connect_ros">GAZEBO Tutorial-Connect to ROS</a></p>

<h2>はじめに</h2>

<p>GazeboのインターフェースのためのROSパッケージのセットは、<code>gazebo_ros_pkgs</code>という名前の新しいメタパッケージで構成されています。続きを読む前に、前提情報として、<a href="http://cir-kit.github.io/blog/2015/02/14/gazebo-ros-overview/">ROSの統合についての概要</a>をご覧ください。<br/>
これらの説明は、<a href="http://www.ros.org/wiki/hydro">ROS Hydro</a>と<a href="http://www.ros.org/wiki/indigo">Ros Indigo</a>と完全に統合されたGazeboのバージョンを使用するためのものです。チュートリアルを始める前に、<a href="http://cir-kit.github.io/blog/2015/02/14/gazebo-which-combination-of-ros-and-gazebo-versions-to-use/">どのGazebo/ROSのバージョンの組み合わせを使うか</a>をまず読むことをおすすめします。必要に応じて、それに応えるインストール方法が必要となります。</p>

<h2>必須条件</h2>

<p>ROSのコンセプトについて<a href="http://www.ros.org/wiki/ROS/Tutorials">ROSチュートリアル</a>を通じて理解しておく必要があります。</p>

<h3>ROSをインストールする</h3>

<p>ROSの統合チュートリアルのために、(<code>ros-hydro-desktop-full</code>もしくは<code>ros-indigo-desktop-full</code>)インストールをおすすめします。それにより、必要なパッケージを手に入れることができます。<br/>
詳しくは、<a href="http://www.ros.org/wiki/ROS/Installation">ROSのインストール</a>ページをご覧ください。もちろん、ROSのインストールページの説明に従い、ROSの<code>setup.sh</code>を<code>source</code>コマンドで実行しておいてください。</p>

<h3>Gazeboをインストールする</h3>

<p>ソースコードまたは、プレビルドされたUbuntuのdebianパッケージのどちらを使っても、Gazeboをインストールできます。<br/>
<a href="http://cir-kit.github.io/blog/2015/01/31/gazebo-install/">Gazeboのインストール</a>をご覧ください。ソースコードからインストールする場合には、<code>gazebo_X.Y</code>ブランチ(X.Yはあなたの必要とするバージョンを指します)をすることを忘れないでください。</p>

<h4>スタンドアローンなGazeboの動作チェックをする</h4>

<p><code>gazebo_ros_pkgs</code>のインストールを行う前に、以下のコマンドをターミナルで入力して、スタンドアローンなGazeboの動作チェックを行うことを忘れないでください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  gazebo
</span></code></pre></td></tr></table></div></figure>


<p>空のシミュレーションと、GUIが開くのが確認できるでしょう。また、画面左側の<strong>Insert</strong>タブをクリックし、モデルを選んで(クリックすると、モデルをシミュレーションのどこに置くか決定できます)、シミュレーションに足してください。</p>

<h4>Gazeboのバージョンが正しいことを確認する</h4>

<p>Gazeboがどこにインストールされているか探し、それが正しい位置にあるか確かめるために、以下のコマンドを実行してください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  which gzserver
</span><span class='line'>  which gzclient
</span></code></pre></td></tr></table></div></figure>


<p>もし、デフォルトの位置で、ソースコードからインストールしたのなら、結果は以下のようになるはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  /usr/local/bin/gzserver
</span><span class='line'>  /usr/local/bin/gzclient
</span></code></pre></td></tr></table></div></figure>


<p>もし、debianパッケージを使用してインストールしたなら、結果は以下のようになるはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  /usr/bin/gzserver
</span><span class='line'>  /usr/bin/gzclient
</span></code></pre></td></tr></table></div></figure>


<h2>gazebo_ros_pkgsのインストール</h2>

<p>好きな方法を選んでください。早くて簡単な方法はパッケージからインストールすることです。しかし、ソースコードからインストールすることで、デバックとバグパッチの適用をより簡単にできます。(oω&lt;)</p>

<h3>A. プレビルドDebianパッケージをインストールする</h3>

<p><code>gazebo_ros_pkgs</code>パッケージは以下のそれぞれのバージョンで利用可能です。:</p>

<ul>
<li><a href="http://ros.org/wiki/hydro">ROS Hydro</a>:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install ros-hydro-gazebo-ros-pkgs ros-hydro-gazebo-ros-control
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://ros.org/wiki/indigo">ROS Indigo</a>:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install ros-indigo-gazebo-ros-pkgs ros-indigo-gazebo-ros-control
</span></code></pre></td></tr></table></div></figure>


<p>もしこのインストール方法がうまく行ったら、このページの下の<strong>ROSの統合環境を使ってGazeboをテストする</strong>に進んでください。</p>

<h3>B. ソースコードからインストールする(Ubuntu)</h3>

<p>もしあなたが、ROSの最新バージョン(Groovy以上)を使用しているなら、ソースコードから<code>gazebo_ros_pkgs</code>をインストールする必要があります。ソースコードからインストールすることは、新しいプラグインを開発したり、パッチを適用したりするときに便利です。</p>

<h4>Catkinワークスペースをセットアップする</h4>

<p>これらのイントロダクションでは<a href="http://www.ros.org/wiki/catkin">catkinビルドシステム</a>を使うことが必要です。<br/>
もし、まだcatkinワークスペースのセットアップをしていないなら、以下のコマンドを試してみてください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/catkin_ws/src
</span><span class='line'><span class="nb">cd</span> ~/catkin_ws/src
</span><span class='line'>catkin_init_workspace
</span><span class='line'><span class="nb">cd</span> ~/catkin_ws
</span><span class='line'>catkin_make
</span></code></pre></td></tr></table></div></figure>


<p>次に、あなたの<code>.bash</code>ファイルにセットアップスクリプトを追加してください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;source ~/catkin_ws/devel/setup.bash&quot;</span> &gt;&gt; ~/.bashrc
</span></code></pre></td></tr></table></div></figure>


<p>もっと詳しい情報は、<a href="http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace">Catkinワークスペースを作る</a>というチュートリアルをご覧ください。</p>

<h4>GitHubレポジトリをCloneする</h4>

<p><code>git</code>があなたのUbuntuマシンにインストールされていることを確認してください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install git
</span></code></pre></td></tr></table></div></figure>


<h5>ROS Indigo</h5>

<p>Indigoはgazebo2.xシリーズを使用しておりイます。以下のインストールから始めましょう。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install -y gazebo2
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/ros-simulation/gazebo_ros_pkgs"><code>gazebo_ros_pkgs</code>のGitHubレポジトリ</a>からソースコードをダウンロードしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/catkin_ws/src
</span><span class='line'>git clone https://github.com/ros-simulation/gazebo_ros_pkgs.git -b indigo-devel
</span></code></pre></td></tr></table></div></figure>


<p><code>rosdep</code>コマンドを使って、足りない依存条件を確認しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosdep update
</span><span class='line'>rosdep check --from-paths . --ignore-src --rosdistro indigo
</span></code></pre></td></tr></table></div></figure>


<p><code>rosdep</code>のdebianインストールを使って、自動的に、不足している依存条件をインストールすることができます。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosdep install --from-paths . --ignore-src --rosdistro indigo -y
</span></code></pre></td></tr></table></div></figure>


<p>完了したら、<strong>gazebo_ros_pkgsをビルドする</strong>というセクションに移動しましょう。</p>

<h5>ROS Hydro</h5>

<p>Hydroはgazebo1.xシリーズを使用しておりイます。以下のインストールから始めましょう。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install -y gazebo
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/ros-simulation/gazebo_ros_pkgs"><code>gazebo_ros_pkgs</code>のGitHubレポジトリ</a>からソースコードをダウンロードしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/catkin_ws/src
</span><span class='line'>git clone https://github.com/ros-simulation/gazebo_ros_pkgs.git -b hydro-devel
</span></code></pre></td></tr></table></div></figure>


<p><code>rosdep</code>コマンドを使って、足りない依存条件を確認しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosdep update
</span><span class='line'>rosdep check --from-paths . --ignore-src --rosdistro hydro
</span></code></pre></td></tr></table></div></figure>


<p><code>rosdep</code>のdebianインストールを使って、自動的に、不足している依存条件をインストールすることができます。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosdep install --from-paths . --ignore-src --rosdistro hydro -y
</span></code></pre></td></tr></table></div></figure>


<p>完了したら、<strong>gazebo_ros_pkgsをビルドする</strong>というセクションに移動しましょう。</p>

<h2>ROSの統合環境を使ってGazeboをテストする</h2>

<p>ROSのセットアップファイルを<code>source</code>コマンドで有効にすることを忘れないでください。Hydroの場合は、以下のコマンドでそれを有効にできます。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> /opt/ros/hydro/setup.bash
</span></code></pre></td></tr></table></div></figure>


<p><code>~/.bashrc</code>に以上のようなコマンドは追加しているでしょう。<br/>
GazeboとROSの環境については、おそらく、セットアップし、ビルドしていることと仮定すると、<code>roscore</code>を起動した後に、<code>rosrun</code>コマンドだけでGazeboを起草できるはずです。:<br/>
もしまだ、<code>.bashrc</code>に以下のコマンドを追加していないなら、catkinの<code>setup.bash</code>を<code>source</code>コマンドで実行してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/catkin_ws/devel/setup.bash
</span></code></pre></td></tr></table></div></figure>


<p>その後、以下のコマンドを実行してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roscore <span class="p">&amp;</span>
</span><span class='line'>rosrun gazebo_ros gazebo
</span></code></pre></td></tr></table></div></figure>


<p>すると、ウィンドウの中に何も無いようなGazeboのGUIが立ち上がるでしょう。<br/>
ROSの接続が本当に完了しているか確かめるために、利用可能なROSのトピックを見てみましょう。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rostopic list
</span></code></pre></td></tr></table></div></figure>


<p>すると、トピックの一覧の中に、以下のようなトピックが確認できるはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/gazebo/link_states
</span><span class='line'>/gazebo/model_states
</span><span class='line'>/gazebo/parameter_descriptions
</span><span class='line'>/gazebo/parameter_updates
</span><span class='line'>/gazebo/set_link_state
</span><span class='line'>/gazebo/set_model_state
</span></code></pre></td></tr></table></div></figure>


<p>Gazeboのサービスの存在も確認することができます。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosservice list
</span></code></pre></td></tr></table></div></figure>


<p>すると、サービスの一覧の中に、以下のようなサービスが確認できるはずです。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/gazebo/apply_body_wrench
</span><span class='line'>/gazebo/apply_joint_effort
</span><span class='line'>/gazebo/clear_body_wrenches
</span><span class='line'>/gazebo/clear_joint_forces
</span><span class='line'>/gazebo/delete_model
</span><span class='line'>/gazebo/get_joint_properties
</span><span class='line'>/gazebo/get_link_properties
</span><span class='line'>/gazebo/get_link_state
</span><span class='line'>/gazebo/get_loggers
</span><span class='line'>/gazebo/get_model_properties
</span><span class='line'>/gazebo/get_model_state
</span><span class='line'>/gazebo/get_physics_properties
</span><span class='line'>/gazebo/get_world_properties
</span><span class='line'>/gazebo/pause_physics
</span><span class='line'>/gazebo/reset_simulation
</span><span class='line'>/gazebo/reset_world
</span><span class='line'>/gazebo/set_joint_properties
</span><span class='line'>/gazebo/set_link_properties
</span><span class='line'>/gazebo/set_link_state
</span><span class='line'>/gazebo/set_logger_level
</span><span class='line'>/gazebo/set_model_configuration
</span><span class='line'>/gazebo/set_model_state
</span><span class='line'>/gazebo/set_parameters
</span><span class='line'>/gazebo/set_physics_properties
</span><span class='line'>/gazebo/spawn_gazebo_model
</span><span class='line'>/gazebo/spawn_sdf_model
</span><span class='line'>/gazebo/spawn_urdf_model
</span><span class='line'>/gazebo/unpause_physics
</span><span class='line'>/rosout/get_loggers
</span><span class='line'>/rosout/set_logger_level
</span></code></pre></td></tr></table></div></figure>


<h2>Gazeboを起動するためのROSの他の方法</h2>

<p>Gazeboを起動するROSのコマンドはたくさんあります。:</p>

<ul>
<li>サーバーとクライアントを同時にlaunchする</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosrun gazebo_ros gazebo
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Gazeboサーバーだけをlaunchする</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosrun gazebo_ros gzserver
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Gazeboのクライアントだけをlaunchする</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosrun gazebo_ros gzclient
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>GDBを使った、Gazeboサーバーだけをデバッグモードでlaunchする</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosrun gazebo_ros debug
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>さらに、roslaunchを使ってGazeboを起動することもできます</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>roslaunch gazebo_ros empty_world.launch
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.6-2:GazeboをROSに繋ぐ (どのGazebo/ROSのバージョンの組み合わせを使うか 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/14/gazebo-which-combination-of-ros-and-gazebo-versions-to-use/"/>
    <updated>2015-02-14T15:29:45+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/14/gazebo-which-combination-of-ros-and-gazebo-versions-to-use</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/14/2015 (Sat)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第六弾「Connect to ROS」。<br/>
ROSはロボットの制御フレームワークです。このチュートリアルでは、GazeboとROSのインターフェースについて説明します。<br/>
今回はその「Which combination of ROS/Gazebo Versions to use」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>INTERMEDIATE</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=connect_ros">GAZEBO Tutorial-Connect to ROS</a></p>

<h2>はじめに</h2>

<p>このドキュメントでは、ROSとGazeboをそれぞれ異なるバージョンの組み合わせで使うためのオプションについて説明します。Gazebo ROSラッパーをインストールする前に、読んでおくことをおすすめします。</p>

<h2>簡単な判断のための短いバージョン</h2>

<p>もし、ROSの特定のバージョンを使用しており、Gazeboの特定のバージョンを使用する理由がないなら、<a href="http://cir-kit.github.io/blog/2015/02/14/gazebo-installing-gazebo-ros-pkgs/">gazebo_ros_pkgsをインストールする</a>というチュートリアルへ進むこともできます。</p>

<h2>GazeboのバージョンとROSの統合</h2>

<p>ROS Hydroまでは、GazeboはROSパッケージの代替とみなされていました。これは、Gazeboのメジャーバージョンの一つ（例えば、ROS Indigo用のgazebo2）はROSリリースサイクルの始まりであり、すべてのROSディストリビューションの間で保たれていたということを意味します。Gazeboの開発はROSから独立しています。なので、Gazeboの新しい各バージョンはROSディストリビューションで使用される前にリリースする必要があります。<br/>
Gazebo ABIの安定化ポリシーは、同じメジャーナンバーを持つすべてのバージョン(<code>gazebo_2.0.0</code>,<code>gazebo_2.1.0</code>,<code>gazebo_2.0.1</code>,&hellip;etc)はバイナリー互換であり、それ故に同じROSディストリビューションを使用するなら、相互に使用することができるといったような、<a href="http://semver.org/">sematic versioning pholosophy</a>に準拠しているということを覚えておいてください。</p>

<h3>Gazeboをインストールする</h3>

<h4>GazeboのUbuntuパッケージ</h4>

<p>Gazeboをインストールする簡単な方法は、パッケージを使うことです。Gazeboパッケージがホストしているレポジトリは主に2つあります。:一つは<code>package.ros.org</code>で、もうひとつは、<code>osrfoundation.packages.org</code>です。この投稿を行った時点では、ホストの状況は以下のようになっています。</p>

<blockquote><ul>
<li>packages.ros.org

<ul>
<li>Hydro: hosts gazebo version 1.x package.</li>
<li>Indigo: host gazebo version 2.x package.</li>
</ul>
</li>
<li>packages.osrfoundation.org

<ul>
<li>gazebo 1.x series (package name gazebo)</li>
<li>gazebo 2.x series (package name gazebo-current or gazebo2 in saucy/trusty)</li>
<li>gazebo 3.x series (package name gazebo3)</li>
<li>gazebo 4.x series (package name gazebo4)</li>
</ul>
</li>
</ul>
</blockquote>

<p>このことは、<code>osrfoundation</code>レポジトリは必ずしもUbuntuのGazeboパッケージから取得する必要がないということを意味します。ROSのレポジトリからインストールすることができます。</p>

<h4>Gazeboをソースからビルドする</h4>

<p>ソースコードからGazeboのバージョンをコンパイルしたのなら、あなたのGazeboで使用しているレポジトリのブランチにおける依存関係(gazebo_3.0, gazebo_4.0,&hellip;etc)は、メジャー場＾ジョンがローカルブランチのレポジトリとROSのディストリビューションで使用しているGazeboのバージョンが一致するときにかぎり、<code>gazebo_ros_pkgs</code>(それとGazeboでコンパイル済みのすべてのROSパッケージも)と共にバイナリコンパイルされます。例えば、もしあなたが、<code>gazebo_2.0</code>のGazeboブランチよりコンパイルをしているのなら、Indigo(Indigoはgazebo2シリーズを使用している)にある<code>gazebo_ros_pkgs</code>を使用することができます。<br/>
もしあなたが、デフォルトのブランチを使用しているなら、大抵のリリースされたパッケージと共にバイナリコンパイルを行うことはできません。なので、<code>gazebo_ros_pkgs</code>を有効にするために、<code>catkin</code>ワークスペースが必要となります。</p>

<h3>ROSディストリビューションのためにGazeboのデフォルトバージョンを使う</h3>

<p>特定のROSディストリビューションを使用する必要があり、out-of-the-boxのパッケージに関連するGazeboやROSを使用したい人にとって、このセクションは重要です。</p>

<h4>Indigo</h4>

<p>ROS IndigoはGazeboの2.xのバージョンをホストしています。完全に統合されたROSのシステムのためには、Gazeboの2.xバージョンを使用することをおすすめします。適用方法は、ROSレポジトリを使用するということだけで、(自動でgazebo2がインストールされます)<code>osrfoundation</code>レポジトリは必要ありません。</p>

<h4>Hydro</h4>

<p>ROS HydroはGazeboの1.9.xのバージョンをホストしています。完全に統合されたROSシステムのためには、Gazeboの1.9.xバージョンを使用することをおすすめします。適用する方法は、ROSレポジトリを使用するということだけで、(自動でgazeboがインストールされます)<code>osrfoundation</code>レポジトリは必要ありません。</p>

<h3>特定のバージョンのGazeboをROSと使用する</h3>

<p><strong>!警告! : このオプションを使うと、ROSのdebレポジトリによるGazeboに関連したいかなるROS Ubuntuパッケージも使用できなくなるかもしれません。<code>gazebo_ros_pkgs</code>と同等のものは、debianパッケージによりインストールすることは可能ですが、その他のすべてのソフトウェア（<code>turtlebot_gazebo</code>など）はソースコードからビルドしなければなりませんが、<code>catkin</code>ワークスペースのおかげで、これを行うのはとても簡単です。</strong><br/>
本当に必要であれば、特定のバージョンのGazeboとROSを使用する方法はたくさんあります:</p>

<h4>Gazebo 4.x シリーズ</h4>

<p>OSRFレポジトリは、gazebo4パッケージの最新をビルドする、<code>-gazebo4-</code>バージョンのROS/IndigoとROS/HydroのGazeboラッパーを提供しています。(`gazebo4_ros_pkgs)これらを使用する手順は以下のとおりです。</p>

<ul>
<li><code>osrfoundation</code>レポジトリをソースリストに追加する</li>
<li><code>gazebo4</code>パッケージをインストールするのに使う、<code>ros-distro-gazebo4-ros-pkgs</code>を<code>osrfoundation</code>レポジトリより追加する。</li>
<li>ソースコードから、残りのソフトウェアをコンパイルするために、<code>catkin</code>ワークスペースを使う</li>
</ul>


<h4>Gazebo 3.x シリーズ</h4>

<p>OSRFレポジトリは、gazebo3パッケージの最新をビルドする、<code>-gazebo3-</code>バージョンのROS/HydroとROS/GroovyのGazeboラッパーを提供しています。(<code>gazebo3_ros_pkgs</code>)これらを使用する手順は以下のとおりです。</p>

<ul>
<li><code>osrfoundation</code>レポジトリをソースリストに追加する</li>
<li><code>gazebo3</code>パッケージをインストールするのに使う、<code>ros-distro-gazebo3-ros-pkgs</code>を<code>osrfoundation</code>レポジトリより追加する。</li>
<li>ソースコードから、残りのソフトウェアをコンパイルするために、<code>catkin</code>ワークスペースを使う</li>
</ul>


<h4>Gazebo 2.x シリーズ</h4>

<p>OSRFレポジトリは、gazebo-currentパッケージの最新をビルドする、<code>-current-</code>バージョンのROS/HydroとROS/GroovyのGazeboラッパーを提供しています。(<code>gazebo_ros_pkgs-current</code>)これらを使用する手順は以下のとおりです。</p>

<ul>
<li><code>osrfoundation</code>レポジトリをソースリストに追加する</li>
<li><code>gazebo-current</code>パッケージをインストールするのに使う、<code>ros-distro-gazebo-ros-pkgs-current</code>を<code>osrfoundation</code>レポジトリより追加する。</li>
<li>ソースコードから、残りのソフトウェアをコンパイルするために、<code>catkin</code>ワークスペースを使う</li>
</ul>


<h2>FAQ</h2>

<h4>私はDARPAのロボティクスチャレンジ参加者です。どのバージョンを使うのが良いですか?</h4>

<p><code>drcsim-3.2</code>は<code>gazebo3</code>でビルドされています。<code>drcsim-4.0</code>からスタートすると、<code>gazebo4</code>を使うことになります。</p>

<h4>私はまだROSを使ったことがありません。どのバージョンを使うのが良いですか?</h4>

<p>ROSのサポートが必要ないなら、<a href="http://gazebosim.org/tutorials/?cat=installation"><code>osrfoundation</code>のレポジトリを利用してインストール</a>できる、最新リリースのバージョンをおすすめします。</p>

<h4><code>bullet/simbody/dart</code>物理エンジンを使いたいのですが、どのバージョンが良いですか?</h4>

<p><code>gazebo4</code>から始めるなら、<code>bullet</code>と<code>simbody</code>がUbuntuパッケージでサポートされています。なので、ROSと一緒に、<code>gazebo4</code>を使用するには、上記の説明に従ってください。<code>Dart</code>はソースコードからのインストールも必要とします（<code>gazebo3</code>からはじめるなら）。なので、<code>gazebo3</code>かそれ以外のバージョンを使用することができます。ROSと共に使用するために、このページの上部の説明に従ってください。</p>

<h4>ROS-JではどのバージョンのGazeboが動きますか?</h4>

<p>まだ決まってません。しかし、<a href="http://gazebosim.org/#status">予定では</a>おそらく<code>gazebo5</code>でしょう。</p>

<h4>gazebo4とROS Indigoを使う必要があります。どうしたらよいですか?</h4>

<p><strong>!警告! : このオプションを使うと、ROSのdebレポジトリから供給されるGazebo関連のROS Indigoパッケージが使えなくなるかもしれません。ソースコードからビルドする必要がありますが、<code>catkin</code>ワークスペースのおかげで、これを行うのはとても簡単です。</strong><br/>
Gazebo4.xのバージョンにだけある機能を使用する必要があるなら、<code>gazebo4</code>とROS Indigoをインストールするという方法があります。<strong>このページ内</strong>にある<code>gazebo4</code>パッケージを使ったROSの使い方についての説明に従ってください。</p>

<h4>gazebo3とROS Indigoを使う必要があります。どうしたらよいですか?</h4>

<p><strong>!警告! : このオプションを使うと、ROSのdebレポジトリから供給されるGazebo関連のROS Indigoパッケージが使えなくなるかもしれません。ソースコードからビルドする必要がありますが、<code>catkin</code>ワークスペースのおかげで、これを行うのはとても簡単です。</strong><br/>
Gazebo3.xのバージョンにだけある機能を使用する必要があるなら、<code>gazebo3</code>とROS Indigoをインストールするという方法があります。<strong>このページ内</strong>にある<code>gazebo3</code>パッケージを使ったROSの使い方についての説明に従ってください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.6-1:GazeboをROSに繋ぐ (ROSの概要 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/14/gazebo-ros-overview/"/>
    <updated>2015-02-14T11:25:06+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/14/gazebo-ros-overview</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/14/2015 (Sat)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第六弾「Connect to ROS」。<br/>
ROSはロボットの制御フレームワークです。このチュートリアルでは、GazeboとROSのインターフェースについて説明します。<br/>
今回はその「ROS Overview」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>INTERMEDIATE</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=connect_ros">GAZEBO Tutorial-Connect to ROS</a></p>

<h2>チュートリアル : ROSの統合概要</h2>

<p>Gazebo1.9と<a href="http://www.ros.org/wiki/hydro/">ROS Hydro</a>では、GazeboはROSの直接的な依存関係はなく、Ubuntuのスタンドアローンなパッケージとしてインストールされていました。歴史的に、GazeboをROSと共に使うには、Legacyの<code>simulator_gazebo</code>スタックと共にビルドされた、特別なバージョンのGazeboが必要でした。<br/>
ROSとスタンドアローンなGazeboを統合するときに、スタンドアローンなGazeboに関するラッパーである、新しい<code>gazebo_ros_pkds</code>という名前のROSパッケージが作られました。このパッケージでは、ROSのメッセージやサービス、そして動的参照を使ってGazeboの中でロボットをシミュレートするために、必要なインターフェースを供給しています。<code>simulatiorgazebo</code>と<code>gazeboros_pkgs</code>の間の主な違いは現在以下のようになっている。:</p>

<blockquote><ul>
<li>それ単体ではROSとの接続機能を持たないGazeboの最新スタンドアローンな依存関係をサポートしている</li>
<li><a href="http://www.ros.org/wiki/catkin">catkin</a>でビルドできる</li>
<li>可能な限り、URDFと<a href="http://gazebosim.org/sdf.html">SDF</a>を同じものとみなす</li>
<li>Gazeboでのソースコードの重複を減らす</li>
<li><code>ros_control</code>を使ったコントロールのためのボックス以外のサポートの改善</li>
<li>DARPAロボティクスチャレンジによるリアルタイムコントローラ統合の効率的な改善</li>
<li>現在のROSとGazeboから古いコードを削除する</li>
</ul>
</blockquote>

<p>新しいインターフェースの概要は下図のようになっているそうです。尚、下図は公式サイトのものです。:
<img src="http://cir-kit.github.io/images/2015-02-14-gazebo-ros-overview/775px-Gazebo_ros_api.png" alt="775px-Gazebo_ros_api" /></p>

<h3><code>simulator_gazebo</code>からアップグレードする</h3>

<p>以下のガイドラインは、あなたのGazeboの依存パッケージを、ROSパッケージの中で使用するために、<code>simulator_gazebo</code>からアップグレードするのに役立つでしょう。:</p>

<h4>Catkin</h4>

<p>Gazeboと古い<code>simulatorgazebo</code>スタックによるインターフェースのための現在のパッケージは<a href="http://www.ros.org/wiki/rosbuild">rosbuild</a>のビルドシステムで使われているものに似ています。ROS Hydroの中の<code>gazeboros_pkgs</code>とともに移行するためには、まず最初にパッケージを<strong>&ldquo;catkinize&rdquo;</strong>する必要があります。<a href="http://www.ros.org/wiki/catkin/Tutorials">Catkin Tutorials</a>をご覧ください。</p>

<h4>Launch Files</h4>

<p>Gazeboを起動するためには、以前作成した<code>roslaunch</code>ファイルにいくつかの変更を行う必要があります。それらのパッケージをアップデートする最も良い方法は、Gazeboのチュートリアルにある<a href="http://gazebosim.org/tutorials?tut=ros_roslaunch&amp;cat=connect_ros">Gazeboでroslaunchファイルを使ってモデルをスポーンさせる</a>を読むことです。nutshellでは:</p>

<blockquote><ul>
<li><code>roslaunch</code>ファイルの中では、<code>pkg="gazebo"</code>は<code>pkg="gazebo_ros"</code>とリネームする必要があります。</li>
<li><code>gazebo_worlds</code>パッケージは消去されました。ほとんどの<code>world</code>ファイルはめったに使われず、SDFやXMLフォーマットの中の変更と共に定義されることもありません。つまり、<code>empty.world</code>を含むすべての<code>world</code>ファイルはGazeboのプロジェクト自身の中で、センタライズ（初期化）されます。</li>
<li>Gazeboの<code>launch</code>ファイルを使う最も良い方法は、<code>gazebo_ros</code>パッケージにある、<code>empty world</code>の<code>launch</code>ファイルをただ単にinherentもしくはincludeすることです。</li>
</ul>
</blockquote>

<h4>CMakeLists.txt</h4>

<p>GazeboはもはやROSパッケージではないが、システム依存はあるので、<code>Cmake</code>ファイルを再構成する必要があります。以下に示すのは、<code>CMakeLists.txt</code>の一例です。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='cmake'><span class='line'><span class="nb">cmake_minimum_required</span><span class="p">(</span><span class="s">VERSION</span> <span class="s">2.8.3</span><span class="p">)</span>
</span><span class='line'><span class="nb">project</span><span class="p">(</span><span class="s">YOURROBOT_gazebo_plugins</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">find_package</span><span class="p">(</span><span class="s">catkin</span> <span class="s">REQUIRED</span> <span class="s">COMPONENTS</span>
</span><span class='line'>  <span class="s">gazebo_ros</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Depend on system install of Gazebo</span>
</span><span class='line'><span class="nb">find_package</span><span class="p">(</span><span class="s">gazebo</span> <span class="s">REQUIRED</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">include_directories</span><span class="p">(</span><span class="s">include</span> <span class="o">${</span><span class="nv">catkin_INCLUDE_DIRS</span><span class="o">}</span> <span class="o">${</span><span class="nv">GAZEBO_INCLUDE_DIRS</span><span class="o">}</span> <span class="o">${</span><span class="nv">SDFormat_INCLUDE_DIRS</span><span class="o">}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Build whatever you need here</span>
</span><span class='line'><span class="nb">add_library</span><span class="p">(</span><span class="s">...</span><span class="p">)</span> <span class="c"># TODO</span>
</span><span class='line'>
</span><span class='line'><span class="nb">catkin_package</span><span class="p">(</span>
</span><span class='line'>    <span class="s">DEPENDS</span>
</span><span class='line'>      <span class="s">gazebo_ros</span>
</span><span class='line'>    <span class="s">CATKIN_DEPENDS</span>
</span><span class='line'>    <span class="s">INCLUDE_DIRS</span>
</span><span class='line'>    <span class="s">LIBRARIES</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>package.xml</h4>

<p>これは<code>rosbuild</code>における<code>manifest.xml</code>を置き換えたものです : 新規の<code>gazebo_ros</code>パッケージに依存関係を追加します。</p>

<h3>Gazeboを起動する</h3>

<p>Gazeboを<code>launch</code>するためのROSノードの名前はGazeboで実行可能な名前に少しだけ変更されます :</p>

<blockquote><ul>
<li>rosrun gazebo_ros Gazebo
GazeboサーバーとGUIを両方起動します。</li>
<li>rosrun gazebo_ros gui
<code>rosrun gazebo_ros gzclient</code>に置き換えられています</li>
<li>rosrun gazebo_ros gzserver
以下のノードを起動することができるようになります

<blockquote></blockquote></li>
</ul>
</blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rosrun gazebo_ros gazebo
</span><span class='line'>rosrun gazebo_ros gzserver
</span><span class='line'>rosrun gazebo_ros gzclient
</span><span class='line'>rosrun gazebo_ros spawn_model
</span><span class='line'>rosrun gazebo_ros perf
</span><span class='line'>rosrun gazebo_ros debug
</span></code></pre></td></tr></table></div></figure>


<p>これらのノードについては、<a href="">Gazeboでroslaunchファイルを使ってモデルをスポーンさせる</a>というチュートリアルに詳しく述べてあります。</p>

<h3>More</h3>

<p>ここにissueをアップグレードしてください。</p>

<h2>チュートリアル</h2>

<p>Gazeboの履歴に起因する多くの変更を反映するために、<code>ros.org</code>のチュートリアルは完全に消去され、このウェブサイトの<code>scratch</code>に再投稿されています。Gazeboの中で、URDFベースのロボットをスムーズに動かすためのやり方について、私達は、徹底的なドキュメントを作ることにより、最善を尽くしています。もし、疑問があるなら、<a href="http://answers.ros.org/">answers.ros.org</a>をご覧ください。<br/>
<a href="http://cir-kit.github.io/blog/2015/02/14/gazebo-installing-gazebo-ros-pkgs/">gazebo_rosパッケージをインストールする</a>に続きます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.5-2:センサについて（カメラの歪み 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/14/gazebo-camera-distortion/"/>
    <updated>2015-02-14T04:06:22+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/14/gazebo-camera-distortion</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/14/2015 (Sat)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第五弾「Sensors」。<br/>
シミュレーションのセンサは環境を分析し、センサになるべくよく似たデータストリームを生成します。<br/>
チュートリアルでは、センサの使い方と修正方法について説明します。
今回はその「Camera Distortion」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>BEGINNER</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=sensors">GAZEBO Tutorial-Sensors</a></p>

<h2>はじめに</h2>

<p>カメラのレンズはたいてい光学の角度ゆがみがあり、これにより、イメージ（像）が歪む。例として、タスクを実行したり、物体を発見するのに、より広い範囲の環境視野を確保する目的でロボティクスの分野で広く使用されている、魚眼カメラが挙げられる。<br/>
MatlabやOpenCVのようなカメラキャリブレーションツールを使うと、カメラ固有のパラメータに付随した、歪み係数をなしにすることができる。そのような歪み系数とともに、Gazeboの中に歪んだカメラセンサを生成することができる。</p>

<h3>現在の実装</h3>

<p>Gazeboでは、現在、<a href="http://en.wikipedia.org/wiki/Distortion_(optics">Brown&rsquo;s distortion model</a>#Software_correction)に基づいたカメラのシミュレーションをサポートしています。このモデルでは、カメラのキャリブレーションツールから取得できる歪み系数を<code>k1</code>、<code>k2</code>、<code>k3</code>、<code>p1</code>、<code>p2</code>としている。<code>k</code>という係数は歪みモデルの放射状の構成であり、<code>p</code>という係数はタンジェントの構成を示す。　　
現在の実装には以下のようないくつかの制限がある。</p>

<ol>
<li><p>樽状の歪みだけがサポートされており、たいていは、<code>k1</code>の値が負である。</p></li>
<li><p>歪みは、カメラのイメージテクスチャに適用されています。これは、イメージデータを生成し、ねじっているだけのものを使っていることを意味する。このことは、最終的なイメージ（特に角では）が現実の樽状の歪みを持ったカメラレンズよりも、狭い視野になるという警告を持つことになる。この現象を償う一つの解決策はGazeboの中で、カメラセンサの視野を増加させるという方法である。</p></li>
</ol>


<h2>カメラを歪みとともに生成する</h2>

<p>歪みのあるカメラモデルを追加するには:</p>

<ol>
<li>モデルのディレクトリを作る</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/.gazebo/models/distorted_camera
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.config</code>ファイルを生成する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/distorted_camera/model.config
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.config</code>に以下の内容をコピペする</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;model&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Distorted Camera<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&#39;1.5&#39;</span><span class="nt">&gt;</span>model.sdf<span class="nt">&lt;/sdf&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;author&gt;</span>
</span><span class='line'>   <span class="nt">&lt;name&gt;</span>My Name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;email&gt;</span>me@my.email<span class="nt">&lt;/email&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/author&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;description&gt;</span>
</span><span class='line'>    My distorted camera.
</span><span class='line'>  <span class="nt">&lt;/description&gt;</span>
</span><span class='line'><span class="nt">&lt;/model&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>~/.gazebo/models/distorted_camera/model.sdf</code>ファイルを生成する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/distorted_camera/model.sdf
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.sdf</code>に以下の内容をコピペする。以下のモデルはスタンダードなカメラモデルに歪みを付加したものです。:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.5&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;distorted_camera&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0.05 0.05 0.05 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>        <span class="nt">&lt;mass&gt;</span>0.1<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;box&gt;</span>
</span><span class='line'>            <span class="nt">&lt;size&gt;</span>0.1 0.1 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;box&gt;</span>
</span><span class='line'>            <span class="nt">&lt;size&gt;</span>0.1 0.1 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;sensor</span> <span class="na">name=</span><span class="s">&quot;camera&quot;</span> <span class="na">type=</span><span class="s">&quot;camera&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;camera&gt;</span>
</span><span class='line'>          <span class="nt">&lt;horizontal_fov&gt;</span>1.047<span class="nt">&lt;/horizontal_fov&gt;</span>
</span><span class='line'>          <span class="nt">&lt;image&gt;</span>
</span><span class='line'>            <span class="nt">&lt;width&gt;</span>320<span class="nt">&lt;/width&gt;</span>
</span><span class='line'>            <span class="nt">&lt;height&gt;</span>240<span class="nt">&lt;/height&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/image&gt;</span>
</span><span class='line'>          <span class="nt">&lt;clip&gt;</span>
</span><span class='line'>            <span class="nt">&lt;near&gt;</span>0.1<span class="nt">&lt;/near&gt;</span>
</span><span class='line'>            <span class="nt">&lt;far&gt;</span>100<span class="nt">&lt;/far&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/clip&gt;</span>
</span><span class='line'>          <span class="nt">&lt;distortion&gt;</span>
</span><span class='line'>            <span class="nt">&lt;k1&gt;</span>-0.25<span class="nt">&lt;/k1&gt;</span>
</span><span class='line'>            <span class="nt">&lt;k2&gt;</span>0.12<span class="nt">&lt;/k2&gt;</span>
</span><span class='line'>            <span class="nt">&lt;k3&gt;</span>0.0<span class="nt">&lt;/k3&gt;</span>
</span><span class='line'>            <span class="nt">&lt;p1&gt;</span>-0.00028<span class="nt">&lt;/p1&gt;</span>
</span><span class='line'>            <span class="nt">&lt;p2&gt;</span>-0.00005<span class="nt">&lt;/p2&gt;</span>
</span><span class='line'>            <span class="nt">&lt;center&gt;</span>0.5 0.5<span class="nt">&lt;/center&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/distortion&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/camera&gt;</span>
</span><span class='line'>        <span class="nt">&lt;always_on&gt;</span>1<span class="nt">&lt;/always_on&gt;</span>
</span><span class='line'>        <span class="nt">&lt;update_rate&gt;</span>30<span class="nt">&lt;/update_rate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;visualize&gt;</span>true<span class="nt">&lt;/visualize&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/sensor&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/model&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Gazeboを起動する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>歪みを付加したカメラモデルを挿入する : 画面左側の枠の中で、<strong>Insert</strong>タブを選び、<strong>Distorted Camera</strong>をクリックする。その後、シミュレータにそれを設置する。</p></li>
<li><p>歪みを付加したカメラモデルを観測する : <strong>Topis Selector</strong>を表示するために、<strong>Window</strong>-><strong>Topic Visualazation</strong>をクリックする(もしくは、<code>Ctrl-T</code>を押す)。</p></li>
<li><p><code>/gazebo/default/hokuyo/link/camera/image</code>のような名前のトピックを探し、クリックしたら、<strong>Okay</strong>をクリックしてください。すると、カメライメージが表示されたウィンドウが見えるはずです。</p></li>
</ol>


<p>手順は、以下の動画を参照ください。また、動画でご覧いただくように、カメラのイメージは湯がんでおり、箱のエッジが曲がって見えます。歪みを調整するには、<code>model.sdf</code>ファイルにある、<code>k1</code>,<code>k2</code>,<code>k3</code>,<code>p1</code>,<code>p2</code>の歪み係数を変更するだけでよいです。</p>

<div class="youtube-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/lZ41gqMjbV4" frameborder="0" allowfullscreen></iframe>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.5-1:センサについて (センサノイズモデル 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/13/gazebo-sensor-noise-model/"/>
    <updated>2015-02-13T21:50:50+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/13/gazebo-sensor-noise-model</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/14/2015 (Sat)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第五弾「Sensors」。<br/>
シミュレーションのセンサは環境を分析し、センサになるべくよく似たデータストリームを生成します。<br/>
チュートリアルでは、センサの使い方と修正方法について説明します。
今回はその「Sensor Noise Model」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>BEGINNER</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=sensors">GAZEBO Tutorial-Sensors</a></p>

<h2>はじめに</h2>

<p>Gazeboでは、たくさんの一般的なセンサを提供しています。現実世界では、センサにはノイズが存在し、実環境を完全に観測することは出来ません。デフォルトでは、Gazeboのセンサは環境を完全に観測します(IMUは含みません;続きを参照ください)。認識プログラムを試してみる様な、よりリアルな環境を提供するには、Gazeboのセンサが生成したデータにあえてノイズを付け加える必要があります。<br/>
この記事を書いている時点で、Gazeboは以下のタイプのセンサにノイズを付加することができます。</p>

<blockquote><ul>
<li>Ray (e.g., lasers)</li>
<li>Camera</li>
<li>IMU</li>
</ul>
</blockquote>

<h2>Ray(Laser)ノイズ</h2>

<p>rayセンサでは、それぞれのビームの距離値にガウシアンノイズを付加します。ノイズの値として付加されるガウシアン分布の平均値と標準偏差を設定することができます。ノイズの値はそれぞれのビームに独立して付加されます。ノイズを付加した後、距離はセンサの最小距離と最大距離の間で偽の値（ノイズが付加された値）になります。<br/>
rayノイズモデルをテストするには:</p>

<ol>
<li>モデルのディレクトリを作る</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  mkdir -p ~/.gazebo/models/noisy_laser
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>config</code>ファイルを生成する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  gedit ~/.gazebo/models/noisy_laser/model.config
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.config</code>ファイルに以下をコピペする</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;model&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Noisy laser<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&#39;1.4&#39;</span><span class="nt">&gt;</span>model.sdf<span class="nt">&lt;/sdf&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;author&gt;</span>
</span><span class='line'>   <span class="nt">&lt;name&gt;</span>My Name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;email&gt;</span>me@my.email<span class="nt">&lt;/email&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/author&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;description&gt;</span>
</span><span class='line'>    My noisy laser.
</span><span class='line'>  <span class="nt">&lt;/description&gt;</span>
</span><span class='line'><span class="nt">&lt;/model&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>~/.gazebo/models/noisy_laser/model.sdf</code>ファイルを生成する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/noisy_laser/model.sdf
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>以下を<code>model.sdf</code>ファイルにコピペする。以下のモデルはスタンダードな<code>Hokuyo</code>モデルにノイズを付加したものです。:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;hokuyo&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;gravity&gt;</span>false<span class="nt">&lt;/gravity&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>        <span class="nt">&lt;mass&gt;</span>0.1<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;mesh&gt;</span>
</span><span class='line'>            <span class="nt">&lt;uri&gt;</span>model://hokuyo/meshes/hokuyo.dae<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/mesh&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;sensor</span> <span class="na">name=</span><span class="s">&quot;laser&quot;</span> <span class="na">type=</span><span class="s">&quot;ray&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pose&gt;</span>0.01 0 0.03 0 -0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>        <span class="nt">&lt;ray&gt;</span>
</span><span class='line'>          <span class="nt">&lt;scan&gt;</span>
</span><span class='line'>            <span class="nt">&lt;horizontal&gt;</span>
</span><span class='line'>              <span class="nt">&lt;samples&gt;</span>640<span class="nt">&lt;/samples&gt;</span>
</span><span class='line'>              <span class="nt">&lt;resolution&gt;</span>1<span class="nt">&lt;/resolution&gt;</span>
</span><span class='line'>              <span class="nt">&lt;min_angle&gt;</span>-2.26889<span class="nt">&lt;/min_angle&gt;</span>
</span><span class='line'>              <span class="nt">&lt;max_angle&gt;</span>2.268899<span class="nt">&lt;/max_angle&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/horizontal&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/scan&gt;</span>
</span><span class='line'>          <span class="nt">&lt;range&gt;</span>
</span><span class='line'>            <span class="nt">&lt;min&gt;</span>0.08<span class="nt">&lt;/min&gt;</span>
</span><span class='line'>            <span class="nt">&lt;max&gt;</span>10<span class="nt">&lt;/max&gt;</span>
</span><span class='line'>            <span class="nt">&lt;resolution&gt;</span>0.01<span class="nt">&lt;/resolution&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/range&gt;</span>
</span><span class='line'>          <span class="nt">&lt;noise&gt;</span>
</span><span class='line'>            <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>            <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>            <span class="nt">&lt;stddev&gt;</span>0.01<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/noise&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/ray&gt;</span>
</span><span class='line'>        <span class="nt">&lt;plugin</span> <span class="na">name=</span><span class="s">&quot;laser&quot;</span> <span class="na">filename=</span><span class="s">&quot;libRayPlugin.so&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;always_on&gt;</span>1<span class="nt">&lt;/always_on&gt;</span>
</span><span class='line'>        <span class="nt">&lt;update_rate&gt;</span>30<span class="nt">&lt;/update_rate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;visualize&gt;</span>true<span class="nt">&lt;/visualize&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/sensor&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/model&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Gazeboを起動する:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>ノイズを付加したレーザーセンサを挿入する : 画面左側の枠の中で、<strong>Insert</strong>タブを選び、<strong>Noisy laser</strong>をクリックする。その後、シミュレータにそれを設置する。</p></li>
<li><p>ノイズを付加したレーザーセンサを観測する : <strong>Topis Selector</strong>を表示するために、<strong>Window</strong>-><strong>Topic Visualazation</strong>をクリックする(もしくは、<code>Ctrl-T</code>を押す)。</p></li>
<li><p><code>/gazebo/default/hokuyo/link/laser/scan</code>のような名前のトピックを探し、クリックしたら、<strong>Okay</strong>をクリックしてください。すると、レーザーデータが表示されたウィンドウが見えるはずです。</p></li>
</ol>


<p>スキャンデータにノイズが付加されているのを確認できます。ノイズを調節するには、平均値と標準偏差を<code>model.sdf</code>にある以下のブロックでで変更するだけでよいです。なお、それらの要素はすべてメートル単位系です。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;noise&gt;</span>
</span><span class='line'>  <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>  <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>  <span class="nt">&lt;stddev&gt;</span>0.01<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'><span class="nt">&lt;/noise&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Hokuyo</code>レーザーにはピッタリの値があります。<br/>
尚、これらの手順は、以下の動画を参照してください。動画では、ノイズを見やすくするために、平均値を0、標準偏差を0.1としてあります。</p>

<div class="youtube-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/_y-m1fQxZjA" frameborder="0" allowfullscreen></iframe>
</div>


<h2>カメラノイズ</h2>

<p>カメラのノイズでは、<a href="http://en.wikipedia.org/wiki/Image_noise#Amplifier_noise_.28Gaussian_noise.29">output amplifier noise</a>を付加します。これは、各ピクセルに独立したガウシアンサンプルノイズを付加するものです。各ピクセルにでサンプリングされる値に、ガウシアン分布の平均値と標準偏差を設定することができます。ノイズの値は各ピクセルで独立しており、ノイズの値は各ピクセルの各色チャンネルにも独立して付加されます。ノイズを付加した後、色チャンネルの値は0.0から1.0の間で偽の値を取ります。;このfloat型のポイントの色の値はイメージの中では、unsigned int型として扱われます。普通は、0から255の間の値です。(8 [ビット/チャンネル] を使用します)<br/>
このノイズモデルは<a href="">GLSL</a>の中で、シェーダーやGPUを起動するときの必要要件として実行されます。<br/>
カメラノイズモデルをテストするには:</p>

<ol>
<li>モデルディレクトリをつくります:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/.gazebo/models/noisy_camera
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.config</code>ファイルを生成する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/noisy_camera/model.config
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.config</code>に以下の内容をコピペする</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;model&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Noisy camera<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&#39;1.4&#39;</span><span class="nt">&gt;</span>model.sdf<span class="nt">&lt;/sdf&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;author&gt;</span>
</span><span class='line'>   <span class="nt">&lt;name&gt;</span>My Name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;email&gt;</span>me@my.email<span class="nt">&lt;/email&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/author&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;description&gt;</span>
</span><span class='line'>    My noisy camera.
</span><span class='line'>  <span class="nt">&lt;/description&gt;</span>
</span><span class='line'><span class="nt">&lt;/model&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>~/.gazebo/models/noisy_camera/model.sdf</code>ファイルを生成する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/noisy_camera/model.sdf
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>以下の内容を<code>model.sdf</code>にコピペする。これは、基本的なカメラモデルにノイズを付加したモデルです。:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;camera&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;gravity&gt;</span>false<span class="nt">&lt;/gravity&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0.05 0.05 0.05 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>        <span class="nt">&lt;mass&gt;</span>0.1<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;box&gt;</span>
</span><span class='line'>            <span class="nt">&lt;size&gt;</span>0.1 0.1 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;sensor</span> <span class="na">name=</span><span class="s">&quot;camera&quot;</span> <span class="na">type=</span><span class="s">&quot;camera&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;camera&gt;</span>
</span><span class='line'>          <span class="nt">&lt;horizontal_fov&gt;</span>1.047<span class="nt">&lt;/horizontal_fov&gt;</span>
</span><span class='line'>          <span class="nt">&lt;image&gt;</span>
</span><span class='line'>            <span class="nt">&lt;width&gt;</span>1024<span class="nt">&lt;/width&gt;</span>
</span><span class='line'>            <span class="nt">&lt;height&gt;</span>1024<span class="nt">&lt;/height&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/image&gt;</span>
</span><span class='line'>          <span class="nt">&lt;clip&gt;</span>
</span><span class='line'>            <span class="nt">&lt;near&gt;</span>0.1<span class="nt">&lt;/near&gt;</span>
</span><span class='line'>            <span class="nt">&lt;far&gt;</span>100<span class="nt">&lt;/far&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/clip&gt;</span>
</span><span class='line'>          <span class="nt">&lt;noise&gt;</span>
</span><span class='line'>            <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>            <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>            <span class="nt">&lt;stddev&gt;</span>0.07<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/noise&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/camera&gt;</span>
</span><span class='line'>        <span class="nt">&lt;always_on&gt;</span>1<span class="nt">&lt;/always_on&gt;</span>
</span><span class='line'>        <span class="nt">&lt;update_rate&gt;</span>30<span class="nt">&lt;/update_rate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;visualize&gt;</span>true<span class="nt">&lt;/visualize&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/sensor&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/model&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Gazeboを起動する:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>ノイズが付加されたカメラを挿入する : 画面左側の枠の中で、<strong>Insert</strong>タブを選び、<strong>Noisy camera</strong>をクリックする。その後、シミュレータにそれを設置する。</p></li>
<li><p>ノイズを付加したカメラを観測する : <strong>Topis Selector</strong>を表示するために、<strong>Window</strong>-><strong>Topic Visualazation</strong>をクリックする(もしくは、<code>Ctrl-T</code>を押す)。</p></li>
<li><p><code>/gazebo/default/camera/link/camera/image</code>のような名前のトピックを探し、クリックしたら、<strong>Okay</strong>をクリックしてください。すると、カメラのイメージが表示されたウィンドウが見えるはずです。</p></li>
</ol>


<p>よく見ると、イメージにノイズが付加されているのが見えると思います。ノイズを調整するには、<code>model.sdf</code>ファイルの中にある以下のようなセクションで、平均値と標準偏差を調節してやるだけで良いです。これらには単位系はありません。;各色チャンネルに0.0以上、1.0以下の値でノイズを付加します。<br/>
以下のレイは、<code>&lt;stddev&gt;</code>の値をとても大きくしています。この値を減らしてみてください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;noise&gt;</span>
</span><span class='line'>  <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>  <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>  <span class="nt">&lt;stddev&gt;</span>0.007<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'><span class="nt">&lt;/noise&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>デジタルカメラには、最適なノイズの値があります。<br/>
尚、これらの手順は、以下の動画を参照してください。動画では、ノイズを見やすくするために、平均値を0、標準偏差を0.07としたものと、平均値を0、標準偏差を0.007としたものを表示しています。</p>

<div class="youtube-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/Vp-0OPoECws" frameborder="0" allowfullscreen></iframe>
</div>


<h2>IMUノイズ</h2>

<p>IMUセンサでは、角度速度と並進加速度に対する2種類の外乱(ノイズとバイアス)を考えます。角速度と並進加速度は分かれているものとして、このモデルでは、速度ノイズ、速度バイアス、加速度ノイズ、加速度バイアスの4つのパラメータを導出します。世界座標系（将来的には変化する）の中で、完全な値として表現されるようなIMUの元データから応用するノイズはありません。<br/>
ノイズは付加的であり、ガウシアン分布からサンプリングされます。ノイズの値をサンプリングしてくる、ガウシアン分布（速度や、角速度の一つ一つに対するもの）の平均値と標準偏差を設定することができます。ノイズの値は、互いのサンプリング要素(X,Y,Z)では独立しており、それらの要素に付加されます。<br/>
バイアスもまた付加的でありますが、これは、シミュレーションがスタートした時の一度だけしかサンプリングされません。バイアスの値をサンプリングしてくる、ガウシアン分布（速度や、角速度の一つ一つに対するもの）の平均値と標準偏差を設定することができます。バイアスは設定されたパラメータに沿ってサンプリングされます;提供される平均値はバイアスの大きさを定義し、各方向にバイアスがかかっており、バイアスは修正された値で、各要素(X,Y,Z)に付加されていると仮定されます。<br/>
<strong>Note : </strong>シミュレートされているシステムと物理エンジンの構成に依存しているので、シミュレーションされたIMUのデータはすでにいくぶんかノイズがのっていることがあります。なぜなら、システムはすべての収斂の方法を解決しているわけではないからです。なので、アプリケーションに依存するという点では、ノイズを付加する必要はないかもしれません。<br/>
IMUノイズモデルをテストするには:</p>

<ol>
<li>モデルのディレクトリを作る:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/.gazebo/models/noisy_imu
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.config</code>ファイルを生成する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/noisy_imu/model.config
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.config</code>に以下の内容をコピペする</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;model&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Noisy IMU<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&#39;1.4&#39;</span><span class="nt">&gt;</span>model.sdf<span class="nt">&lt;/sdf&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;author&gt;</span>
</span><span class='line'>   <span class="nt">&lt;name&gt;</span>My Name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;email&gt;</span>me@my.email<span class="nt">&lt;/email&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/author&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;description&gt;</span>
</span><span class='line'>    My noisy IMU.
</span><span class='line'>  <span class="nt">&lt;/description&gt;</span>
</span><span class='line'><span class="nt">&lt;/model&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>~/.gazebo/models/noisy_imu/model.sdf</code>ファイルを生成する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>gedit ~/.gazebo/models/noisy_imu/model.sdf
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>model.sdf</code>に以下の内容をコピペする:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;imu&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>        <span class="nt">&lt;mass&gt;</span>0.1<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;box&gt;</span>
</span><span class='line'>            <span class="nt">&lt;size&gt;</span>0.1 0.1 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;box&gt;</span>
</span><span class='line'>            <span class="nt">&lt;size&gt;</span>0.1 0.1 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;sensor</span> <span class="na">name=</span><span class="s">&quot;imu&quot;</span> <span class="na">type=</span><span class="s">&quot;imu&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;imu&gt;</span>
</span><span class='line'>          <span class="nt">&lt;noise&gt;</span>
</span><span class='line'>            <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>            <span class="nt">&lt;rate&gt;</span>
</span><span class='line'>              <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>              <span class="nt">&lt;stddev&gt;</span>2e-4<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>              <span class="nt">&lt;bias_mean&gt;</span>0.0000075<span class="nt">&lt;/bias_mean&gt;</span>
</span><span class='line'>              <span class="nt">&lt;bias_stddev&gt;</span>0.0000008<span class="nt">&lt;/bias_stddev&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/rate&gt;</span>
</span><span class='line'>            <span class="nt">&lt;accel&gt;</span>
</span><span class='line'>              <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>              <span class="nt">&lt;stddev&gt;</span>1.7e-2<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>              <span class="nt">&lt;bias_mean&gt;</span>0.1<span class="nt">&lt;/bias_mean&gt;</span>
</span><span class='line'>              <span class="nt">&lt;bias_stddev&gt;</span>0.001<span class="nt">&lt;/bias_stddev&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/accel&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/noise&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/imu&gt;</span>
</span><span class='line'>        <span class="nt">&lt;always_on&gt;</span>1<span class="nt">&lt;/always_on&gt;</span>
</span><span class='line'>        <span class="nt">&lt;update_rate&gt;</span>1000<span class="nt">&lt;/update_rate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/sensor&gt;</span>Laser
</span><span class='line'>    <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/model&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Gazeboを起動する:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>ノイズを付加したIMUを挿入する : 画面左側の枠の中で、<strong>Insert</strong>タブを選び、<strong>Noisy IMU</strong>をクリックする。その後、シミュレータにそれを設置する。</p></li>
<li><p>ノイズを付加したIMUを観測する : <strong>Topis Selector</strong>を表示するために、<strong>Window</strong>-><strong>Topic Visualazation</strong>をクリックする(もしくは、<code>Ctrl-T</code>を押す)。</p></li>
<li><p><code>/gazebo/default/camera/link/imu/imu</code>のような名前のトピックを探し、クリックしたら、<strong>Okay</strong>をクリックしてください。すると、IMUデータのテキストビューウィンドウが見えるはずです。</p></li>
</ol>


<p>ノイズをIMUのような高レートのセンサに適用するのは難しくなりがちです。特に複雑なシステムにおいてはそれはなおさらです。ノイズでゼロではない大きな値の平均値をとる　かつ/もしくは バイアスパラメータをとるのが友好的であるとわかるでしょう。<br/>
ノイズを調整するには、<code>model.sdf</code>ファイルの中にある以下のようなセクションで、平均値と標準偏差を調節してやるだけで良いです。角速度のノイズとバイアスの単位系は[rad/s]で加速度のノイズとバイアスの単位系は[m/s<sup>2</sup>]です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;noise&gt;</span>
</span><span class='line'>  <span class="nt">&lt;type&gt;</span>gaussian<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>  <span class="nt">&lt;rate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>    <span class="nt">&lt;stddev&gt;</span>2e-4<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bias_mean&gt;</span>0.0000075<span class="nt">&lt;/bias_mean&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bias_stddev&gt;</span>0.0000008<span class="nt">&lt;/bias_stddev&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/rate&gt;</span>
</span><span class='line'>  <span class="nt">&lt;accel&gt;</span>
</span><span class='line'>    <span class="nt">&lt;mean&gt;</span>0.0<span class="nt">&lt;/mean&gt;</span>
</span><span class='line'>    <span class="nt">&lt;stddev&gt;</span>1.7e-2<span class="nt">&lt;/stddev&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bias_mean&gt;</span>0.1<span class="nt">&lt;/bias_mean&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bias_stddev&gt;</span>0.001<span class="nt">&lt;/bias_stddev&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/accel&gt;</span>
</span><span class='line'><span class="nt">&lt;/noise&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>高い品質のIMU装置には、最適なノイズの値があります。<br/>
尚、これらの手順は、以下の動画を参照してください。平均値や標準偏差などは、上記の設定のものを使用しています。</p>

<div class="youtube-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/LZTzUgkLfwk" frameborder="0" allowfullscreen></iframe>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.4-1:ツールとユーティリティ (ログフィルタリング 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/13/gazebo-log-filtering/"/>
    <updated>2015-02-13T20:57:58+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/13/gazebo-log-filtering</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/13/2015 (Fri)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第四弾「Tools and utilities」。<br/>
Gazeboには多くのツールとユーティリティがあります。<br/>
このチュートリアルでは、利用可能なツールとその使い方を説明します。<br/>
今回はその「Log Filtering」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>BEGINNER</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=tools_utilities">GAZEBO Tutorial-Tools and Utilities</a></p>

<h2>はじめに</h2>

<p>状態のログとは、Gazeboからの環境情報の記録です。状態とは、姿勢、速度、加速度、そしてすべてのモデルのすべてのリンクに適用された力のことを指します。Gazeboでは、時間経過と共に変化するモデルの状態情報だけを記録します。状態ログのファイルには、ヘッダ、初期環境記録、状態の時系列情報で構成されています。</p>

<h2>Gazeboログコマンドのラインツール</h2>

<p>Gazeboでは、<code>gz log</code>コマンドでアクセスするロギングユーティリティ（記録ユーティリティ）を提供しています。<br/>
ヘルプ情報を以下のコマンドで確認してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gz <span class="nb">help </span>log
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gz log -h
</span></code></pre></td></tr></table></div></figure>


<h2>使い方の例</h2>

<h3>ステップ 1:状態ログファイルを作る</h3>

<p>古いログファイルを消去することから初めましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rm -rf ~/.gazebo/log/*
</span></code></pre></td></tr></table></div></figure>


<p>今回は、ログファイルを生成するのに、PR2ワールドを使用します。<br/>
Gazeboサーバを<code>-r</code>コマンドラインオプションをつけて実行しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gzserver -r worlds/pr2.world
</span></code></pre></td></tr></table></div></figure>


<p>数秒後に、サーバを<code>Ctrl-c</code>で停止しましょう。<br/>
新しいタイムスタンプのあるディレクトリが<code>~/.gazebo/log/</code>の中に、一つのサブディレクトリと<code>state.log</code>ファイルがあるはずです。例えば以下のような感じです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/.gazebo/log/2015-02-13T21:18:11.849250/gzserverstate.log
</span></code></pre></td></tr></table></div></figure>


<p>Gazeboでこれをリプレイすることにより、このログファイルを確認することができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo -p ~/.gazebo/log/*/gzserver/state.lgo
</span></code></pre></td></tr></table></div></figure>


<h3>ステップ 2:ログファイルをフィルタリングする</h3>

<p><code>gz log</code>コマンドラインツールでは、ログファイルを通じたステッピングとログファイル表示のコンテンツのエコーのためのメカニズムを提供しています。表示エコーの特徴は、モデルやリンクの姿勢などの情報を定義するようなログファイルを生成するフィルタと結合したものとなります。<br/>
記録した状態ログファイルをスクリーンにエコーしてみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gz log -e -f ~/.gazebo/log/*/gzserver/state.log
</span></code></pre></td></tr></table></div></figure>


<p>すると、スクロールできるほどたくさんの情報を確認することができるでしょう。<br/>
では、ログファイルにあるすべての速度、加速度、力の情報を消してみましょう。つまり、姿勢の情報だけを残します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gz log -e -f ~/.gazebo/log/*/gzserver/state.log --filter *.pose/*.pose
</span></code></pre></td></tr></table></div></figure>


<p><code>--filter</code>オプションは、ログファイルの情報を間引くには、柔軟で便利なコマンドライン引数です。<br/>
<code>Hz</code>フィルタを使えば、シミュレーション時間についてもフィルタリングをオコナウことができます。例えば、30 [Hz]で状態情報を出力したいとすると、以下のようにコマンド入力を行います。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gz log -e -f ~/.gazebo/log/*/gzserver/state.log -z 30
</span></code></pre></td></tr></table></div></figure>


<p>これらのフィルタはプレイバックのためのファイルに結合することができます。このことは<code>state.log</code>ファイルの大きさに依存することもあります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gz log -e -f ~/.gazebo/log/*/gzserver/state.log -z <span class="m">30</span> --filter *.pose/*.pose &gt; /tmp/filtered_state.log
</span></code></pre></td></tr></table></div></figure>


<p>このログファイルは、以下のようにしてGazeboでリプレイすることができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo -p /tmp/filtered_state.log
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.3-5:環境をつくろう ! (建築エディタ 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/06/gazebo-building-editor/"/>
    <updated>2015-02-06T02:14:35+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/06/gazebo-building-editor</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/06/2015 (Tue)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第三弾「Build a World」。
このチュートリアルでは、シミュレーション中の環境をどのように構築するかについて説明します。<br/>
今回はその「Building Edito」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>BEGINNER</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=build_world">GAZEBO Tutorial-Build a World</a></p>

<h2>はじめに</h2>

<p>このチュートリアルでは、建築エディタを使って建築物を作る過程を説明します。</p>

<h3>建築エディタを開く。</h3>

<ol>
<li><p>Gazeboがインストールされていることを確認してください。インストールしていない場合には、<a href="http://cir-kit.github.io/blog/2015/01/31/gazebo-install/">Gazeboのインストール</a>をご覧ください。</p></li>
<li><p>Gazeboを立ち上げてください。</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><strong>Edit</strong>メニューより、<strong>Building Editor</strong>を選ぶか、<strong>Ctrl+B</strong>を押して、エディタを立ち上げてください。すると、以下のような画面が立ち上がるはずです。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/empty_editor.png" alt="empty_editor" /></li>
</ol>


<h3>GUIについて</h3>

<p>エディタは、３つのエリアからできています。</p>

<ol>
<li><p>Palette : 建築物の素材や特徴を選べます。</p></li>
<li><p>2DView : トレースするフロアイメージをインポートできます。また、それに沿って、壁、窓、ドア、階段を追加することができます。</p></li>
<li><p>3DView : 建築物のプレビューを確認できます。色やテクスチャを他の建築物の部品に適用することもできます。</p></li>
</ol>


<!-- ![editor_zones](/images/2015-02-06-gazebo-building-editor/editor_zones.png) -->


<h2>フロアをインポートする</h2>

<p>スクラッチでシーンを作るか、すでにあるイメージをトレーするイメージとしてとして使います。このイメージは、例えば、2Dのレーザースキャンイメージ出会ったりもします。<br/>
<a href="https://bitbucket.org/osrf/gazebo_tutorials/raw/default/building_editor/files/floorplan.png">ここ</a>をクリックしてフロアイメージの例をダウンロードしてください。手順は以下のとおりです。</p>

<ol>
<li><p>以下のように、先ほどの建築エディタを開いたまま、エディタウィンドウの左側にある、<strong>Import</strong>ボタンを押してください。すると、インポートするイメージのダイアログが出てきます。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/building_editor-import.png" alt="building_editor-import" /></p></li>
<li><p>先ほど手に入れたイメージを選んでください。選んだら、<strong>Next</strong>を押してください。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/building_editor-next.png" alt="building_editor-next" /></p></li>
<li><p>トレースする壁が、正しい大きさで出力できているか確かめるために、メートルピクセル比[px/m]を設定しなければなりません。比を知っているなら、ダイアログに直接入力して、クリックすればOKです。今回の例では、比がわかっていないとします。しかし、トレースイメージ中の実世界での二点間の距離がわかっているとすると、（例えば。一番長い壁が7.5 [m]であるとか）比を計算することで、使用できるようになります。:</p></li>
<li><p>壁の一端をクリックしてください。すると、以下のように、オリジナルのラインが現れます。</p></li>
<li><p>壁の一端をクリックしてください。すると、ラインが定義されます。</p></li>
<li><p>個々で、ダイアログに距離を単位[m]で入力してください(今回は7.5 [m]です)。すると、ピクセルメートル比は先ほど指定したラインに沿って自動で計算されます。</p></li>
<li><p>完了したら、OKをクリックしてください。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/import_step_2.png" alt="import_step_2" /></p></li>
<li><p>うまく行けば、2DViewの部分に、イメージが表示されます。<br/>
<strong>コツ : </strong>レベルあ上がれば、それぞれのフロアを同じプロセスでインポートすることができます。</p></li>
</ol>


<h2>特徴を加える</h2>

<h3>壁を追加する</h3>

<p>以下の手順にしたがって、すべての壁をフロアイメージに沿ってトレースしてください。後でドアや窓を付け加えることを覚えておいてください。一旦は、それらを無視して壁を作ることができます。壁を完璧に作れなくても慌てないでください。後でまた編集することができます。</p>

<ol>
<li><p>Palleteの、壁の上でクリックしてください。</p></li>
<li><p>2DViewの上で、壁の端点からクリックをしてください。マウスを動かしたら、壁の長さが表示されます。</p></li>
<li><p>同じ壁のもう一方の端点でクリックし、微調整を行ってください。</p></li>
<li><p>新しい壁を作り始めることなく、ダブルクリックして終了します。<br/>
<strong>コツ : </strong>右クリックもしくはEscを押すと、現在の壁の編集をキャンセルできます。<br/>
<strong>コツ : </strong>デフォルトでは、壁は15°ごと、0.25[m]ごとに増減します。また、存在する壁の端点も同じです。Shiftを押しながら操作すると、これらの制限が解除できます。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/add_walls.png" alt="add_walls" /></p></li>
</ol>


<h3>窓とドアを追加する</h3>

<p><strong>Note : 正確には、窓や、ドアは壁にただ穴を開けるだけです。</strong><br/>
窓とドアをフロアイメージに沿って追加してみましょう。</p>

<ol>
<li><p>Paletteにある<strong>Window</strong>もしくは<strong>Door</strong>をクリックしましょう。</p></li>
<li><p>2DViewの上でマウスを動かすと、それらも一緒に動きます。また、それと一緒に、3DViewの上でも動きます。<br/>
<strong>コツ : </strong>窓やドアは自動で壁に沿って動きます。壁の端までの距離は動かすごとに、ディスプレイに表示されます。</p></li>
<li><p>気に入ったところでクリックしましょう。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/add_windows_doors.png" alt="add_windows_doors" />
<strong>コツ : </strong>最初に壁を作った後に、フロアプランにある窓やドアの位置を探すのは難しく感じるでしょう。これを簡単にするには、2DViewの上で、フロアプランをもしくは現在までの窓やドアの表示、非表示を選択することができます。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/view_floorplan.png" alt="view_floorplan" /></p></li>
</ol>


<h3>階段を追加する</h3>

<p>このフロアプランには階段はありませんが、階段を一つ追加したいと思います。</p>

<ol>
<li><p>Palletの<strong>Stairs</strong>をクリックしてください。</p></li>
<li><p>2DViewの上でマウスを動かすと、階段もそれと一緒に動きます。3DViewに写っているものも同様です。</p></li>
<li><p>気に入ったところでクリックしましょう。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/add_stairs.png" alt="add_stairs" /></p></li>
</ol>


<h2>階数を追加する</h2>

<p>一階については、だいぶ完成しました。階段の先もないことですし、階数を追加しましょう。<br/>
2DViewの上にある、<strong>+</strong>の上でクリックし、階数を足しましょう。あるいは、2DViewを右クリックし、<strong>Add a level</strong>を選びましょう。<br/>
新しい階数が追加できたら、フロアは自動で追加されます。すでに下の階に階段が設置されている場合は、建築物がセーブされるときに、フロアに自動で階段用の穴が飽きます。<br/>
<strong>Note : 現在は、すべてのフロアは矩形です。</strong><br/>
<strong>コツ : </strong>階数を追加する前に、現在の階数の壁が設置されていることを確認してください。<br/>
<strong>コツ : </strong>現在は、前の海の壁は、デフォルトの素材で、新しい階の壁としてコピーされます。窓やドアはコピーされません。いらない壁は、手動で削除できます。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/add_level.png" alt="add_level" /></p>

<h2>建築物を編集する</h2>

<p><strong>Note : 建築物を編集する際は気をつけてください。というのも、現在、エディタにはUndoオプションがありません。<br/>
</strong>コツ : **すべての長さはメートル単位系です。</p>

<h3>階を変更する</h3>

<p>階を追加したので、2DViewも新しい階に移動しましょう。2DViewの上にあるリストから選べば、一階にも戻れます。<br/>
<strong>コツ : </strong>現在2DViewで選択されている階数は3DViewに半島名で表示されています。また、すべての下の階は半透明です。上の階は隠れています。しかし、建築物の一部であるということを覚えておいてください。<br/>
階の形状を編集することもできます。</p>

<ul>
<li>階の形状オプションと一緒にインスペクターを開くために、2DViewをダブルクリックしてください。もしくは、右クリックし、<strong>Open level Inspector</strong>を選んでください。</li>
</ul>


<p>あなたが望まない階を追加したことでしょう。もしくは現在の階をめちゃくちゃにしいてしまい、初めからやり直したいでしょう。</p>

<ul>
<li>現在の階を削除したいなら、2DViewの上のボタンをオス化、右クリックし、<strong>Delete Level</strong>を選んでください。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/edit_level.png" alt="edit_level" /></li>
</ul>


<h3>壁を編集する</h3>

<p>最初の方に、たくさんの壁を制作しました。しかし、希望通りには作成できていないかもしれません。</p>

<ul>
<li>2DViewで壁をクリックしてください。</li>
<li>ドラッグによって壁を新しい位置に変更してください。</li>
<li><p>端点をドラッグし、リサイズもしくは回転を行ってください。<br/>
<strong>コツ ; </strong>デフォルトでは、壁は15°ごと、0.25[m]ごとに増減します。また、存在する壁の端点も同じです。Shiftを押しながら操作すると、これらの制限が解除できます。</p></li>
<li><p>階の形状オプションと一緒にインスペクターを開くために、2DViewをダブルクリックしてください。もしくは、右クリックし、<strong>Open level Inspector</strong>を選んでください。いくつかのフィールドを編集し、それらの変更を反映するために、<strong>Apply</strong>を押してください。</p></li>
<li><p>2DViewで壁の選択中に、右クリックを押して、<strong>Delete</strong>を選ぶか、Deleteを押すと、選択中の壁を削除できます。<br/>
<strong>コツ : </strong>壁を編集すると、付属の壁と統合されます。<br/>
<strong>コツ : </strong>壁を削除すると、付属の窓と壁も削除します。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/edit_walls.png" alt="edit_walls" /></p></li>
</ul>


<h3>窓とドアを編集する</h3>

<p>続いては、窓とドアについて編集しましょう。壁で行ったように、多少の違いはありますが、窓やドアを正確に編集することができます。</p>

<ul>
<li>2DViewで、窓やドアをクリックしてください。</li>
<li>新しいポジションまでドラッグして運んでください。窓やドアは自動で壁に沿って動きますし、壁から話してsってすることはできませんし、窓やドアは壁に穴を開けるだけであると言ったことを忘れないようにしてください。</li>
<li>回転ハンドルを使って回転させてください。現在は、できるだけ、壁に沿おうとしますし、回転原点を変更することはできません。</li>
<li><p>窓やドアの幅を端点をドラッグすることでリサイズしてください。</p></li>
<li><p>階の形状オプションと一緒にインスペクターを開くために、2DViewをダブルクリックしてください。もしくは、右クリックし、<strong>Window/Dooe</strong>を選んでください。</p></li>
<li><p>2DViewで壁の選択中に、右クリックを押して、<strong>Delete</strong>を選ぶか、Deleteを押すと、選択中の窓やドアを削除できます。<br/>
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/edit_windows_doors.png" alt="edit_windows_doors" /></p></li>
</ul>


<h3>階段を編集する</h3>

<p>最後に、最初の方に追加した階段を編集しましょう。フロアプランにはないので、好きなように編集しましょう。</p>

<ul>
<li>2DViewで、階段をクリックしてください。</li>
<li>新しいポジションまでドラッグして運んでください</li>
<li>回転ハンドルを使って90°回転させてください。現在は、できるだけ、壁に沿おうとしますし、回転原点を変更することはできません。</li>
<li><p>端点をドラッグすることでリサイズしてください。</p></li>
<li><p>階の形状オプションと一緒にインスペクターを開くために、2DViewをダブルクリックしてください。もしくは、右クリックし、<strong>Window/Dooe</strong>を選んでください。</p></li>
<li><p>2DViewで壁の選択中に、右クリックを押して、<strong>Delete</strong>を選ぶか、Deleteを押すと、選択中の階段を削除できます。<br/>
<strong>コツ : </strong>2DViewでは、階段の始まりも終わりも見ることができます。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/edit_stairs.png" alt="edit_stairs" /></p></li>
</ul>


<h2>色とテクスチャを追加する</h2>

<p>さて、すべての物が設置され、リサイズされました。今度は、壁や床、そして階段の色やテクスチャを決定していきます。窓やドアはただ壁に穴を開けているだけなので、物質要素がないということを覚えておいてください。<br/>
<strong>コツ : </strong>デフォルトは、色は白で、テクスチャはありません。<br/>
建築物に色やテクスチャを追加する方法は２つあります。</p>

<h3>インスペクタから変更する</h3>

<p>壁、床、階段に色やテクスチャを追加するには、壁インスペクタ、床インスペクタ、階段インスペクタのそれぞれから追加することができます。まずは、インスペクタを開、物質を選んだら、<strong>Apply</strong>を押してください。インスペクタを表示するには、それぞれの物体の上でダブルクリックするか、右クリックから選択してください。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/color_texture_inspector.png" alt="color_texture_inspector" /></p>

<h3>パレットから変更する</h3>

<p>3DViewで物体をクリックすることで、建築物のアイテムの色やテクスチャをパレットから選ぶことができます。</p>

<ol>
<li><p>Paletteから色とテクスチャを選んでください。</p></li>
<li><p>3DViewでマウスを動かすと、選択された物体のpレビューが表示され、選択された要素がハイライトされます。</p></li>
<li>選択した用をに適用する、もしくは、3DViewを右クリックする、もしくは、マテリアルモードを終了するために、物体の外をクリックすると、操作が完了します。</li>
</ol>


<p><img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/color_texture_palette.png" alt="color_texture_palette" />
<strong>Gazebo5.1の新機能 : </strong>カスタムカラーを選ぶには、paletteの<strong>More</strong>をクリックします。すると、カスタムカラーを決定するためのダイアログが開きます。<br/>
私の環境は、Ver.5.0.1なので、確認できません。<br/>
下図は、公式チュートリアル掲載のものです。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/custom_color.png" alt="custom_color" />
<strong>コツ : </strong>それぞれの物体には、一つの色とテクスチャしか適用できません。同じ物体はすべて同じ見た目になります。<br/>
<strong>Note : 現在は、カスタムテクスチャをこのエディタで使用することはできません。</strong></p>

<h2>建築物を保存する</h2>

<p>セーブをすると、<a href="http://gazebosim.org/tutorials?tut=model_structure&amp;cat=build_robot">SDFとConfigファイル</a>を直接生成します。<br/>
セーブする前に、Paletteで建築物の名前を決定してください。<br/>
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/edit_name.png" alt="edit_name" /><br/>
トップメニューでファイルを選び、<strong>Save As</strong>もしくは、Ctrl+Sでセーブしてください。モデルを保存する場所を聞くダイアログが出現します。<br/>
<strong>コツ : </strong>アドバンスオプションでは、メタデータを設定することもできます。<br/>
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/save_dialog.png" alt="save_dialog" /></p>

<h2>終了する</h2>

<p><strong>Note : 一度、建築エディタを終了すると、建築物を編集することはできません。</strong><br/>
建築物を製作し、保存したら、ファイルのところへ行き、建築エディタを終了させてください。<br/>
あなたの建築物がメインウィンドウに表示されます。将来的には、建築物を<code>Insert</code>タブで見つけることができます。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/saved_building.png" alt="saved_building" />
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/final_model_angles.png" alt="final_model_angles" /></p>

<h2>最後に</h2>

<p>私も、学校の施設を作って遊んでみました。元にした見取り図は、案内板にあったので、スマホで写真をとって作りました。シミュレーションなら、PR2も遊びに来てくれますw<br/>
奥に見えるのはWillowGarageのモデルです。
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/DSC_0332.JPG" alt="control-1st-2D" />
<img src="http://cir-kit.github.io/images/2015-02-06-gazebo-building-editor/capture.jpg" alt="capture" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.3-4:環境をつくろう ! (Modelの集合化 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/05/gazebo-population-of-models/"/>
    <updated>2015-02-05T23:10:04+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/05/gazebo-population-of-models</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/03/2015 (Tue)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第三弾「Build a World」。
このチュートリアルでは、シミュレーション中の環境をどのように構築するかについて説明します。<br/>
今回はその「Population of models」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>INTERMEDIATE</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=build_world">GAZEBO Tutorial-Build a World</a></p>

<h2>はじめに</h2>

<p>このチュートリアルでは、SDFの<code>&lt;population&gt;</code>タグを使ってどのようにしてモデルを集合化するかを説明します。集合は個々のモデルによって構成されています。<br/>
モデルの集合を追加することは以下のようなパラメータをいちいち定義する問題であるということです。</p>

<ul>
<li><p>モデル : 机や缶など</p></li>
<li><p>いくつかの集合の一部となる物体</p></li>
<li><p>集合を入れておくコンテナの形状と寸法 : 箱、円柱などです。これらのパラメータを知るには、SDFのAPIをご覧ください。</p></li>
<li><p>集合のポジションと原点</p></li>
<li><p>集合に含まれる物体の配置 : ランダム、グリッド</p></li>
</ul>


<p>詳しい説明は、<code>&lt;population&gt;</code>タグとそのパラメータについての<a href="http://gazebosim.org/sdf.html">SDF API</a>をチェックしてください。</p>

<h2>物体の集合を作る</h2>

<ol>
<li>チュートリアル用のディレクトリを作りましょう。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/tutorial_model_population
</span><span class='line'><span class="nb">cd</span> ~/tutorial_model_population
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>作ったディレクトリに、以下のような内容で、<code>can_population.world</code>を作成してください。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.5&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;world</span> <span class="na">name=</span><span class="s">&quot;default&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="c">&lt;!-- A global light source --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;include&gt;</span>
</span><span class='line'>          <span class="nt">&lt;uri&gt;</span>model://sun<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>        <span class="c">&lt;!-- A ground plane --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;include&gt;</span>
</span><span class='line'>          <span class="nt">&lt;uri&gt;</span>model://ground_plane<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>        <span class="c">&lt;!-- Testing the automatic population of objects --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;population</span> <span class="na">name=</span><span class="s">&quot;can_population1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;can1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;include&gt;</span>
</span><span class='line'>              <span class="nt">&lt;static&gt;</span>true<span class="nt">&lt;/static&gt;</span>
</span><span class='line'>              <span class="nt">&lt;uri&gt;</span>model://coke_can<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/model&gt;</span>
</span><span class='line'>          <span class="nt">&lt;pose&gt;</span>0 0 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>          <span class="nt">&lt;box&gt;</span>
</span><span class='line'>            <span class="nt">&lt;size&gt;</span>2 2 0.01<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>          <span class="nt">&lt;model_count&gt;</span>10<span class="nt">&lt;/model_count&gt;</span>
</span><span class='line'>          <span class="nt">&lt;distribution&gt;</span>
</span><span class='line'>            <span class="nt">&lt;type&gt;</span>random<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/distribution&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/population&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/world&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、<a href="https://bitbucket.org/osrf/gazebo_models/src/63e268d393f03ae6ec5b6930b439c4b7873dacd8/coke_can/?at=default">coke_cam model</a>より、<strong>coke_can</strong>のモデルを取得し、<code>~/.gazebo/models/</code>に置いておきましょう。<br/>
その後、Gazeboを立ち上げましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo can_population.world
</span></code></pre></td></tr></table></div></figure>


<p>すると、ソーダの缶の集合がバラバラに置いてあるのが確認できるでしょう。缶は2 x 2 x 0.01 [m]の大きさの箱に収まるようにしてあります。<br/>
より深く理解するために、先ほどの<code>can_population.world</code>に他の要素を追加してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;population</span> <span class="na">name=</span><span class="s">&quot;can_population1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;can1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;include&gt;</span>
</span><span class='line'>          <span class="nt">&lt;static&gt;</span>true<span class="nt">&lt;/static&gt;</span>
</span><span class='line'>          <span class="nt">&lt;uri&gt;</span>model://coke_can<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/model&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここまでで、<code>&lt;population&gt;</code>タグを使い、どのようにして集合の要素を決定するかがわかりました。すべての集合は、同一でない、個々の名前を持つ必要があり、<code>name</code>の部分で定義されています。<code>population</code>タグの中では、<code>&lt;model&gt;</code>タグを使ってモデルを選択できます。集合のそれぞれの要素は、重複しない名前でシミュレーションに挿入されます。また、その名前というのは、サフィックス<code>_clone_i</code>(<code>i</code>は集合の要素の個数で決定されます)によって名付けられます。Gazeboには以下のようなモデルのリストと共に、物体が表示されます。
<img src="http://cir-kit.github.io/images/2015-02-05-gazebo-population-of-models/model_list.png" alt="model_list" />
集合の最も一般的なタイプは、木や岩、建物などの動かない物体で構成されています。<code>&lt;population&gt;</code>タグはそのような静的なモデルで使用することをおすすめます。また、より詳しい定義が必要で、数が少ない、ロボットの様な動的物体には使用しないことをおすすめします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;pose&gt;</span>0 0 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>  <span class="nt">&lt;box&gt;</span>
</span><span class='line'>    <span class="nt">&lt;size&gt;</span>2 2 0.01<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/box&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のコードは物体をどこに設置するのかについて定義しています。今回は、すべての物体は、2 2 0.01の3Dの箱の中にスポーンします。また、原点(0, 0, 0)を(0, 0, 0)にセンタリングしてあります。続いて、<code>&lt;box&gt;</code>について説明します。<code>&lt;cylinder&gt;</code>の部分では、半径、長さを定義することができます。<code>&lt;cylinder&gt;</code>パラメータについて詳しく知りたい場合は、<a href="http://gazebosim.org/sdf.html">SDF Specification</a>をチェックしてみてください。<code>&lt;pose&gt;</code>要素では、集合の場所のフレームを定義しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;model_count&gt;</span>10<span class="nt">&lt;/model_count&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記部分では、集合に、何個の物体を定義するかを決定します。正の数字であれば何でも良いですが、数を大きくすると、パフォーマンスに大きな影響を及ぼすといういうことを念頭に置いておいてください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;distribution&gt;</span>
</span><span class='line'>    <span class="nt">&lt;type&gt;</span>random<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/distribution&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記に示す<code>&lt;distribution&gt;</code>要素では、物体をどのように配置するかを定義します。</p>

<h2>Distributionの種類</h2>

<ul>
<li><p>random : モデルをランダムに配置します。物体同士がぶつかる可能性があることを覚えておいてください。</p></li>
<li><p>uniform : 偽似2Dグリッドパターンに沿ってモデルを配置します。<code>K-Means</code>を使うことにより、解決に近づき、範囲内に定義された物体の数を定義できます。</p></li>
<li><p>grid : モデルを2Dのグリッドパターン上に配置します。この配置は行、列, 物体間距離を定義する必要があります。<code>&lt;model_count&gt;</code>要素は、この配置では無視されるということを覚えておいてください。シミュレーションに挿入される物体は行と列の数を掛けあわせた数と一致します。</p></li>
<li><p>linear-x : X軸に沿ってモデルが並びます。</p></li>
<li><p>linear-y : Y軸に沿ってモデルが並びます。</p></li>
<li><p>linear-z : Z軸に沿ってモデルが並びます。</p></li>
</ul>


<p>もっとたくさんの例を確認したいならば、<a href="http://bitbucket.org/osrf/gazebo/raw/default/worlds/population.world">population.world</a>ファイルをGazeboと共に立ち上げてください。<br/>
もちろん、その場合には、以下のように入力しましょう。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  gazebo worlds/population.world
</span></code></pre></td></tr></table></div></figure>


<p>以下のキャプチャは、<code>population.world</code>を実行した様子です。
<img src="http://cir-kit.github.io/images/2015-02-05-gazebo-population-of-models/gazebo_population.png" alt="gazebo_population" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.3-3:環境をつくろう ! (Digital Elevation Models 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/03/gazebo-digital-elevation-models/"/>
    <updated>2015-02-03T19:58:17+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/03/gazebo-digital-elevation-models</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/03/2015 (Tue)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第三弾「Build a World」。
このチュートリアルでは、シミュレーション中の環境をどのように構築するかについて説明します。<br/>
今回はその「Digital Elevation Models」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>ADVANCED</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=build_world">GAZEBO Tutorial-Build a World</a></p>

<h2>はじめに</h2>

<p><strong>Digital Elevation Model (DEM)</strong>は3Dの植物や建物のような物体を含まないような地形です。DEMはLIDARやradar、カメラなどによるセンサフュージョンによって生成されます。グラウンドポジションの地形の標高は、定期的に水平間隔でサンプリングされています。<a href="http://en.wikipedia.org/wiki/Digital_elevation_model">Wikipedia</a>でDEMのより詳しい情報があります。<br/>
DEMという言葉は一般的な名称であり、至って普通のフォーマットです。実際、DEMは代表的なグリッド立体図（水平捜線）や、ベクトルベースの基板地図変換である<strong>vector-based triangular irregular network (TIN)</strong>なのです。現在Gazeboは<a href="http://www.gdal.org/">GDAL</a>ライブラリでサポートされているraster(水平捜線)データのみをサポートしています。<br/>
GazeboをDEMをサポートする主な動機付けは、リアルな地形をシミュレートできるようにしたいというものです。ロボットを現実の世界のと同じ地形でシミュレーションし、その動向をテストし、救助用または農業用への応用を図ることは興味深いものとなるでしょう。</p>

<h2>GazeboにDEMサポートを適用する</h2>

<p>DEMファイルをサポートするには、GDALライブラリをインストールする必要があります。</p>

<h5>Ubuntu Trusty/Utopic の場合:</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  sudo apt-get install gdal-bin libgdal-dev libgdal1h python-gdal
</span></code></pre></td></tr></table></div></figure>


<h5>Ubuntu Precise の場合:</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  sudo apt-get install gdal-bin libgdal1-1.7.0 libgdal1-dev python-gdal
</span></code></pre></td></tr></table></div></figure>


<h2>DEMファイルとSDFフォーマットでの定義</h2>

<p>立体データを提供する団体はいくつかあります。例えば、80年代の<a href="http://extract.cr.usgs.gov/public/NED/mtsthelens_before.zip">噴火前</a>か<a href="http://extract.cr.usgs.gov/public/NED/mtsthelens_after.zip">噴火後</a>のセント・ヘレンズ山のDEMフォーマットファイルをダウンロードしましょう。ダウンロードしたら、Unzipで解凍し、<code>mtsthelens.dem</code>という名前をつけましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  <span class="nb">cd</span> ~/Downloads
</span><span class='line'>  wget http://extract.cr.usgs.gov/public/NED/mtsthelens_before.zip
</span><span class='line'>  unzip ~/Downloads/mtsthelens_before.zip -d /tmp
</span><span class='line'>  mv /tmp/30.1.1.1282760.dem /tmp/mtsthelens.dem
</span></code></pre></td></tr></table></div></figure>


<p>通常、DEMファイルにはたくさんの取り決めがあるので、Gazeboでは扱えません。なので、DEMの取り決めに合わせる良いアイデアがあります。i日のコマンドで地形を129x129に縮小し、Gazeboの<code>media/dem/</code>ディレクトリにそれをコピーします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  mkdir -p /tmp/media/dem/
</span><span class='line'>  gdalwarp -ts <span class="m">129</span> <span class="m">129</span> /tmp/mtsthelens.dem /tmp/media/dem/mtsthelens_129.dem
</span></code></pre></td></tr></table></div></figure>


<p>GazeboでDEMファイルを読み込むのは高低地図を読み込む方法と同じです。Gazeboは読み込みファイルがプレーンファイルかDEMファイルであった場合、自動でファイルを検出します。<code>volcano.world</code>ファイルを作成し、以下の内容をコピペしてください。できたら<code>/tmp</code>のように、どこにでも好きなところに保存してください。。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;world</span> <span class="na">name=</span><span class="s">&quot;default&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- A global light source --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://sun<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;heightmap&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;static&gt;</span>true<span class="nt">&lt;/static&gt;</span>
</span><span class='line'>      <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;link&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>            <span class="nt">&lt;heightmap&gt;</span>
</span><span class='line'>              <span class="nt">&lt;uri&gt;</span>file://media/dem/mtsthelens_129.dem<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>              <span class="nt">&lt;size&gt;</span>150 150 50<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>              <span class="nt">&lt;pos&gt;</span>0 0 0<span class="nt">&lt;/pos&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/heightmap&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>        <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual_abcedf&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>            <span class="nt">&lt;heightmap&gt;</span>
</span><span class='line'>              <span class="nt">&lt;texture&gt;</span>
</span><span class='line'>                <span class="nt">&lt;diffuse&gt;</span>file://media/materials/textures/dirt_diffusespecular.png<span class="nt">&lt;/diffuse&gt;</span>
</span><span class='line'>                <span class="nt">&lt;normal&gt;</span>file://media/materials/textures/flat_normal.png<span class="nt">&lt;/normal&gt;</span>
</span><span class='line'>                <span class="nt">&lt;size&gt;</span>1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/texture&gt;</span>
</span><span class='line'>              <span class="nt">&lt;texture&gt;</span>
</span><span class='line'>                <span class="nt">&lt;diffuse&gt;</span>file://media/materials/textures/grass_diffusespecular.png<span class="nt">&lt;/diffuse&gt;</span>
</span><span class='line'>                <span class="nt">&lt;normal&gt;</span>file://media/materials/textures/flat_normal.png<span class="nt">&lt;/normal&gt;</span>
</span><span class='line'>                <span class="nt">&lt;size&gt;</span>1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/texture&gt;</span>
</span><span class='line'>              <span class="nt">&lt;texture&gt;</span>
</span><span class='line'>                <span class="nt">&lt;diffuse&gt;</span>file://media/materials/textures/fungus_diffusespecular.png<span class="nt">&lt;/diffuse&gt;</span>
</span><span class='line'>                <span class="nt">&lt;normal&gt;</span>file://media/materials/textures/flat_normal.png<span class="nt">&lt;/normal&gt;</span>
</span><span class='line'>                <span class="nt">&lt;size&gt;</span>1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/texture&gt;</span>
</span><span class='line'>              <span class="nt">&lt;blend&gt;</span>
</span><span class='line'>                <span class="nt">&lt;min_height&gt;</span>2<span class="nt">&lt;/min_height&gt;</span>
</span><span class='line'>                <span class="nt">&lt;fade_dist&gt;</span>5<span class="nt">&lt;/fade_dist&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/blend&gt;</span>
</span><span class='line'>              <span class="nt">&lt;blend&gt;</span>
</span><span class='line'>                <span class="nt">&lt;min_height&gt;</span>4<span class="nt">&lt;/min_height&gt;</span>
</span><span class='line'>                <span class="nt">&lt;fade_dist&gt;</span>5<span class="nt">&lt;/fade_dist&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/blend&gt;</span>
</span><span class='line'>              <span class="nt">&lt;uri&gt;</span>file://media/dem/mtsthelens_129.dem<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>              <span class="nt">&lt;size&gt;</span>150 150 50<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>              <span class="nt">&lt;pos&gt;</span>0 0 0<span class="nt">&lt;/pos&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/heightmap&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/model&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/world&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>コードの上部にある<code>&lt;heightmap&gt;&lt;size&gt;</code>要素は、(<code>&lt;size&gt;</code>要素がないときは)Gazeboが原寸でDEMファイルを読み込むかどうかを決定し、(<code>&lt;size&gt;</code>要素があるときは)リサイズします。今回は、DEMファイルをリサイズします。<code>&lt;size&gt;</code>要素はGazeboにシミュレーションで使用し、リサイズする大きさをメートル単位で定義します。もし、正しいアスペクト比を維持したいなら横幅、高さ、海抜（<code>&lt;size&gt;</code>の三番目です）を詳細に計算して定義してください。今回の例では、DEMファイルは150 x 150 [m]で最も高いところで、海抜50 [m] となるようにリサイズしています。<br/>
GazeboをDEMファイルを含む<code>world</code>と共に立ち上げ、以下のような火山の立体図が表示されることを確認してください。以下のコマンドの例では、ファイルを<code>/tmp</code>ディレクトリに置いています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>　# インストールパスにあるgazeboのsetup.shにsourceコマンドを実行することを確認してください。
</span><span class='line'>　source /usr/share/gazebo/setup.sh
</span><span class='line'>　GAZEBO_RESOURCE_PATH<span class="o">=</span><span class="s2">&quot;$GAZEBO_RESOURCE_PATH:/tmp&quot;</span> gazebo /tmp/volcano.world
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/gazebo_sthelens.png" alt="gazebo_sthelens" /></p>

<h2>興味のある地域のDEMファイルを手に入れるにはどうしたらよいですか?</h2>

<h3>GLCF(Global Land Cover Facillity)について</h3>

<p>続いて、興味のある特定の地域のDEMファイルを手に入れる方法を説明します。<br/>
<a href="http://glcf.umd.edu/">Global Land Cover Facility</a>では地球の高解像度なデジタル地形データを提供し、維持しています。<a href="http://glcfapp.glcf.umd.edu:8080/esdi/index.jsp">Search and Preview tool</a>へ行ってみましょう。すると、イメージしたシミュレータを見つけることができるでしょう。すべての地形パッチはあなたがこのツールを使う前から知っているであろう個々の<a href="http://www.shinko-keirin.co.jp/keirinkan/tea/sho/jissen/rika/201303_4/index.html">pathとrow</a>を持っています。私達は、QGISを使い興味のあるpath/rowを発見するのです。以下のキャプチャはその検索画面です。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/glcf_search_tool.png" alt="glcf_search_tool" /></p>

<h3>QIGSについて</h3>

<p><a href="http://www.qgis.org/">QIGS</a>とはクロスプラットフォームのオープンソース地理情報システムプログラムです。以下のように、このプログラムでは閲覧、編集、調査で使用することができます。<a href="http://www.qgis.org/en/site/forusers/download.html">QGISのサイトの指示</a>にしたがってQGISをダウンロードしてください。</p>

<!-- ![qgis](/images/2015-02-04-gazebo-digital-elevation-model/qgis.png) -->


<h5>QIGSのダウンロード</h5>

<p><a href="http://www.qgis.org/en/site/forusers/download.html">QGISのダウンロード</a>を参考にしてQGISをダウンロードします。<br/>
以下のように、aptを使ってQGISをインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  sudo apt-get update
</span><span class='line'>  sudo apt-get install qgis python-qgis
</span></code></pre></td></tr></table></div></figure>


<h5>QGISの使い方</h5>

<ol>
<li><p>QGISを開いたら、以下のように、画面左にある<strong>WMS/WMTSレイヤの追加</strong>というアイコンをクリックしましょう。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-add-wms-wmts.png" alt="qgis-add-wms-wmts" /></p></li>
<li><p>すると以下のようなウィンドウが出るので、以下のように、バーをクリックし、<strong>Lizardtch server</strong>を選択し、<strong>接続</strong>ボタンを押してください。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-lizardtech-server.png" alt="qgis-lizardtech-server" /></p></li>
<li><p>すると、以下の一枚目のように、レイヤを選択できるようになるので、タイトルが<strong>MODIS</strong>であるレイヤを選んで、一番下の<strong>追加</strong>を押してください。終わったら、このウィンドウィンドウを閉じてください。<br/>
うまく行くと、二枚目の写真のように、世界地図がレイヤに表示されるはずです。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-add-modis.png" alt="qgis-add-modis" />
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-modis-layer.png" alt="qgis-modis-layer" /></p></li>
<li><p>続いてのステップは他のレイヤーを利用可能なパッチと共に追加します。<a href="http://landsat.usgs.gov/documents/wrs2_descending.zip">このshapeファイル</a>をダウンロードし、どこでも良いのでフォルダに解凍してください。私は、<code>~/Downloads/</code>に保存し、そこで展開しました。</p></li>
<li><p>QGISに戻り、以下の一枚目のように、<strong>ベクタレイヤの追加</strong>というアイコンを押してください。すると、<strong>開く前に、現在のプロジェクトを保存しますか？</strong>と聞かれるポップアプが表示されるので、<strong>保存する</strong>を選んでください。その後、先ほど解凍したフォルダの中の<code>wrs2descending.shp</code>ファイルを選択してください。うまく開けると、2枚目の様なレイヤが表示されるはずです。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-add-vector-layer.png" alt="qgis-add-vector-layer" />
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-wrs2-descending-layer.png" alt="qgis-wrs2-descending-layer" /></p></li>
</ol>


<p>ここまでで、メインウィンドウに２つのレイヤが開いていることを確認できるはずです。２つのレイヤーを同時に確認できるようにするため、<code>wrs2desceding</code>レイヤの透明度を変更しましょう。<br/>
ウィンドウ左側のレイヤ一覧より、<code>wrsdescending</code>レイヤをダブルクリックすると、以下の一枚目のようなウィンドウが出るので、透明度を85%程度に修正しましょう。成功すれば、二枚目のようなレイヤになっているはずです。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-wrs2-descending-%20transparency.png" alt="qgis-wrs2-descending- transparency" />
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-modis-wrs2-descending.png" alt="qgis-modis-wrs2-descending" /></p>

<h3>QGISとGLCFを使って地形データを取得するまでの手順</h3>

<h5>QGISの操作</h5>

<ol>
<li><p>脇ほどまでのレイヤを使って、スクロールと左ボタンを使用し、興味のある地域まで移動してください。<br/>
今回は、富士山まで移動してみました。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-mtfuji.png" alt="qgis-mtfuji" /></p></li>
<li><p>以下のように、上部のバーにある、<strong>地物情報表示</strong>というアイコンをクリックしてください。<br/>
その状態で、興味のある地域をクリックすると、以下のように、そのエリア一体の地形パッチがハイライトされます。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-identify-features.png" alt="qgis-identify-features" /></p></li>
<li><p>以下のキャプチャの例では、富士山近辺の地域のDEMのためのpathとrowを確認することができます。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis-identify-features-detail.png" alt="qgis-identify-features-detail" />
ちなみに、公式チュートリアルでは、以下のキャプチャのように、スペイン、カナリア諸島の、<a href="http://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%B9%E3%83%BB%E3%83%91%E3%83%AB%E3%83%9E%E3%82%B9%E3%83%BB%E3%83%87%E3%83%BB%E3%82%B0%E3%83%A9%E3%83%B3%E3%83%BB%E3%82%AB%E3%83%8A%E3%83%AA%E3%82%A2">ラスパルマス</a>のDEMのpathとrowを確認しています。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/qgis_las_palmas.png" alt="qgis_las_palmas" /></p></li>
</ol>


<h5>GLCFの操作</h5>

<ol>
<li><p><a href="http://glcfapp.glcf.umd.edu:8080/esdi/index.jsp">GLCF検索ツール</a>に戻り、調べたpath/rowの値を<strong>Start Path</strong>と<strong>Start Row</strong>とラベリングされているカラムに入力しましょう。</p></li>
<li><p>入力したら、<strong>Submit Quenry</strong>をクリックしてください。</p></li>
<li><p><strong>Preview and Download</strong>を押すと結果を表示できます。以下の結果は、富士山近傍のもので、path = 108、row = 35とした時の結果です。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/glcf-mtfuji.png" alt="glcf-mtfuji" /></p></li>
<li><p>地形ファイルを選び、<strong>Download</strong>を押してください。<br/>
今回は、計測年度が一番新しい、2011年のもの、ID:294-863を選びました。（上図参照）</p></li>
<li><p>最後に、拡張子が<code>.TIF.gz</code>のファイルを選び、好きなディレクトリに保存し、展開してください。<br/>
尚、<code>.gz</code>が付いているデータは複数ありますが、<code>README.GTF</code>によると、<code>*_B62.TIF.gz</code>となっているものが程よい解像度で、良いみたいです。また、<code>README.GTF</code>によると、<code>*.TIF.*</code>は<code>GeoTiff</code>フォーマットになっているそうなので、これを選びましょう。尚、<code>*</code>はワイルドカードです。<br/>
<a href="http://glcf.umd.edu/">GLCF(Global Land Cover Facility)</a>ファイルは、DEMが利用できるフォーマットとして、最も標準的なな<a href="http://ja.wikipedia.org/wiki/GeoTIFF">GeoTiffフォーマット</a>になっています。</p></li>
</ol>


<h2>GazeboでDEMデータを使用するための準備</h2>

<p>DEMデータは通常、高精細に作られています。Gazeboで使用する前に、<code>gdalwarp</code>を使って地形の解像度を扱いやすいサイズにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  gdalwarp -ts &lt;width&gt; &lt;height&gt; &lt;srcDEM&gt; &lt;targetDEM&gt;
</span></code></pre></td></tr></table></div></figure>


<p>DEMデータは、しばしば、<code>holes</code>や<code>void</code>エリアを含んでいます。そういったエリアはDEMが生成された時に作成できなかったデータがあるエリアと一致します。<code>hole</code>というデータの場合、<code>hole</code>には、DEMで使用された、データタイプの最大値もしくは最小値が割り当てられています。<br/>
上記のような<code>hols</code>が埋められたDEMのデータセットである、<code>finished</code>バージョンをダウンロードするよう、常に心がけてください。もし、あなたのDEMの地形データが<code>hols</code>(<code>NODATA</code>値としても知られている)を含んでいる場合、<code>gdal_fillnodata.py</code>のような、<code>gdal</code>のツールを使って手動で修復してみてください。</p>

<h2>Gazeboで様々なDEMを使う</h2>

<p>Gazeboは、直接様々なDEMをサポートしていないにも関わらず、GDALにはDEMを一つにするマージのための有益なツールセットがあります。DEMのセットをダウンロードする最初のステップはマージすることです。パッチは他のパッチと重なることがあるということを覚えておいてください。GDALはそれらの重なりをシームレスにマージできるのです。今あなたがいるディレクトリにマージする準備ができた状態で<code>Geofiff</code>ファイルがあるとすると、次のコマンドで、それをマージできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  gdal_merge.py *.tif -o dem_merged.tif
</span></code></pre></td></tr></table></div></figure>


<p>すると、<code>dem_merged.tif</code>ファイルを<code>world</code>ファイルの中で使用できますし、Gazeboはすべてのパッチがマージされた状態で、地形を読み込むでしょう。以下のスクリーンショットは、公式サイトのもので、カナリア諸島一帯を囲む４つのパッチをマージした結果だそうです。
<img src="http://cir-kit.github.io/images/2015-02-04-gazebo-digital-elevation-model/gazebo_dem_merged.png" alt="gazebo_dem_merged" /></p>

<h2>最後に</h2>

<p>自分で取得した地図をとりあえず表示することは出来ましたが、縮尺とかがおかしいままなので、解決したら、また投稿します。とりあえず今は、先に進みたいです。(02/04/2015 21:51)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.3-2:環境をつくろう ! (環境を修正する 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/03/gazebo-modifying-a-world/"/>
    <updated>2015-02-03T18:59:45+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/03/gazebo-modifying-a-world</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/03/2015 (Tue)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第三弾「Build a World」。
このチュートリアルでは、シミュレーション中の環境をどのように構築するかについて説明します。<br/>
今回はその「Modifying a World」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>BEGINNER</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=build_world">GAZEBO Tutorial-Build a World</a></p>

<h2>はじめに</h2>

<p>このチュートリアルでは、どのようにして物理プロパティや場面プロパティを含むグローバルプロパティを修正するか説明します。<br/>
Gazeboを起動してください。:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  gazebo
</span></code></pre></td></tr></table></div></figure>


<h2>場面プロパティ</h2>

<p><strong>World</strong>タブの中で、<strong>scene</strong>を選んでください。すると、以下のような場面プロパティのリストが表示されたはずです。続いてプロパティの詳細を表示するために、三角形のボタンをクリックしてプロパティを展開してください。</p>

<!-- ![tutorialSceneTab](/images/2015-02-03-gazebo-modifying-a-world/tutorialSceneTab.png) -->


<!-- ![tutorialSceneTabExpanded](/images/2015-02-03-gazebo-modifying-a-world/tutorialSceneTabExpanded.png)   -->


<p>これらのプロパティでは照明についての詳細を変更することができます。<br/>
<strong>メモ : </strong>skyが選択されている場合、背景色は変更できません。</p>

<h2>物理プロパティ</h2>

<p><strong>World</strong>タブの中で、<strong>physics</strong>を選択してください。すると、以下のように物理プロパティのリストが表示されたはずです。</p>

<ul>
<li><p>チェックボックスはプラグインやセンサが起動している間、物理エンジンを起動するかどうかを選択できます。</p></li>
<li><p><strong>rial time update rate parameter</strong>は物理エンジンのアプデートの時間を[Hz]で指定します。もし、この値を0にしたら、可能な限り速い速度でアップデートを行います。<strong>rial time update rate</strong>と<strong>step size</strong>はリアルタイム要素を代表する要素であり、シミュレーション時間をリアルタイムにするかどうかを決定します。</p></li>
<li><p><strong>max step size</strong>は一秒間にどれだけの間物理シミュレータのアップデートステップを維持するかを定義します。</p></li>
</ul>


<p><strong>grabity</strong>ブロックでは:</p>

<ul>
<li>x,y,zのパラメータで全体の重力をベクトルで設定します。単位は[$m/s<sup>2</sup>$]です。</li>
</ul>


<p><strong>solver</strong>ブロックでは:</p>

<ul>
<li><p>慣性パラメータによりLCP solver（ODEやbulletで使用されています）で使用するための慣性データを設定します。</p></li>
<li><p>SORパラメータは<a href="http://en.wikipedia.org/wiki/Successive_over-relaxation">連続する加速緩和</a>を記述します。この、加速緩和とは慣性要素を収束させるために使用します。</p></li>
</ul>


<p><strong>constraints</strong>ブロックには制約を解除するパラメータがいくつか含まれています。</p>

<ul>
<li>CFMやERPパラメータは<a href="http://ode-wiki.org/wiki/index.php?title=Manual:_Concepts#Constraint_Force_Mixing_.28CFM.29">Constant Force Mixing</a>や<a href="http://ode-wiki.org/wiki/index.php?title=Manual:_Concepts#Joint_error_and_the_Error_Reduction_Parameter_.28ERP.29">Error Reduction</a>のパラメータにを記述し、ODEやbulletで使用されます。CFMやERｐパラメータは<a href="http://ode-wiki.org/wiki/index.php?title=Manual:_Concepts#How_To_Use_ERP_and_CFM">linear stiffness や damping coefficients</a>に関連付けることができます。<strong>max velocity</strong>や<strong>surface layer</strong>パラメータは<strong>split inpulse method</strong>の解決に使用されます。どのようなcontactにおいても、<strong>surface layer</strong>やバウンドしないような<strong>max velocity</strong>より遅い速度による深さより深い。(????)<strong>私もよくわからない</strong>ので、ちょっと勘弁してください。すみませんorz&hellip;<br/>
パラメータについての詳しい説明は、<a href="http://osrf-distributions.s3.amazonaws.com/sdformat/api/dev.html#physics12">sdf physics documentation</a>をご覧ください。</li>
</ul>


<!-- ![tutorialPhysicsTab](/images/2015-02-03-gazebo-modifying-a-world/tutorialPhysicsTab.png) -->


<h4>Next >> <a href="">GazeboでのDEMｓの使い方</a></h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.3-1:環境をつくろう ! (新規の環境を作る 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/03/gazebo-building-a-new-world/"/>
    <updated>2015-02-03T17:42:21+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/03/gazebo-building-a-new-world</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/03/2015 (Tue)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第三弾「Build a World」。
このチュートリアルでは、シミュレーション中の環境をどのように構築するかについて説明します。<br/>
今回はその「Building a New World」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>BEGINNER</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=build_world">GAZEBO Tutorial-Build a World</a></p>

<h2>はじめに</h2>

<p>このチュートリアルでは、動的もしくは静的な物体を生成する過程について説明します。</p>

<h2>用語説明</h2>

<ul>
<li><p><strong>World : </strong>ロボットや物体（例えばビルやテーブル、照明など）さらに、空や照明のパラメータ、物理的特性を記述するのに使用します。</p></li>
<li><p><strong>Static : </strong>staticマークがついた物体（SDFファイルで<code>&lt;static&gt;true&lt;/static&gt;</code>と記述されているもの）であり、衝突要素のみを持つ様な物体です。すべての動いていない物体は<code>static</code>と記述する必要があります。また、そのように記述することで、パフォーマンスが向上します。</p></li>
<li><p><strong>Dynamic : </strong>dynamicマークがついた物体（SDFファイルには<code>&lt;static&gt;</code>要素がないか、<code>false</code>が設定されています）で、衝突要素の他に慣性要素を含みます。</p></li>
</ul>


<h2>セットアップ</h2>

<ol>
<li><p>Gazeboがインストールされていることを確認してください。インストールしていない場合には、<a href="http://cir-kit.github.io/blog/2015/01/31/gazebo-install/">Gazeboのインストール</a>をご覧ください。</p></li>
<li><p>チュートリアル用の作業ディレクトリを作成しましょう。:</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/build_world_tutorial
</span><span class='line'><span class="nb">cd</span> ~/build_world_tutorial
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Gazeboを起動し、以下のように<code>gland plane</code>が起動していることを確かめましょう。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://cir-kit.github.io/images/2015-02-03-gazebo-building-a-new-world/empty_world.png" alt="empty_world" /></p>

<h2>物体を追加する</h2>

<p>Gazeboには、物体を追加する方法が２つあります。</p>

<ol>
<li><p>１つ目は、簡単な形状の設置です。これは、以下のようにレンダリングウィンドウの上部にあります。
<img src="http://cir-kit.github.io/images/2015-02-03-gazebo-building-a-new-world/empty_world_simple_shapes_highlighted.png" alt="empty_world_simple_shapes_highlighted" /></p></li>
<li><p>２つ目は、モデルデータベースにあります。以下のように画面左上部にある<strong>Insert</strong>タブをクリックすることで、追加する物体の一覧が表示でき、追加する物体を選択することができます。
<img src="http://cir-kit.github.io/images/2015-02-03-gazebo-building-a-new-world/empty_world_insert_highlighted.png" alt="empty_world_insert_highlighted" /></p></li>
</ol>


<h2>簡単な図形を追加する</h2>

<p>箱、球、円柱をアイコンをレンダリングウィンドウ上部のアイコンをクリックすることで追加できます。それぞれの形状の大きさは以下のようになっています。</p>

<ul>
<li><p>箱 : 1x1x1 [m]</p></li>
<li><p>球 : 直径 1 [m]</p></li>
<li><p>円柱 : 直径 1 [m]、高さ 1 [m]</p></li>
</ul>


<p>箱のアイコンを選択し、マウスをレンダリングウィンドウに動かしてください。すると、マウスと共に動く箱を確認できるはずです。気に入った場所に箱を設置するには、左クリックを押してください。<br/>
球と円柱でも同じことを繰り返してください。すると以下のような感じになるはずです。
<img src="http://cir-kit.github.io/images/2015-02-03-gazebo-building-a-new-world/simple_shapes.png" alt="simple_shapes" /></p>

<h2>モデルデータベースからモデルを追加する</h2>

<p>Gazeboのモデルデータベースはロボットや机、建物に至るまでのありとあらゆる種類の保管場所です。</p>

<ol>
<li><p>モデルデータベースに接続するために、画面左上端にある<strong>Insert</strong>タブを選択してください。<br/>
モデルのリストは現在の場所に従ったセクションに分けられています。それぞれのセクションはURIもしくはパスによって読み込まれています。リモートサーバーに置かれている物体を選択するとモデルを<code>~/.gazebo/models</code>にダウンロードします。</p></li>
<li><p><code>world</code>にいろいろなモデルを追加してみましょう。モデルをダウンロードするときは、容量の大きい物もありますので、注意してください。</p></li>
<li><p>以下のような感じでモデルを追加することができたと思います。モデルは、あなたが選んだものが表示差rているはずです。ですので、以下のキャプチャは、あくまでも一例です。:
<img src="http://cir-kit.github.io/images/2015-02-03-gazebo-building-a-new-world/added_models_to_empty_world.png" alt="added_models_to_empty_world" /></p></li>
</ol>


<h2>モデルのポジション</h2>

<p>それぞれのモデルのポジションは変換ツールもしくは回転ツールを使うことで変更できます。<br/>
以下のように、アイコンが用意されています。
<img src="http://cir-kit.github.io/images/2015-02-03-gazebo-building-a-new-world/empty_rts.png" alt="empty_rts" /></p>

<h3>変換</h3>

<p>変換ツールでは、物体をx,y,z軸それぞれに移動することができます。動かしたいモデルをクリックで選択しこのツールを使ってみましょう。３軸マーカーがモデル上に現れたと思います。このマーカーを使ってモデルをx,y,z軸方向に動かすのです。<br/>
モデルをクリックし、ドラッグするだけで、物体をx-y平面では移動させることができます。x,y,zのキーを押しながらドラッグすることで、どの軸に沿って動かすのかを決定することができます。<br/>
いろいろな方法で、モデルを動かしてみましょう。</p>

<h3>回転</h3>

<p>回転ツールではx,y,z軸周りにモデルを回転することができます。動かしたいモデルをクリックで選択しこのツールを使ってみましょう。３つの輪でできたマーカがモデル上に現れたと思います。このマーカーを使ってモデルをx,y,z軸周りに回転することができるのです。<br/>
いろいろな方向にモデルを回転させてみましょう。</p>

<h3>大きさ</h3>

<p>大きさツールではモデルの大きさをx,y,z軸に沿って変更することができます。現在は、このツールは簡単な形状（つまり、箱、球、円柱）にのみ適用できます。簡単なモデルを選択し、このツールを使ってみましょう。すると、三軸のマーカーが出現したはずです。これを使ってx,y,z軸方向に物体の大きさを変更することができます。<br/>
いろいろな大きさにしてみましょう。</p>

<h2>モデルを削除する</h2>

<p>モデルを選択し、Deleteキーを押せばモデルを削除できます。また、モデルの上で右クリックし、<strong>Delete</strong>を選択してもモデルを削除できます。<br/>
いくつかのモデルを削除してみましょう。</p>

<h2>Worldを保存する</h2>

<p>気に入った<code>world</code>データが出来上がったら、<strong>File</strong>メニューより保存することができます。<br/>
<strong>File</strong>メニューを選び<strong>Save as</strong>を選択しましょう。<br/>
ポップアップが現れ、新しいファイルネームを問われます。<code>my_world.sdf</code>などのフィル名を入力し、OKをクリックしましょう。</p>

<h2>Worldを読み込む</h2>

<p>コマンドラインで以下のように入力すれば、保存した<code>world</code>データを読み込むことができます。<br/>
以下の例は、<code>my_worlf.sdf</code>を読み込んでいます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo my_world.sdf
</span></code></pre></td></tr></table></div></figure>


<p>ファイル名は現在の作業ディレクトリ直下にしてください。そうしない場合には、絶対パスもしくは、作業ディレクトリからの相対パスを入力してください。</p>

<h3>Next >> <a href="http://cir-kit.github.io/blog/2015/02/03/gazebo-modifying-a-world/">環境を修正する</a></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.2-10:ロボットを作ってみよう !（動く箱 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/01/gazebo-animated-box/"/>
    <updated>2015-02-01T10:50:42+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/01/gazebo-animated-box</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/01/2015 (Sun)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第二弾「Build a Robot」。<br/>
このチュートリアルではロボットを作ったり、修正したりします。また、センサ、アクチュエータを搭載した車輪型ロボットを作り、モデルを描画するなどの実践例も行います。<br/>
今回はその「Animated Box」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>INTERMEDIATE</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=build_robot">GAZEBO Tutorial-Build a Robot</a></p>

<h2>はじめに</h2>

<p>このチュートリアルでは、10周期で地面の上をスライドするようなシンプルな箱と、その<code>world</code>を生成します。<br/>
また、Gazeboもしくは、自分独自の実行可能なシミュレーションを使用しての参照方法、アクセス方法、相互作用の様々な方法を紹介します。
シミュレーションで生成する箱は自身の姿勢を配信し、姿勢を受け取るとコールバックを呼び、箱のロケーションとタイムスタンプをプリントアウトします。</p>

<h2>セットアップ</h2>

<p>作業ディレクトリを作成しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/gazebo_animatebox_tutorial
</span><span class='line'><span class="nb">cd</span> ~/gazebo_animatebox_tutorial
</span></code></pre></td></tr></table></div></figure>


<h2>動く箱のコード</h2>

<p><a href="https://bitbucket.org/osrf/gazebo/src/gazebo_4.0/examples/stand_alone/animated_box/animated_box.cc">animate_box.cc</a>、<a href="https://bitbucket.org/osrf/gazebo/src/gazebo_4.0/examples/stand_alone/animated_box/independent_listener.cc">independent_listner.cc</a>、<a href="https://bitbucket.org/osrf/gazebo/src/gazebo_4.0/examples/stand_alone/animated_box/integrated_main.cc">integrated_main.cc</a>、<a href="https://bitbucket.org/osrf/gazebo/src/gazebo_4.0/examples/stand_alone/animated_box/CMakeLists.txt">CMakeLists.txt</a>、<a href="https://bitbucket.org/osrf/gazebo/src/gazebo_4.0/examples/stand_alone/animated_box/animated_box.world">animated_box.world</a>を現在のディレクトリにコピーしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://bitbucket.org/osrf/gazebo/raw/gazebo_4.0/examples/stand_alone/animated_box/animated_box.cc
</span><span class='line'>wget http://bitbucket.org/osrf/gazebo/raw/gazebo_4.0/examples/stand_alone/animated_box/independent_listener.cc
</span><span class='line'>wget http://bitbucket.org/osrf/gazebo/raw/gazebo_4.0/examples/stand_alone/animated_box/integrated_main.cc
</span><span class='line'>wget http://bitbucket.org/osrf/gazebo/raw/gazebo_4.0/examples/stand_alone/animated_box/CMakeLists.txt
</span><span class='line'>wget http://bitbucket.org/osrf/gazebo/raw/gazebo_4.0/examples/stand_alone/animated_box/animated_box.world
</span></code></pre></td></tr></table></div></figure>


<p>プラグインをビルドしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir build
</span><span class='line'><span class="nb">cd </span>build
</span><span class='line'>cmake ../
</span><span class='line'>make
</span></code></pre></td></tr></table></div></figure>


<p>ただし、Gazeboはプラグインを最後に読み込むことができるということを覚えておいてください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">GAZEBO_PLUGIN_PATH</span><span class="o">=</span><span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>:<span class="nv">$GAZEBO_PLUGIN_PATH</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Gazeboでシミュレーションする</h2>

<p>今回は、プラグインを使ったGazeboをどのようにして使うかを説明します。<br/>
以下のようにしてGazeboを起動しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/gazebo_animatebox_tutorial
</span><span class='line'>gazebo animated_box.world
</span></code></pre></td></tr></table></div></figure>


<p>他のターミナルで、<code>gz topc</code>コマンドを使用し、箱の姿勢を表示するユーザーインターフェースを起動しましょう。この時、<code>build</code>ディレクトリ内でコマンドを使用してください。でなければパスが通らず、箱が動きません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gz topic -v /gazebo/animated_box_world/pose/local/info
</span></code></pre></td></tr></table></div></figure>


<p>すると、箱の姿勢を表示するGUIが表示できたはずです。<br/>
以下の動画は、動く箱と、その状態を表示するGUIが動いている様子です。</p>

<div class="youtube-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/QMrT0iapF4g" frameborder="0" allowfullscreen></iframe>
</div>


<h2>独自の実行ファイルを使ってシミュレーションに接続する。</h2>

<p>Gazeboが起動していないことを確認してください。<br/>
これまでの説明通りにGazeboを起動してください。同時にGazeboに接続できる独立したリスナを起動してください。このリスナというのは、箱のロケーションとタイムスタンプを受け取り、それをプリントアウトするようなものです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/gazebo_animatebox_tutorial
</span><span class='line'>gazebo animated_box.world <span class="p">&amp;</span> ./build/independent_listener
</span></code></pre></td></tr></table></div></figure>


<p>実行すると、以下の動画のようになります。<br/>
先ほどまでのように、<code>gz topic</code>によるアプリケーションとは異なり、箱の状態が端末に表示されていることがわかります。<br/>
<strong>注目 : </strong>もし、Gazeboは起動するが、箱が動ないという現象に陥ったなら、それは、パス通しがうまく行っていません。一つ前の項でパス通しをしていますので、<code>libanimated_box.so</code>ファイルのあるディレクトリで、以下のコマンドを実行し、パス通しをし直しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">GAZEBO_PLUGIN_PATH</span><span class="o">=</span><span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>:<span class="nv">$GAZEBO_PLUGIN_PATH</span>
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、この現象は、パスを通した後に一旦端末を閉じ、新しい端末で実行した場合に起きるようです。</p>

<div class="youtube-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/e3kCrol8XA8" frameborder="0" allowfullscreen></iframe>
</div>


<h2>シミュレーションを起動し、独自の実行ファイルを接続する。</h2>

<p>Gazeboが起動していないことを確認してください。
例<code>integrated_main</code>は以下のようになっています。</p>

<ol>
<li><p>箱を表示するシミュレーションを起動する。</p></li>
<li><p>シミュレーションにリスナを接続する。</p></li>
<li><p>リスナはタイムスタンプと姿勢を受け取り、それぞれをプリントアウトします。</p></li>
</ol>


<p>ファイル<code>integrated_main</code>を実行しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/gazebo_animatebox_tutorial
</span><span class='line'>./build/integrated_main animated_box.world
</span></code></pre></td></tr></table></div></figure>


<p>シミュレーションを見るために、以下のコマンドを実行しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gzclient
</span></code></pre></td></tr></table></div></figure>


<p>実行すると、以下の動画のようになります。<br/>
先ほどと同様、端末に箱の状態が表示されますが、コマンド一つでGazeboが立ち上がっていないところに違いがあります。つまり、今回は、<code>gzserver</code>のみを立ち上げ、その後手動で<code>gzclient</code>を立ち上げたということです。この、<code>gzserver</code>と<code>gzclient</code>の概念については<a href="http://cir-kit.github.io/blog/2015/01/31/gazebo-components/">GAZEBOを使ってみよう ! (Gazebo コンポーネント 編)</a>で説明していますので、そちらをご覧ください。</p>

<div class="youtube-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/dY7pIIXt85E" frameborder="0" allowfullscreen></iframe>
</div>


<h2>ソースコード</h2>

<h3>independent_listner.cc</h3>

<p>実行しているシミュレーションに接続し、姿勢情報トピックを受け取り、物体の姿勢を表示します。</p>

<h3>integrated_main.cc</h3>

<p>シミュレーションを起動し、姿勢情報トピックを受け取り、物体の姿勢を表示します。</p>

<h3>animated_box.cc</h3>

<p>シミュレーションのアニメーション要素を定義したプラグインライブラリです。アニメーション要素とは、シミュレーションの中で、箱を動かすようなものです。</p>

<h3>animated_box.world</h3>

<p>シミュレーションの環境とその環境下に置く箱のについて定義下XMLファイルです。</p>

<h3>CMakeLists.txt</h3>

<p>スクリプトをビルドするCMakeです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.2-9:ロボットを作ってみよう ! (ロボットにグリッパを取り付ける 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/02/01/gazebo-attach-gripper-to-robot/"/>
    <updated>2015-02-01T01:24:00+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/02/01/gazebo-attach-gripper-to-robot</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>02/01/2015 (Sun)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第二弾「Build a Robot」。<br/>
このチュートリアルではロボットを作ったり、修正したりします。また、センサ、アクチュエータを搭載した車輪型ロボットを作り、モデルを描画するなどの実践例も行います。<br/>
今回はその「Attach Gripper to Robot」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>BEGINNER</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=build_robot">GAZEBO Tutorial-Build a Robot</a></p>

<h2>はじめに</h2>

<h4>始める前に以下を参照してください（してない人は）</h4>

<ul>
<li><p><a href="http://cir-kit.github.io/2015/01/31/gazebo-make-a-mobile-robot/">移動ロボットを作る</a></p></li>
<li><p><a href="http://cir-kit.github.io/2015/01/31/gazebo-make-a-simple-gripper">簡単なグリッパを作る</a></p></li>
</ul>


<p>このチュートリアルでは、すでに存在するロボットの部品を組み立てて、新しいロボットを作るにはどうするかについて説明します。例えば、移動ロボットに簡単な腕とグリッパを取り付けると言った具合です。</p>

<h2>ロボットの組み立て</h2>

<p>Gazeboを立ち上げてください。その際に、以前のチュートリアルで製作したロボットを読み込むことができるか確認してください。</p>

<h3>移動台車ベース</h3>

<ol>
<li><p>以前<a href="http://cir-kit.github.io/2015/01/31/gazebo-make-a-mobile-robot/">移動ロボットを作る</a>で以下のような移動ロボット（台車）を作成したはずです。
<img src="http://cir-kit.github.io/images/2015-02-01-gazebo-attach-gripper-to-robot/Mobile_base.png" alt="Mobile_base" /></p></li>
<li><p>このチュートリアルでは<code>~/.gazebo/models/my_robot/model.sdf</code>を修正し、モデルをより大きくすることでグリッパを搭載します。故に、以下のようにして、<code>model.sdf</code>を修正してゆきましょう。:</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/my_robot/model.sdf
</span></code></pre></td></tr></table></div></figure>


<p>以下のようにして、モデルを大きくし、タイヤの位置を設定し直します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&#39;1.0&#39;?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&#39;1.4&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;mobile_base&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&#39;chassis&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0 0 .25 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>        <span class="nt">&lt;mass&gt;</span>20.0<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pose&gt;</span>-0.1 0 -0.1 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>        <span class="nt">&lt;inertia&gt;</span>
</span><span class='line'>          <span class="nt">&lt;ixx&gt;</span>0.5<span class="nt">&lt;/ixx&gt;</span>
</span><span class='line'>          <span class="nt">&lt;iyy&gt;</span>1.0<span class="nt">&lt;/iyy&gt;</span>
</span><span class='line'>          <span class="nt">&lt;izz&gt;</span>0.1<span class="nt">&lt;/izz&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/inertia&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>      <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&#39;collision&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;box&gt;</span>
</span><span class='line'>            <span class="nt">&lt;size&gt;</span>2 1 0.3<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&#39;visual&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;box&gt;</span>
</span><span class='line'>            <span class="nt">&lt;size&gt;</span>2 1 0.3<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>      <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&#39;caster_collision&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pose&gt;</span>-0.8 0 -0.125 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sphere&gt;</span>
</span><span class='line'>            <span class="nt">&lt;radius&gt;</span>.125<span class="nt">&lt;/radius&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/sphere&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;surface&gt;</span>
</span><span class='line'>          <span class="nt">&lt;friction&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ode&gt;</span>
</span><span class='line'>              <span class="nt">&lt;mu&gt;</span>0<span class="nt">&lt;/mu&gt;</span>
</span><span class='line'>              <span class="nt">&lt;mu2&gt;</span>0<span class="nt">&lt;/mu2&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ode&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/friction&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/surface&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&#39;caster_visual&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pose&gt;</span>-0.8 0 -0.125 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sphere&gt;</span>
</span><span class='line'>            <span class="nt">&lt;radius&gt;</span>.125<span class="nt">&lt;/radius&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/sphere&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;left_wheel&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0.8 0.6 0.125 0 1.5707 1.5707<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;cylinder&gt;</span>
</span><span class='line'>            <span class="nt">&lt;radius&gt;</span>.125<span class="nt">&lt;/radius&gt;</span>
</span><span class='line'>            <span class="nt">&lt;length&gt;</span>.05<span class="nt">&lt;/length&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/cylinder&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;cylinder&gt;</span>
</span><span class='line'>            <span class="nt">&lt;radius&gt;</span>.125<span class="nt">&lt;/radius&gt;</span>
</span><span class='line'>            <span class="nt">&lt;length&gt;</span>.05<span class="nt">&lt;/length&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/cylinder&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;right_wheel&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0.8 -0.6 0.125 0 1.5707 1.5707<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;cylinder&gt;</span>
</span><span class='line'>            <span class="nt">&lt;radius&gt;</span>.125<span class="nt">&lt;/radius&gt;</span>
</span><span class='line'>            <span class="nt">&lt;length&gt;</span>.05<span class="nt">&lt;/length&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/cylinder&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>      <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>          <span class="nt">&lt;cylinder&gt;</span>
</span><span class='line'>            <span class="nt">&lt;radius&gt;</span>.125<span class="nt">&lt;/radius&gt;</span>
</span><span class='line'>            <span class="nt">&lt;length&gt;</span>.05<span class="nt">&lt;/length&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/cylinder&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>    <span class="nt">&lt;joint</span> <span class="na">type=</span><span class="s">&quot;revolute&quot;</span> <span class="na">name=</span><span class="s">&quot;left_wheel_hinge&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0 0 -0.03 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;child&gt;</span>left_wheel<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>      <span class="nt">&lt;parent&gt;</span>chassis<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>      <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;xyz&gt;</span>0 1 0<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>    <span class="nt">&lt;joint</span> <span class="na">type=</span><span class="s">&quot;revolute&quot;</span> <span class="na">name=</span><span class="s">&quot;right_wheel_hinge&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0 0 0.03 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;child&gt;</span>right_wheel<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>      <span class="nt">&lt;parent&gt;</span>chassis<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>      <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;xyz&gt;</span>0 1 0<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/model&gt;</span>
</span><span class='line'> <span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>すると以下の様になっているはずです。
<img src="http://cir-kit.github.io/images/2015-02-01-gazebo-attach-gripper-to-robot/Mobile_base_large.png" alt="Mobile_base_large" /></p>

<h2>ロボットを組み立てる</h2>

<ol>
<li>簡単なグリッパを取り付けたロボットを作成するために、新しいモデルディレクトリを作成しましょう。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/.gazebo/models/simple_mobile_manipulator
</span></code></pre></td></tr></table></div></figure>


<p>そしてモデルのConfigファイル<code>model.config</code>を編集しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/simple_mobile_manipulator/model.config
</span></code></pre></td></tr></table></div></figure>


<p>作成する<code>model.config</code>の内容は以下のようにしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;model&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Simple Mobile Manipulator<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&#39;1.4&#39;</span><span class="nt">&gt;</span>manipulator.sdf<span class="nt">&lt;/sdf&gt;</span>
</span><span class='line'>  <span class="nt">&lt;author&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>My Name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;email&gt;</span>me@my.email<span class="nt">&lt;/email&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/author&gt;</span>
</span><span class='line'>  <span class="nt">&lt;description&gt;</span>
</span><span class='line'>    My simple mobile manipulator
</span><span class='line'>  <span class="nt">&lt;/description&gt;</span>
</span><span class='line'><span class="nt">&lt;/model&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>続いて、モデルのSDFファイル<code>manipulator.sdf</code>を作成しましょう。:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/simple_mobile_manipulator/manipulator.sdf
</span></code></pre></td></tr></table></div></figure>


<p>作成する<code>manipulator.sdf</code>の内容は以下のようにしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.3&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;simple_mobile_manipulator&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://my_gripper<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>1.3 0 0.1 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://my_robot<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>0 0 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;arm_gripper_joint&quot;</span> <span class="na">type=</span><span class="s">&quot;revolute&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;parent&gt;</span>mobile_base::chassis<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>      <span class="nt">&lt;child&gt;</span>simple_gripper::riser<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>      <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;limit&gt;</span>
</span><span class='line'>          <span class="nt">&lt;lower&gt;</span>0<span class="nt">&lt;/lower&gt;</span>
</span><span class='line'>          <span class="nt">&lt;upper&gt;</span>0<span class="nt">&lt;/upper&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/limit&gt;</span>
</span><span class='line'>        <span class="nt">&lt;xyz&gt;</span>0 0 1<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- attach sensor to the gripper --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://hokuyo<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>      <span class="nt">&lt;pose&gt;</span>1.3 0 0.3 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;hokuyo_joint&quot;</span> <span class="na">type=</span><span class="s">&quot;revolute&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;child&gt;</span>hokuyo::link<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>      <span class="nt">&lt;parent&gt;</span>simple_gripper::palm<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>      <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;xyz&gt;</span>0 0 1<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>        <span class="nt">&lt;limit&gt;</span>
</span><span class='line'>          <span class="nt">&lt;upper&gt;</span>0<span class="nt">&lt;/upper&gt;</span>
</span><span class='line'>          <span class="nt">&lt;lower&gt;</span>0<span class="nt">&lt;/lower&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/limit&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/model&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>編集した<code>model.config</code>と<code>manipulator.sdf</code>をセーブしたら、Gazeboを立ち上げ、<strong>Insert</strong>タブより<strong>Simple Mobile Manipulator</strong>モデルを選択して、作成したモデルをシミュレータに表示してください。すると、以下のようになっているはずです。
<img src="http://cir-kit.github.io/images/2015-02-01-gazebo-attach-gripper-to-robot/Simple_mobile_manipulator.png" alt="Simple_mobile_manipulator" /></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No.2-8:ロボットを作ってみよう ! (簡単なグリッパーを作る 編)]]></title>
    <link href="http://cir-kit.github.io/blog/2015/01/31/gazebo-make-a-simple-gripper/"/>
    <updated>2015-01-31T22:35:00+09:00</updated>
    <id>http://cir-kit.github.io/blog/2015/01/31/gazebo-make-a-simple-gripper</id>
    <content type="html"><![CDATA[<p><img src="http://cir-kit.github.io/images/gazebo_logo.png" alt="gazebo_logo" /></p>

<h5>検証日時</h5>

<p>01/30/2015 (Fri)</p>

<h5>概要</h5>

<p>Gazeboのチュートリアル第二弾「Build a Robot」。<br/>
このチュートリアルではロボットを作ったり、修正したりします。また、センサ、アクチュエータを搭載した車輪型ロボットを作り、モデルを描画するなどの実践例も行います。<br/>
今回はその「Make a simple gripper」編です。<br/>
公式サイトを適当に翻訳しただけですので、あしからず。</p>

<h5>レベル</h5>

<p><strong>BEGINNER</strong></p>

<!-- more -->


<h5>環境</h5>

<table>
<thead>
<tr>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
<th style="text-align:center;"> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong>PC</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Lenovo ThinkPad X240 </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Prosessor</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Intel Core i7-4600U (2.10GHz, 4MB, 1600MHz) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>RAM</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> PC3-12800 DDR3L (8GB) </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>OS</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Ubuntu 14.04 LTS 64bit </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Kernel</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> 3.13.0-44-generic </td>
</tr>
<tr>
<td style="text-align:center;"> <strong>Gazebo</strong> </td>
<td style="text-align:center;"> <strong> : </strong> </td>
<td style="text-align:center;"> Version 5.0.1 </td>
</tr>
</tbody>
</table>


<h5>参考</h5>

<p><a href="http://gazebosim.org/tutorials?cat=build_robot">GAZEBO Tutorial-Build a Robot</a></p>

<h2>はじめに</h2>

<p>このチュートリアルでは，２つの棒を使ったピンチンググリッパーの作り方を説明します。</p>

<h2>モデルディレクトリを作る</h2>

<p>このチュートリアルを始めるために、<a href="http://gazebosim.org/user_guide/started__models__database.html">モデルデータベースドキュメント</a>と<a href="http://sdformat.org/spec">SDF</a>のレファレンスをご覧ください。</p>

<h2>モデルを作る</h2>

<ol>
<li><code>world</code> ファイルのためのディレクトリを作成しましょう。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/simple_gripper_tutorial
</span><span class='line'><span class="nb">cd</span> ~/simple_gripper_tutorial
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>まずはシンプルな空の<code>world</code>から始めます。<code>world</code>ファイルを作成しましょう。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/simple_gripper_tutorial/gripper.world
</span></code></pre></td></tr></table></div></figure>


<p>以下のSDFファイル<a href="http://bitbucket.org/osrf/gazebo_tutorials/raw/default/simple_gripper/files/box.sdf">gripper.world</a>をコピペしてください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;world</span> <span class="na">name=</span><span class="s">&quot;default&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- A ground plane --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://ground_plane<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- A global light source --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://sun<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;include&gt;</span>
</span><span class='line'>      <span class="nt">&lt;uri&gt;</span>model://my_gripper<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/include&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/world&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>~/.gazebo</code> ディレクトリの中に，<code>model</code> ディレクトリを作成してください。作成したディレクトリには、これから作成するモデルを置いてゆきます。:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/.gazebo/models/my_gripper
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>作成するグリッパの基本的な構造を作りましょう。その最も簡単な方法は静的モデルを作り、リンクを一つ追加することです。静的モデルとは、シミュレーションがスタートしてもリンクが動かないということを意味します。これにより、シミュレータをスタートさせ、ジョイントを追加する前に、モデルを見ながら、リンクの位置を調べることができます。</p></li>
<li><p>以下のように、<a href="http://bitbucket.org/osrf/gazebo_tutorials/raw/default/simple_gripper/files/model.config">model.config</a>を作成しましょう。</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;model&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>My Gripper<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&#39;1.4&#39;</span><span class="nt">&gt;</span>simple_gripper.sdf<span class="nt">&lt;/sdf&gt;</span>
</span><span class='line'>  <span class="nt">&lt;author&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>My Name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;email&gt;</span>me@my.email<span class="nt">&lt;/email&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/author&gt;</span>
</span><span class='line'>  <span class="nt">&lt;description&gt;</span>
</span><span class='line'>    My awesome robot.
</span><span class='line'>  <span class="nt">&lt;/description&gt;</span>
</span><span class='line'><span class="nt">&lt;/model&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>以下の<a href="http://bitbucket.org/osrf/gazebo_tutorials/raw/default/simple_gripper/files/simple_gripper.sdf">simple_gripper.sdf</a>ファイルをコピペしてください。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;sdf</span> <span class="na">version=</span><span class="s">&quot;1.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;model</span> <span class="na">name=</span><span class="s">&quot;simple_gripper&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;riser&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>-0.15 0.0 0.5 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>                <span class="nt">&lt;pose&gt;</span>0 0 -0.5 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>                <span class="nt">&lt;inertia&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixx&gt;</span>0.01<span class="nt">&lt;/ixx&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixy&gt;</span>0<span class="nt">&lt;/ixy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixz&gt;</span>0<span class="nt">&lt;/ixz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyy&gt;</span>0.01<span class="nt">&lt;/iyy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyz&gt;</span>0<span class="nt">&lt;/iyz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;izz&gt;</span>0.01<span class="nt">&lt;/izz&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/inertia&gt;</span>
</span><span class='line'>                <span class="nt">&lt;mass&gt;</span>10.0<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>            <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.2 0.2 1.0<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>            <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.2 0.2 1.0<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>                <span class="nt">&lt;material&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;script&gt;</span>Gazebo/Purple<span class="nt">&lt;/script&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/material&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>        <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;palm&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0.0 0.0 0.05 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>                <span class="nt">&lt;inertia&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixx&gt;</span>0.01<span class="nt">&lt;/ixx&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixy&gt;</span>0<span class="nt">&lt;/ixy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixz&gt;</span>0<span class="nt">&lt;/ixz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyy&gt;</span>0.01<span class="nt">&lt;/iyy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyz&gt;</span>0<span class="nt">&lt;/iyz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;izz&gt;</span>0.01<span class="nt">&lt;/izz&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/inertia&gt;</span>
</span><span class='line'>                <span class="nt">&lt;mass&gt;</span>0.5<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>            <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.2 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>            <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.2 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>                <span class="nt">&lt;material&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;script&gt;</span>Gazebo/Red<span class="nt">&lt;/script&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/material&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>        <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;left_finger&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0.1 0.2 0.05 0 0 -0.78539<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>                <span class="nt">&lt;inertia&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixx&gt;</span>0.01<span class="nt">&lt;/ixx&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixy&gt;</span>0<span class="nt">&lt;/ixy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixz&gt;</span>0<span class="nt">&lt;/ixz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyy&gt;</span>0.01<span class="nt">&lt;/iyy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyz&gt;</span>0<span class="nt">&lt;/iyz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;izz&gt;</span>0.01<span class="nt">&lt;/izz&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/inertia&gt;</span>
</span><span class='line'>                <span class="nt">&lt;mass&gt;</span>0.1<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>            <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.3 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>            <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.3 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>                <span class="nt">&lt;material&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;script&gt;</span>Gazebo/Blue<span class="nt">&lt;/script&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/material&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>        <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;left_finger_tip&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0.336 0.3 0.05 0 0 1.5707<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>                <span class="nt">&lt;inertia&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixx&gt;</span>0.01<span class="nt">&lt;/ixx&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixy&gt;</span>0<span class="nt">&lt;/ixy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixz&gt;</span>0<span class="nt">&lt;/ixz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyy&gt;</span>0.01<span class="nt">&lt;/iyy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyz&gt;</span>0<span class="nt">&lt;/iyz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;izz&gt;</span>0.01<span class="nt">&lt;/izz&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/inertia&gt;</span>
</span><span class='line'>                <span class="nt">&lt;mass&gt;</span>0.1<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>            <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.2 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>            <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.2 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>                <span class="nt">&lt;material&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;script&gt;</span>Gazebo/Blue<span class="nt">&lt;/script&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/material&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>        <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;right_finger&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0.1 -0.2 0.05 0 0 .78539<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>                <span class="nt">&lt;inertia&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixx&gt;</span>0.01<span class="nt">&lt;/ixx&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixy&gt;</span>0<span class="nt">&lt;/ixy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixz&gt;</span>0<span class="nt">&lt;/ixz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyy&gt;</span>0.01<span class="nt">&lt;/iyy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyz&gt;</span>0<span class="nt">&lt;/iyz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;izz&gt;</span>0.01<span class="nt">&lt;/izz&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/inertia&gt;</span>
</span><span class='line'>                <span class="nt">&lt;mass&gt;</span>0.1<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>            <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.3 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>            <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.3 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>                <span class="nt">&lt;material&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;script&gt;</span>Gazebo/Green<span class="nt">&lt;/script&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/material&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>        <span class="nt">&lt;link</span> <span class="na">name=</span><span class="s">&quot;right_finger_tip&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0.336 -0.3 0.05 0 0 1.5707<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;inertial&gt;</span>
</span><span class='line'>                <span class="nt">&lt;inertia&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixx&gt;</span>0.01<span class="nt">&lt;/ixx&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixy&gt;</span>0<span class="nt">&lt;/ixy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;ixz&gt;</span>0<span class="nt">&lt;/ixz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyy&gt;</span>0.01<span class="nt">&lt;/iyy&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;iyz&gt;</span>0<span class="nt">&lt;/iyz&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;izz&gt;</span>0.01<span class="nt">&lt;/izz&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/inertia&gt;</span>
</span><span class='line'>                <span class="nt">&lt;mass&gt;</span>0.1<span class="nt">&lt;/mass&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/inertial&gt;</span>
</span><span class='line'>            <span class="nt">&lt;collision</span> <span class="na">name=</span><span class="s">&quot;collision&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.2 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/collision&gt;</span>
</span><span class='line'>            <span class="nt">&lt;visual</span> <span class="na">name=</span><span class="s">&quot;visual&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;geometry&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;box&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;size&gt;</span>0.1 0.2 0.1<span class="nt">&lt;/size&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/box&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/geometry&gt;</span>
</span><span class='line'>                <span class="nt">&lt;material&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;script&gt;</span>Gazebo/Green<span class="nt">&lt;/script&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/material&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/visual&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/link&gt;</span>
</span><span class='line'>        <span class="nt">&lt;static&gt;</span>true<span class="nt">&lt;/static&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/model&gt;</span>
</span><span class='line'><span class="nt">&lt;/sdf&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>ここまでで、何が作成できたのかを見るために、<code>world</code>ファイルを実行しましょう。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo ~/simple_gripper_tutorial/gripper.world
</span></code></pre></td></tr></table></div></figure>


<p>すると、以下のようになっているはずです。
<img src="http://cir-kit.github.io/images/2015-01-31-gazebo-make-a-simple-gripper/Simple-gripper-1.png" alt="Simple-gripper-1" /></p>

<ol>
<li>一度でもリンクを作成できたら安心です。<code>simple_gripper.sdf</code>ファイルの中の<code>&lt;/model&gt;</code>と書いてある前に、以下のコードを追加することで、ジョイントを追加することができます。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gedit ~/.gazebo/models/my_gripper/simple_gripper.sdf
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>        <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;palm_left_finger&quot;</span> <span class="na">type=</span><span class="s">&quot;revolute&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0 -0.15 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;child&gt;</span>left_finger<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>            <span class="nt">&lt;parent&gt;</span>palm<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>            <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>                <span class="nt">&lt;limit&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;lower&gt;</span>-0.4<span class="nt">&lt;/lower&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;upper&gt;</span>0.4<span class="nt">&lt;/upper&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/limit&gt;</span>
</span><span class='line'>                <span class="nt">&lt;xyz&gt;</span>0 0 1<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>        <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;left_finger_tip&quot;</span> <span class="na">type=</span><span class="s">&quot;revolute&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0 0.1 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;child&gt;</span>left_finger_tip<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>            <span class="nt">&lt;parent&gt;</span>left_finger<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>            <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>                <span class="nt">&lt;limit&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;lower&gt;</span>-0.4<span class="nt">&lt;/lower&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;upper&gt;</span>0.4<span class="nt">&lt;/upper&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/limit&gt;</span>
</span><span class='line'>                <span class="nt">&lt;xyz&gt;</span>0 0 1<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>        <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;palm_right_finger&quot;</span> <span class="na">type=</span><span class="s">&quot;revolute&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0 0.15 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;child&gt;</span>right_finger<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>            <span class="nt">&lt;parent&gt;</span>palm<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>            <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>                <span class="nt">&lt;limit&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;lower&gt;</span>-0.4<span class="nt">&lt;/lower&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;upper&gt;</span>0.4<span class="nt">&lt;/upper&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/limit&gt;</span>
</span><span class='line'>                <span class="nt">&lt;xyz&gt;</span>0 0 1<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>        <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;right_finger_tip&quot;</span> <span class="na">type=</span><span class="s">&quot;revolute&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pose&gt;</span>0 0.1 0 0 0 0<span class="nt">&lt;/pose&gt;</span>
</span><span class='line'>            <span class="nt">&lt;child&gt;</span>right_finger_tip<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>            <span class="nt">&lt;parent&gt;</span>right_finger<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>            <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>                <span class="nt">&lt;limit&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;lower&gt;</span>-0.4<span class="nt">&lt;/lower&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;upper&gt;</span>0.4<span class="nt">&lt;/upper&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/limit&gt;</span>
</span><span class='line'>                <span class="nt">&lt;xyz&gt;</span>0 0 1<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/joint&gt;</span>
</span><span class='line'>        <span class="nt">&lt;joint</span> <span class="na">name=</span><span class="s">&quot;palm_riser&quot;</span> <span class="na">type=</span><span class="s">&quot;prismatic&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;child&gt;</span>palm<span class="nt">&lt;/child&gt;</span>
</span><span class='line'>            <span class="nt">&lt;parent&gt;</span>riser<span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>            <span class="nt">&lt;axis&gt;</span>
</span><span class='line'>                <span class="nt">&lt;limit&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;lower&gt;</span>0<span class="nt">&lt;/lower&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;upper&gt;</span>0.9<span class="nt">&lt;/upper&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/limit&gt;</span>
</span><span class='line'>                <span class="nt">&lt;xyz&gt;</span>0 0 1<span class="nt">&lt;/xyz&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/axis&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/joint&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、モデルを<code>non-static</code>にしましょう。：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>        ...
</span><span class='line'>        <span class="nt">&lt;static&gt;</span>false<span class="nt">&lt;/static&gt;</span>
</span><span class='line'>        ...
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Gazeboをもう一度立ち上げましょう。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gazebo ~/simple_gripper_tutorial/gripper.world
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>モデルの上で右クリックをし、<strong>&ldquo;View->Joints&rdquo;</strong>というのを選択しましょう。新たに作成したジョイントが表示されます。
<img src="http://cir-kit.github.io/images/2015-01-31-gazebo-make-a-simple-gripper/Simple-gripper-joints.png" alt="Simple-gripper-joints" /></p></li>
<li><p>ジョイントコントロールウィジェットを使えば、それぞれのジョイントの力をコントロールすることができます。グリッパーモデルをクリックしてください。次に、GUIの右端にある直立したハンドル(白いポチが３つ付いているところ)を左にドラックしてください。するとウィジェットが表示されます。ウィジェットでは、それぞれのジョイントのリストとそのスライダーを表示しています。<strong>Force</strong>タブを選択し、スライダーを使ってそれぞれのジョイントに力を適用し、グリッパが動くことを確認してください。例えば、<code>palm_riser</code>の値を<code>10[N]</code>にセットすると、以下のようになるはずです。:</p></li>
</ol>


<div class="youtube-container">
<iframe width="420" height="315" src="https://www.youtube.com/embed/lPvVqTvr_BA" frameborder="0" allowfullscreen></iframe>
</div>


<ol>
<li><p>オプション</p></li>
<li><p>小さい箱もしくは円柱をシミュレータに追加し、グリッパーのところに置いてください。</p></li>
<li><p>GUIインターフェースを使って物体を持ち上げてみましょう。</p>

<p><strong>コツ : </strong>物体への慣性力をなるべく少なくするとうまく行くでしょう。</p></li>
</ol>


<h4>Next >> <a href="http://cir-kit.github.io/blog/2015/02/01/gazebo-attach-gripper-to-robot/:">グリッパをロボットに取り付ける</a></h4>
]]></content>
  </entry>
  
</feed>
